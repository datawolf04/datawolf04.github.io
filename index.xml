<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Steven Wolf - Data World</title>
<link>https://datawolf04.github.io/</link>
<atom:link href="https://datawolf04.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>A place to play with data</description>
<generator>quarto-1.6.42</generator>
<lastBuildDate>Thu, 06 Mar 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Ready, Aim, Compute!</title>
  <dc:creator>Steven Wolf</dc:creator>
  <link>https://datawolf04.github.io/posts/projectileMotion/projectileMotionWithDrag.html</link>
  <description><![CDATA[ 





<div>

</div>
<div class="quarto-layout-panel" data-layout="[75, 25]">
<div class="quarto-layout-row">
<div id="first-column" class="quarto-layout-cell" style="flex-basis: 75.0%;justify-content: flex-start;">
<p>I’ve stalled out a bit on my heat equation modeling project because I’ve been thinking about ways to make it better. Also, I’ve been busy with the real world. So I thought I’d adapt something that I’ve used in class and post it here. Plus, I can’t let my students have <em><em>all</em></em> the fun, right? In the standard treatment, we often make approximations that may or may not be valid, and never test these approximations. In fact, that’s why we physicists often get made fun of, because we are talking about spherical cows. I like to get my students to think beyond spherical cows and give them tools to examine the limits of these approximations. So I’m going to build the models, and then play around a bit.</p>
</div>
<div id="second-column" class="quarto-layout-cell" style="flex-basis: 25.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.sphericalcowblog.com/spherical-cows"><img src="https://datawolf04.github.io/posts/projectileMotion/spherical-cow.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></a></p>
</figure>
</div>
</div>
</div>
</div>
<section id="a-typical-physics-1-projectile-motion-problem" class="level2">
<h2 class="anchored" data-anchor-id="a-typical-physics-1-projectile-motion-problem">A typical Physics 1 projectile motion problem</h2>
<p>I’ve given this problem (or variations of it) in my physics class for years:</p>
<blockquote class="blockquote">
<p>While on a vacation to Kenya, you visit the port city of Mombassa on the Indian Ocean. On the coast, you find an old Portuguese fort probably built in the 16th century. Large stone walls rise vertically from the shore to protect the fort from cannon fire from pirate ships. You wonder how close a pirate ship would have to sail to the fort to be in range of the fort’s cannon. Of course you realize that the range depends on the velocity that the cannonball leaves the cannon, as well as the height of the cliff.</p>
</blockquote>
<p>Usually, we set up a coordinate system like the picture below:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/projectileMotion/systemFig.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:50.0%"></p>
</figure>
</div>
<p>Using this coordinate system, we can determine the equations of motion as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign*%7D%0Aa_x(t)%20=%20%5Cfrac%7Bdv_x%7D%7Bdt%7D%20&amp;=%200%20%5C%5C%0Aa_y(t)%20=%20%5Cfrac%7Bdv_y%7D%7Bdt%7D%20&amp;=%20-g%20%5C%5C%0A%5Cend%7Balign*%7D%0A"></p>
<p>These are integrated to find the velocity with the condition: <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bv%7D_i%20=%20(v_i%5Ccos%5Ctheta,%20v_i%5Csin%5Ctheta)%20=%20(v_x(0),v_y(0))">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign*%7D%0Av_x(t)%20=%20%5Cfrac%7Bdx%7D%7Bdt%7D%20&amp;=%20v_i%20%5Ccos%5Ctheta%20t%20%5C%5C%0Av_y(t)%20=%20%5Cfrac%7Bdy%7D%7Bdt%7D%20&amp;=%20v_i%20%5Csin%5Ctheta%20t%20-%20gt%20%5C%5C%0A%5Cend%7Balign*%7D%0A"></p>
<p>These are integrated again to find the position with the condition: <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Br%7D_i%20=%20(0,H)%20=%20(x(0),y(0))"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign*%7D%0Ax(t)%20&amp;=%20v_i%20%5Ccos%5Ctheta%20t%20%5C%5C%0Ay(t)%20&amp;=%20H%20+%20v_i%5Csin%5Ctheta%20t%20-%20%5Cfrac%7B1%7D%7B2%7Dgt%5E2%20%5C%5C%0A%5Cend%7Balign*%7D%0A"></p>
<p>We are also interested in the time of flight (i.e., How long the projectile is in the air):</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay(T)%20=%200%20=%20H%20+%20v_i%20%5Csin%5Ctheta%20T%20-%20%5Cfrac%7B1%7D%7B2%7D%20gT%5E2%20%5Cimplies%20T%20=%20%5Cfrac%7Bv_i%5Csin%5Ctheta%20+%20%5Csqrt%7Bv_i%5E2%20%5Csin%5E2%5Ctheta%20+%202gH%7D%7D%7Bg%7D%0A"></p>
<p>(Note, since the projectile is launched at <img src="https://latex.codecogs.com/png.latex?t=0">, we expect the time of flight <img src="https://latex.codecogs.com/png.latex?T%3E0">, so I have thrown out the negative solution for <img src="https://latex.codecogs.com/png.latex?T"> in the equation above.)</p>
<p>And the range<sup>1</sup> of the projectile: <img src="https://latex.codecogs.com/png.latex?%0AD%20=%20x(T)%20=%20v_i%5Ccos%5Ctheta%20T%20=%20v_i%20%5Ccos%5Ctheta%20%5Cfrac%7Bv_i%5Csin%5Ctheta%20+%20%5Csqrt%7Bv_i%5E2%20%5Csin%5E2%5Ctheta%20+%202gH%7D%7D%7Bg%7D%0A"></p>
<p>This allows us to give physics students problems, and get them to calculate things. We also say that the motion of the cannonball is <em>parabolic</em>, and a bunch of other stuff that only works if we are talking about spherical cows flying around in vacuum. Anyone who has seen a shot tracer of a golf ball will say that these don’t look like the parabolas we all drew back in High School Algebra classes. So what’s going on?</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/projectileMotion/shotTracer.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:50.0%"></p>
</figure>
</div>
<section id="ideal-projectile-motion-thinking-about-code" class="level3">
<h3 class="anchored" data-anchor-id="ideal-projectile-motion-thinking-about-code">Ideal Projectile Motion: Thinking about code</h3>
<p>At this point, we have fully specified the problem. Any motion is fully specified given the cliff height <img src="https://latex.codecogs.com/png.latex?H">, launch speed <img src="https://latex.codecogs.com/png.latex?v_i">, and launch angle <img src="https://latex.codecogs.com/png.latex?%5Ctheta">. We are done. Computationally, we want to be able to calculate all the important things, and define all of the important functions. I have chosen to use a python <em>class</em> to do so. The nice thing about using classes is that you can specify all of the variables for the system, but not have them cluttering the working environment.</p>
<div id="3fde400d" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> idealProjectile:</span>
<span id="cb1-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Does the standard Physics 1 treatment of a projectile on earth for a projectile </span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  fired from an elevated position</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Inputs:</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    vLaunchMag = launch speed in m/s</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    vLaunchDir = launch angle measured from horizontal in degrees</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    height = elevation of the position in m</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Outputs: (All in SI units)</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tof = time of flight in seconds</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    maxX = range of projectile in m</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    position = function that calculates vector position as a function of time</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    velocity = function that calculates vector velocity as a function of time</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    acceleration = function that calculates vector acceleration as a function of time</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb1-18">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, vLaunchMag, vLaunchDir, height):</span>
<span id="cb1-19">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.v0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vLaunchMag</span>
<span id="cb1-20">    theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(vLaunchDir)</span>
<span id="cb1-21">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> theta</span>
<span id="cb1-22">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height</span>
<span id="cb1-23">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.81</span></span>
<span id="cb1-24">    g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.g</span>
<span id="cb1-25">    v0x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vLaunchMag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.cos(theta)</span>
<span id="cb1-26">    v0y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vLaunchMag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.sin(theta)</span>
<span id="cb1-27">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tof <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (v0y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.sqrt(v0y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>g<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>height))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>g</span>
<span id="cb1-28">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.maxX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v0x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tof</span>
<span id="cb1-29"></span>
<span id="cb1-30">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> position(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, t):</span>
<span id="cb1-31">    v0, theta, g, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.v0, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.theta, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.g, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h</span>
<span id="cb1-32">    v0x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.cos(theta)</span>
<span id="cb1-33">    v0y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.sin(theta)</span>
<span id="cb1-34">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v0x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> t</span>
<span id="cb1-35">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> v0y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [x,y]</span>
<span id="cb1-37">  </span>
<span id="cb1-38">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> velocity(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>,t):</span>
<span id="cb1-39">    v0, theta, g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.v0, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.theta, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.g</span>
<span id="cb1-40">    v0x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.cos(theta)</span>
<span id="cb1-41">    v0y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.sin(theta)</span>
<span id="cb1-42">    vx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v0x</span>
<span id="cb1-43">    vy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v0y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> g<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>t</span>
<span id="cb1-44">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [vx,vy]</span>
<span id="cb1-45"></span>
<span id="cb1-46">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> acceleration(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>,t):</span>
<span id="cb1-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.g]</span></code></pre></div>
</div>
</section>
</section>
<section id="air-resistance-its-a-drag." class="level2">
<h2 class="anchored" data-anchor-id="air-resistance-its-a-drag.">Air resistance: It’s a drag.</h2>
<p>When we model motion in a fluid, for large, fast objects we can write:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7BF%7D_%7B%5Ctext%7Bair%7D%7D%20=%20-c%20%5Cleft%7C%5Cvec%7Bv%7D%5Cright%7C%5Cvec%7Bv%7D%20=%20-c%20%5Csqrt%7Bv_x(t)%5E2+v_y(t)%5E2%7D%20(v_x(t),%20v_y(t))%0A"> where the coefficient <img src="https://latex.codecogs.com/png.latex?c"> is a constant that depends on the size and shape of the object moving through air, as well as the density of the fluid. This model can get more complicated, and <a href="https://en.wikipedia.org/wiki/Drag_(physics)">wikipedia</a> discusses it further at a reasonably intro-level. But I won’t bore you here.</p>
<p>Including this in our model for projectile motion allows us to generate new equations of motion, and this can be done for all levels of physics.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign*%7D%0Aa_x(t)%20=%20%5Cfrac%7Bdv_x%7D%7Bdt%7D%20&amp;=%20-%20%5Cfrac%7Bc%7D%7Bm%7D%20%5Csqrt%7Bv_x%5E2+v_y%5E2%7D%20v_x%5C%5C%0Aa_y(t)%20=%20%5Cfrac%7Bdv_y%7D%7Bdt%7D%20&amp;=%20-g%20-%20%5Cfrac%7Bc%7D%7Bm%7D%20%5Csqrt%7Bv_x%5E2+v_y%5E2%7D%20v_y%5C%5C%0A%5Cend%7Balign*%7D%0A"></p>
<p>These are integrated to find the velocity with the condition: <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bv%7D_i%20=%20(v_i%5Ccos%5Ctheta,%20v_i%5Csin%5Ctheta)%20=%20(v_x(0),v_y(0))">, and we get…an error.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/projectileMotion/error404.jpg" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:30.0%"></p>
</figure>
</div>
<p>Well, we can integrate these equations if we use, well, I’ll let Katherine Johnson’s character from the movie <em>Hidden Figures</em> tell you:</p>
<div style="text-align:center">
<iframe width="400" height="315" allowfullscreen="" src="https://www.youtube.com/embed/8xPRn9weLYg?si=IgIhM9ozVqNLZxMs">
</iframe>
</div>
<p>We won’t actually use Euler’s method, but instead use the default method in Python’s <code>scipy.integrate.solve_ivp</code> function - <a href="https://doi.org/10.1016/0771-050X(80)90013-3">an application of the Runge-Kutta method</a> which is still pretty ancient. (Well, it’s older than me!) I won’t be going into the details of the method here.</p>
<p>The level of the class that I’m teaching determines how I proceed from here. If we have an upper level class, students use the numeric integrator of their choice, be it in Mathematica, Matlab, Python, or something else. In an intro class, I walk through Euler (or Euler-Cromer) integration with them. (And they will have seen a 1D implementation of Euler’s method before we tackle this 2D version.)</p>
<section id="thinking-about-code" class="level3">
<h3 class="anchored" data-anchor-id="thinking-about-code">Thinking about code</h3>
<p>Once we add the projectile mass <img src="https://latex.codecogs.com/png.latex?m">, and drag coefficient <img src="https://latex.codecogs.com/png.latex?c"> to the parameters that we had for the the ideal motion, <img src="https://latex.codecogs.com/png.latex?H">, <img src="https://latex.codecogs.com/png.latex?v_i">, and <img src="https://latex.codecogs.com/png.latex?%5Ctheta">, we have fully specified the problem. Despite the fact that we cannot integrate the equations of motion analytically, we can do so numerically. As before, I have chosen to use a python <em>class</em> to carry this out. Actually, I’ve created <em>two</em> classes to do this. Let’s go into the why for this choice in the next sections.</p>
<section id="a-note-about-integrating-differential-equations-numerically" class="level4">
<h4 class="anchored" data-anchor-id="a-note-about-integrating-differential-equations-numerically">A note about integrating differential equations numerically</h4>
<p>In physics, we use Newton’s laws to generate differential equations governing the motion of a system. Specifically, we get the acceleration, which is the <em>second derivative</em> of position. So if we want the position as a function of time for a system, this is a <em><em>2nd order</em></em> differential equation. However, numerical methods are built on solving <em><em>1st order</em></em> differential equations.<sup>2</sup></p>
<p>Let’s think about the function <img src="https://latex.codecogs.com/png.latex?u(t)"> which returns a vector comprised of the position vector combined with the velocity vector.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Au(t)%20=%20%5Cleft%5Bx(t),%20y(t),%20v_x(t),%20v_y(t)%20%5Cright%5D%0A"></p>
<p>We can take the time derivative of this function (I’ll use a dot to signify differentiation with respect to time) and express it in terms of the velocity and acceleration <img src="https://latex.codecogs.com/png.latex?%0A%5Cdot%7Bu%7D(t)%20=%20%5Cleft%5B%5Cdot%7Bx%7D(t),%20%5Cdot%7By%7D(t),%20%5Cdot%7Bv%7D_x(t),%20%5Cdot%7Bv%7D_y(t)%20%5Cright%5D%20=%20%5Cleft%5Bv_x(t),%20v_y(t),%20a_x(t),%20a_y(t)%5Cright%5D%0A"></p>
<p><code>dragEOM</code> is this function <img src="https://latex.codecogs.com/png.latex?%5Cdot%7Bu%7D(t)"> applied to our projectile system.</p>
<div id="607c4221" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> dragEOM:</span>
<span id="cb2-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Equations of motion for projectile system with turbulent drag fired from an elevated position</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Inputs:</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    vLaunchMag = launch speed in m/s</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    vLaunchDir = launch angle measured from horizontal in degrees</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    height = elevation of the position in m</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    mass = mass of projectile in kg</span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    dragCoef = drag coefficient for system in kg/m</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Outputs:</span></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    udot = [xdot, ydot, vxdot, vydot]</span></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    splash = function that returns y coordinate (needed for integration)</span></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb2-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, vLaunchMag, vLaunchDir, height, mass, dragCoef):</span>
<span id="cb2-15">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.v0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vLaunchMag</span>
<span id="cb2-16">      theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(vLaunchDir)</span>
<span id="cb2-17">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> theta</span>
<span id="cb2-18">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height</span>
<span id="cb2-19">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.81</span></span>
<span id="cb2-20">      g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.g</span>
<span id="cb2-21">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.coef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dragCoef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>mass</span>
<span id="cb2-22">      v0x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vLaunchMag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.cos(theta)</span>
<span id="cb2-23">      v0y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vLaunchMag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.sin(theta)</span>
<span id="cb2-24">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.idealTof <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (v0y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.sqrt(v0y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>g<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>height))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>g</span>
<span id="cb2-25">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.u0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, height, v0x, v0y]</span>
<span id="cb2-26"></span>
<span id="cb2-27">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>,t,u):</span>
<span id="cb2-28">      g, coef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.g, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.coef</span>
<span id="cb2-29">      x, y, vx, vy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u</span>
<span id="cb2-30">      xdot, ydot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vx, vy</span>
<span id="cb2-31">      vxdot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>coef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.sqrt(vx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> vy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> vx</span>
<span id="cb2-32">      vydot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> coef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.sqrt(vx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> vy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> vy</span>
<span id="cb2-33">      udot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [xdot, ydot, vxdot, vydot]</span>
<span id="cb2-34">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> udot</span>
<span id="cb2-35"></span>
<span id="cb2-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> splash(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>,t,u):</span>
<span id="cb2-37">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> u[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb2-38"></span>
<span id="cb2-39">  splash.terminal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</div>
</section>
<section id="getting-the-motion" class="level4">
<h4 class="anchored" data-anchor-id="getting-the-motion">Getting the motion</h4>
<p>Now that this is done, we can get the motion for this system using the following class:</p>
<div id="94cc3d2c" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.integrate <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> solve_ivp</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> dragProjectile:</span>
<span id="cb3-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Equations of motion for projectile system with turbulent drag fired from an elevated position</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Inputs:</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    vLaunchMag = launch speed in m/s</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    vLaunchDir = launch angle measured from horizontal in degrees</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    height = elevation of the position in m</span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    mass = mass of projectile in kg</span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    dragCoef = drag coefficient for system in kg/m</span></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Outputs:</span></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    t = vector of time values where the system is solved</span></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    x, y = vectors of position values matching the time vector above</span></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    vx, vy = vectors of velocity values matching the time vector above</span></span>
<span id="cb3-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    ax, ay = vectors of acceleration values matching the time vector above</span></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tof = time of flight </span></span>
<span id="cb3-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    maxX = projectile range</span></span>
<span id="cb3-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  '''</span></span>
<span id="cb3-20">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, vLaunchMag, vLaunchDir, height, mass, dragCoef):</span>
<span id="cb3-21">    model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dragEOM(vLaunchMag, vLaunchDir, height, mass, dragCoef)</span>
<span id="cb3-22">    tMax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> model.idealTof</span>
<span id="cb3-23">    tVals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,tMax,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb3-24">    u0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.u0</span>
<span id="cb3-25">    sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve_ivp(model, t_span<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,tMax], y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u0, t_eval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tVals, events<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model.splash, dense_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-26">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tof <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sol.t_events[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb3-27">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.maxX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sol.y_events[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb3-28">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sol.t</span>
<span id="cb3-29">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sol.y[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :]</span>
<span id="cb3-30">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sol.y[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :]</span>
<span id="cb3-31">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sol.y[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, :]</span>
<span id="cb3-32">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sol.y[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, :]</span>
<span id="cb3-33">    udot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(sol.t, sol.y)</span>
<span id="cb3-34">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> udot[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb3-35">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.ay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> udot[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span></code></pre></div>
</div>
</section>
</section>
</section>
<section id="comparing-motion-withwithout-air-resistance" class="level2">
<h2 class="anchored" data-anchor-id="comparing-motion-withwithout-air-resistance">Comparing motion with/without air resistance</h2>
<p>Now that we have these tools built, we can start to visualize this motion. I’ll do this using some functions in my <code>projectile.py</code> file to make graphs. I will also include the following numerical values:</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?H%20=%20200"> m</li>
<li><img src="https://latex.codecogs.com/png.latex?v_i%20=%20100"> m/s</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Ctheta%20=%2030"> deg</li>
<li><img src="https://latex.codecogs.com/png.latex?m%20=%201"> kg</li>
<li><img src="https://latex.codecogs.com/png.latex?c%20=%200.003"> kg/m</li>
</ul>
<div id="2750bd66" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> projectile <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb4-4"></span>
<span id="cb4-5">H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb4-6">vi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb4-7">theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span id="cb4-8">m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-9">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.003</span></span></code></pre></div>
</div>
<p>I will visualize this motion in two ways. First, I’ll plot each quantity of the motion (position, velocity, acceleration) vs.&nbsp;time.</p>
<div id="77226485" class="cell" width="75%" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">plotCannonCurves(vi,theta,H,m,c)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/projectileMotion/projectileMotionWithDrag_files/figure-html/cell-6-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="715" height="953"></p>
</figure>
</div>
</div>
</div>
<p>Now I will plot the trajectory (y-coordinate vs x-coordinate). Note that I have added boxes to this plot indicating the cliff location and the water level to help guide the eye. The plot has also been set up with an equal aspect ratio so that the horizontal and vertical distances are the same. The green curve should more closely match the golf ball tracer than the red parabolic path does.</p>
<div id="bc327811" class="cell" width="75%" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">makeTrajectoryPlot(vi,theta,H,m,c)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/projectileMotion/projectileMotionWithDrag_files/figure-html/cell-7-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="716" height="395"></p>
</figure>
</div>
</div>
</div>
<section id="where-to-go-from-here" class="level3">
<h3 class="anchored" data-anchor-id="where-to-go-from-here">Where to go from here</h3>
<p>Usually, I’ll give my students some tasks like finding the maximum range of the projectile, and comparing the model results. I thought that I would do something a little different as it will allow me to compare the model predictions. I will do this using the fractional difference between the two predictions for both the range and the time of flight. Since I used <img src="https://latex.codecogs.com/png.latex?D"> to denote the range, I will write <img src="https://latex.codecogs.com/png.latex?D_1"> to denote the range for model 1 (no air resistance) and <img src="https://latex.codecogs.com/png.latex?D_2"> to denote the range for model 2 (with air resistance). Therefore the quantity below is the fractional difference between the targeting location of the models.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cdelta_D%20=%20%5Cfrac%7B%5Cleft%7CD_1%20-%20D_2%5Cright%7C%7D%7BD_1%7D%0A"></p>
<p>I will also define a similar quantity related to the time-of-flight.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cdelta_T%20=%20%5Cfrac%7B%5Cleft%7CT_2%20-%20T_1%5Cright%7C%7D%7BT_2%7D%0A"></p>
<p>Note that I’m using <img src="https://latex.codecogs.com/png.latex?D_1"> in the denominator of <img src="https://latex.codecogs.com/png.latex?%5Cdelta_D"> and <img src="https://latex.codecogs.com/png.latex?T_2"> in the denominator of <img src="https://latex.codecogs.com/png.latex?%5Cdelta_T">. This is because these are the larger values for each motion.</p>
<p>I will calculate these quantities for a range of launch velocities, masses, and launch angles keeping the cliff height <img src="https://latex.codecogs.com/png.latex?(H=100%20%5C,%5Ctext%7Bm%7D)"> and drag coefficient <img src="https://latex.codecogs.com/png.latex?(c=0.003%20%5C,%5Ctext%7Bkg/m%7D)"> the same as it was before.</p>
<div id="42bde218" class="cell" data-execution_count="7">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.colors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mc</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.cm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cm</span>
<span id="cb7-3"></span>
<span id="cb7-4">launchVelocities <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>)</span>
<span id="cb7-5">launchAngles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>)</span>
<span id="cb7-6">masses <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.logspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>)</span>
<span id="cb7-7">nv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(launchVelocities)</span>
<span id="cb7-8">na <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(launchAngles)</span>
<span id="cb7-9">nm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(masses)</span>
<span id="cb7-10">deltaD <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.empty(shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(nv,na,nm))</span>
<span id="cb7-11">deltaT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.empty(shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(nv,na,nm))</span>
<span id="cb7-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(nv):</span>
<span id="cb7-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(na):</span>
<span id="cb7-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(nm):</span>
<span id="cb7-15">      lv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> launchVelocities[i]</span>
<span id="cb7-16">      la <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> launchAngles[j]</span>
<span id="cb7-17">      mm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> masses[k]</span>
<span id="cb7-18">      m1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> idealProjectile(lv,la,H)</span>
<span id="cb7-19">      m2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dragProjectile(lv,la,H,mm,c)</span>
<span id="cb7-20">      D1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m1.maxX</span>
<span id="cb7-21">      D2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m2.maxX</span>
<span id="cb7-22">      T1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m1.tof</span>
<span id="cb7-23">      T2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m2.tof</span>
<span id="cb7-24">      deltaT[i,j,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(T1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> T2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>T2</span>
<span id="cb7-25">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> D1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> D2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb7-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For small ranges (less than 1 meter from the cliff), just set the </span></span>
<span id="cb7-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fractional difference equal to zero</span></span>
<span id="cb7-28">        deltaD[i,j,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb7-29">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb7-30">        deltaD[i,j,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(D1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> D2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>D1</span>
<span id="cb7-31"></span>
<span id="cb7-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up properties of the color bar </span></span>
<span id="cb7-33">cnormD <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mc.Normalize(vmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,vmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>deltaD.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>())</span>
<span id="cb7-34">cbarD <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cm.ScalarMappable(norm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cnormD)</span>
<span id="cb7-35">cnormT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mc.Normalize(vmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,vmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>deltaT.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>())</span>
<span id="cb7-36">cbarT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cm.ScalarMappable(norm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cnormT)</span>
<span id="cb7-37"></span>
<span id="cb7-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Arrange the calculations into multiple grids for making a heatmap/contour plot</span></span>
<span id="cb7-39">X1, Y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(launchVelocities, launchAngles)</span>
<span id="cb7-40">Z1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deltaD[:, :, nm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].transpose()</span>
<span id="cb7-41">ZZ1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deltaT[:, :, nm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].transpose()</span>
<span id="cb7-42"></span>
<span id="cb7-43">X2, Y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(launchVelocities, masses)</span>
<span id="cb7-44">Z2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deltaD[:, na<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, :].transpose()</span>
<span id="cb7-45">ZZ2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deltaT[:, na<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, :].transpose()</span>
<span id="cb7-46"></span>
<span id="cb7-47">X3, Y3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(launchAngles, masses)</span>
<span id="cb7-48">Z3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deltaD[nv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, :, :].transpose()</span>
<span id="cb7-49">ZZ3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deltaT[nv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, :, :].transpose()</span></code></pre></div>
</details>
</div>
<p>Now, let’s examine the model agreement for the range:</p>
<div id="107d023c" class="cell" width="90%" data-execution_count="8">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">fig1, ax1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb8-2">fig1.suptitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Comparing predicted range with/without air resistance"</span>)</span>
<span id="cb8-3">CS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].contourf(X1,Y1,Z1,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb8-4">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mass = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>masses[nm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> kg'</span>,size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb8-5">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Launch velocity (m/s)'</span>)</span>
<span id="cb8-6">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Launch angle (deg)'</span>)</span>
<span id="cb8-7">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].contourf(X2,Y2,Z2,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb8-8">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Launch angle = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>launchAngles[na<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> deg'</span>,size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb8-9">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Launch velocity (m/s)'</span>)</span>
<span id="cb8-10">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mass (kg)'</span>)</span>
<span id="cb8-11">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_yscale(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log'</span>)</span>
<span id="cb8-12">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].contourf(X3,Y3,Z3,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb8-13">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Launch velocity = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>launchVelocities[nv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m/s'</span>,size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb8-14">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Launch angle (deg)'</span>)</span>
<span id="cb8-15">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mass (kg)'</span>)</span>
<span id="cb8-16">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].set_yscale(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log'</span>)</span>
<span id="cb8-17">fig1.subplots_adjust(bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,wspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb8-18">cbar_ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig1.add_axes([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.65</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>])</span>
<span id="cb8-19">fig1.colorbar(cbarD, cax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cbar_ax,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'$\delta_D$'</span>,orientation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'horizontal'</span>)</span>
<span id="cb8-20">ghLogo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">u"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\uf09b</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-21">liLogo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">u"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\uf08c</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-22">txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ghLogo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> datawolf04 </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>liLogo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> steven-wolf-253b6625a"</span></span>
<span id="cb8-23">plt.figtext(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, txt,family<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DejaVu Sans'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'FontAwesome'</span>],fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb8-24">plt.savefig(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rangeCalcFracDiff.png'</span>)</span>
<span id="cb8-25">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/projectileMotion/projectileMotionWithDrag_files/figure-html/cell-9-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="650" height="395"></p>
</figure>
</div>
</div>
</div>
<p>Finally, I’ll examine the model agreement for the time-of-flight:</p>
<div id="0b127f39" class="cell" width="90%" data-execution_count="9">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">fig1, ax1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb9-2">fig1.suptitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Comparing predicted time of flight with/without air resistance"</span>)</span>
<span id="cb9-3">CS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].contourf(X1,Y1,ZZ1,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb9-4">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mass = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>masses[nm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> kg'</span>,size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb9-5">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Launch velocity (m/s)'</span>)</span>
<span id="cb9-6">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Launch angle (deg)'</span>)</span>
<span id="cb9-7">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].contourf(X2,Y2,ZZ2,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb9-8">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Launch angle = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>launchAngles[na<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> deg'</span>,size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb9-9">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Launch velocity (m/s)'</span>)</span>
<span id="cb9-10">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mass (kg)'</span>)</span>
<span id="cb9-11">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_yscale(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log'</span>)</span>
<span id="cb9-12">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].contourf(X3,Y3,ZZ3,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb9-13">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Launch velocity = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>launchVelocities[nv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m/s'</span>,size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb9-14">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Launch angle (deg)'</span>)</span>
<span id="cb9-15">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mass (kg)'</span>)</span>
<span id="cb9-16">ax1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].set_yscale(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log'</span>)</span>
<span id="cb9-17">fig1.subplots_adjust(bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,wspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb9-18">cbar_ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig1.add_axes([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.65</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>])</span>
<span id="cb9-19">fig1.colorbar(cbarT, cax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cbar_ax,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'$\delta_T$'</span>,orientation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'horizontal'</span>)</span>
<span id="cb9-20">ghLogo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">u"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\uf09b</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-21">liLogo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">u"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\uf08c</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-22">txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ghLogo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> datawolf04 </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>liLogo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> steven-wolf-253b6625a"</span></span>
<span id="cb9-23">plt.figtext(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, txt,family<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DejaVu Sans'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'FontAwesome'</span>],fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb9-24">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/projectileMotion/projectileMotionWithDrag_files/figure-html/cell-10-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="650" height="395"></p>
</figure>
</div>
</div>
</div>
<p>Note that the color scales for these plots have different ranges. In particular the max <img src="https://latex.codecogs.com/png.latex?%5Cdelta_T"> value is larger than the max <img src="https://latex.codecogs.com/png.latex?%5Cdelta_D"> value. Given the initial height, it would seem that the time of flight is much more sensitive to air resistance. In general, areas on the plots above where the color is yellow shows a high level of disagreement between motion in vacuum vs.&nbsp;motion in air. Areas where the color is blue/violet shows a low level of disagreement between the models. Since air resistance is dependent on speed, we would expect that at low speeds, air resistance is less important. Given the fact that gravity/weight is the other force of interest, objects with a larger mass are also less sensitive to air resistance.</p>
<p>There is an interesting “trough” in the time of flight graphic. You can see that the minimum <img src="https://latex.codecogs.com/png.latex?%5Cdelta_T"> values aren’t along one of the axes as they are for <img src="https://latex.codecogs.com/png.latex?%5Cdelta_T">. This is because for very slow, or nearly vertical launch trajectories, the range isn’t going to be very different as it just doesn’t move very fast in the x-direction. But the time is quite different, and you can start to see the reason for this when you look at the <img src="https://latex.codecogs.com/png.latex?v_y"> vs <img src="https://latex.codecogs.com/png.latex?t"> graph. For the graphs below, you can see that the projectile turns around <img src="https://latex.codecogs.com/png.latex?(v_y=0)"> sooner when air resistance is considered. It’s fun to think about and play around with.</p>
<div id="9b4c289a" class="cell" width="75%" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">makeTrajectoryPlot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>,H,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,c)</span>
<span id="cb10-2">plotCannonCurves(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>,H,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,c)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/projectileMotion/projectileMotionWithDrag_files/figure-html/cell-11-output-1.png" class="quarto-figure quarto-figure-center figure-img" width="705" height="395"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/projectileMotion/projectileMotionWithDrag_files/figure-html/cell-11-output-2.png" class="quarto-figure quarto-figure-center figure-img" width="723" height="953"></p>
</figure>
</div>
</div>
</div>


</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>No, that’s not the “range equation” found in standard physics textbooks. And no, I haven’t made a mistake. The “range equation” in the standard physics text assumes <img src="https://latex.codecogs.com/png.latex?H=0">, that is, there is no elevation change to be concerned about. We can reduce this if we set <img src="https://latex.codecogs.com/png.latex?H=0">. In this case, <img src="https://latex.codecogs.com/png.latex?T%20=%20%5Cfrac%7B2%20v_i%20%5Csin%5Ctheta%7D%7Bg%7D"> and <img src="https://latex.codecogs.com/png.latex?D%20=%20%5Cfrac%7B2%20v_i%5E2%20%5Csin%5Ctheta%20%5Ccos%5Ctheta%7D%7Bg%7D%20=%20%5Cfrac%7Bv_i%5E2%20%5Csin(2%5Ctheta)%7D%7Bg%7D">, which is the standard physics textbook result, or what the AI will tell you if you google “range equation physics”.↩︎</p></li>
<li id="fn2"><p>In general, a <img src="https://latex.codecogs.com/png.latex?n">th order differential equation has a <img src="https://latex.codecogs.com/png.latex?n">th derivative of a function as the highest order derivative of a function. So the equation <img src="https://latex.codecogs.com/png.latex?f'(x)%20=%20f(x)%20+%203(f(x))%5E2"> is a 1st order differential equation in <img src="https://latex.codecogs.com/png.latex?f(x)"> because it has that function, as well as the first derivative of that function only. And <img src="https://latex.codecogs.com/png.latex?f''(x)%20=%20f(x)%20+%203(f'(x))%5E2"> is a 2nd order differential equation.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Modeling</category>
  <category>Classes</category>
  <category>Motion</category>
  <guid>https://datawolf04.github.io/posts/projectileMotion/projectileMotionWithDrag.html</guid>
  <pubDate>Thu, 06 Mar 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Modeling Heat Flow - Part 2b</title>
  <dc:creator>Steven Wolf</dc:creator>
  <link>https://datawolf04.github.io/posts/heatEqn2/hotBoxViz.html</link>
  <description><![CDATA[ 





<section id="visualizing-a-hot-box" class="level2">
<h2 class="anchored" data-anchor-id="visualizing-a-hot-box">Visualizing a hot box</h2>
<p>I’ve been <a href="../../posts/heatEqn2/heatEqn2.html">recently modeling a simple system</a> using the heat equation. That last post was full of math, and finally got to making a nice looking visualization. But it was a <em>long</em> time to get there, and I wanted a post that got to the “pretty pictures” part much faster. Plus, I needed to spend time figuring out how to make them look nice. When the “do math” part of my brain fights with the “make it look good” part of my brain, the math part wins because if the math part loses, the looking good part doesn’t matter (because it’s probably wrong). But the “make it look good” part is equally important for good scientific communication. Therefore, this post is important too, and hopefully, more readable that the previous post.</p>
<section id="toy-model" class="level3">
<h3 class="anchored" data-anchor-id="toy-model">Toy model</h3>
<p>As I wanted to get solar heat generation working, I started by making it simple. The premise was this. Consider the following information from <a href="https://www.humanesociety.org/resources/what-do-if-you-see-pet-parked-car">The Humane Society</a>.</p>
<blockquote class="blockquote">
<ul>
<li>When it’s 72 degrees Fahrenheit outside, the temperature inside your car can heat up to 116 degrees Fahrenheit within an hour.</li>
<li>When it’s 80 degrees Fahrenheit outside, the temperature inside your car can heat up to 99 degrees Fahrenheit within 10 minutes.</li>
<li>Rolling down the windows has been shown to have little effect on the temperature inside a car.</li>
</ul>
</blockquote>
<p>Assume the above information is correct, and find appropriate parameters to make it so. I did that by assuming the sun is at solar noon (directly overhead) and we are getting direct sunlight at our particular latitude (so it is solar noon on the equinox/first day of spring/fall).</p>
<p>But that previous post was <strong><em>full</em></strong> of math, and I wanted to make some visualizations to show how the temperature changed. So I decided to simulate for a longer time and build some cool visuals. Since the time window is 10 hours, this is a bit of a “toy model.” (In physics, we call something a toy model when it has a feature that is clearly unrealistic, but helps us develop our intuition for a system, better understand how a key aspect effects a system, and/or develop tools for visualizing or analyzing a system.) But it should give me something to visualize. Later (not in this post) I will do some astrophysics to get the sun moving properly, and handle the latitude correctly so I can come back to earth.</p>
</section>
</section>
<section id="code" class="level2">
<h2 class="anchored" data-anchor-id="code">Code</h2>
<p>Import block:</p>
<div id="37bacb16" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.colors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mc</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.cm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cm</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.integrate <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> solve_ivp</span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The functions in `hotBoxToy` were developed in the previous post</span></span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> hotBoxToy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
</details>
</div>
<p>Parameters are input in the code below, and the simulation runs based on the fit parameters from the previous analysis</p>
<div id="1b952e2d" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Heat parameters</span></span>
<span id="cb2-2">thermalDiffusivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">22.39e-6</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># meters^2/s for air</span></span>
<span id="cb2-3">heatTransferCoef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For a typical metal to air W/m^2K</span></span>
<span id="cb2-4">thermalConductivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For a typical metal W/mK</span></span>
<span id="cb2-5">specificHeat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for aluminum J/kg K</span></span>
<span id="cb2-6">wallDensity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># kg/m^3 for aluminum</span></span>
<span id="cb2-7">wallThickness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.002</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># m</span></span>
<span id="cb2-8">solarIntensity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># W/m^2</span></span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Length parameters (meters)</span></span>
<span id="cb2-11">L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb2-12">W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-13">H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span></span>
<span id="cb2-14"></span>
<span id="cb2-15">Deltax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb2-16">xmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltax)</span>
<span id="cb2-17">ymax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltax)</span>
<span id="cb2-18">zmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(H<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltax)</span>
<span id="cb2-19"></span>
<span id="cb2-20">xmid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-21">ymid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ymax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-22">zmid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-23"></span>
<span id="cb2-24">xgrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,L,xmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-25">ygrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,W,ymax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-26">zgrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,H,zmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-27"></span>
<span id="cb2-28">u0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.empty((xmax,ymax,zmax))</span>
<span id="cb2-29"></span>
<span id="cb2-30">oneHour <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span></span>
<span id="cb2-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Best parameters from previous simulation</span></span>
<span id="cb2-32">A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1176e-3</span></span>
<span id="cb2-33">B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.6667e-3</span></span>
<span id="cb2-34">longCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> simToyHotBox(A,B,oneHour<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)    </span></code></pre></div>
</details>
</div>
</section>
<section id="visualizations" class="level2">
<h2 class="anchored" data-anchor-id="visualizations">Visualizations</h2>
<p>And now we have the pretty pictures. First we can observe how the heat changes in time.</p>
<p><img src="https://datawolf04.github.io/posts/heatEqn2/hotBoxToyViz241210.gif" class="img-fluid" style="width:90.0%"> Many of the changes in this animation happens fast. As the Humane society stated, the car gets very hot, very fast. Please don’t leave your pets/kids/anything alive in a car baking in the sunlight. In fact, <a href="https://www.instagram.com/p/CfsLvH2jEFs/?hl=en&amp;img_index=1">fellow Valparaiso University Beacon, Matthew Standridge</a> used his van for baking cookies and cinnamon buns. I hope they were tasty!</p>
<p>Back to this system–Below is a figure with 4 heatmaps on it showing the system at four times that are during this change in behavior.</p>
<div id="9137a7ee" class="cell" data-execution_count="3">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">timeIdx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>]</span>
<span id="cb3-2">xm, ym, zm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u0.shape</span>
<span id="cb3-3">Y,X,Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,W,ym),np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,L,xm),np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,H,zm))</span>
<span id="cb3-4"> </span>
<span id="cb3-5">kw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb3-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vmin'</span>: longCalc.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(),</span>
<span id="cb3-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vmax'</span>: longCalc.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(),</span>
<span id="cb3-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'levels'</span>: np.linspace(longCalc.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(),longCalc.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb3-9">}</span>
<span id="cb3-10"></span>
<span id="cb3-11">cnorm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mc.Normalize(vmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>longCalc.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(),vmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>longCalc.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>())</span>
<span id="cb3-12">cbar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cm.ScalarMappable(norm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cnorm)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set limits of the plot from coord limits</span></span>
<span id="cb3-15">xmin, xmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, L</span>
<span id="cb3-16">ymin, ymax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, W</span>
<span id="cb3-17">zmin, zmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, H</span>
<span id="cb3-18">xt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb3-19">yt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb3-20">zt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,H<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb3-21"></span>
<span id="cb3-22">i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-23">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb3-24">cellList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">221</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">222</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">223</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>]</span>
<span id="cb3-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> cell <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> cellList:</span>
<span id="cb3-26">    l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timeIdx[i]</span>
<span id="cb3-27">    theTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> longCalc.t[l]</span>
<span id="cb3-28">    theTitle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Hot Box at t = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>theTime<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> s'</span></span>
<span id="cb3-29">    umatFlat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> longCalc.y[:,l]</span>
<span id="cb3-30">    umat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umatFlat.reshape((xm,ym,zm))</span>
<span id="cb3-31">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(cell, projection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3d'</span>)</span>
<span id="cb3-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set title, limits, and labels</span></span>
<span id="cb3-33">    ax.set_title(theTitle)</span>
<span id="cb3-34">    ax.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(xlim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[xmin, xmax], ylim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[ymin, ymax], zlim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[zmin, zmax],xlabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X [m]'</span>,ylabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y [m]'</span>,zlabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Z [m]'</span>,</span>
<span id="cb3-35">          xticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>xt,yticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>yt,zticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>zt)</span>
<span id="cb3-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set zoom and angle view</span></span>
<span id="cb3-37">    ax.view_init(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-38">    ax.set_box_aspect((xm,ym,zm), zoom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.85</span>)</span>
<span id="cb3-39">    ax.contourf(X[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], Y[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], umat[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb3-40">                    zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span>, offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>H, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kw)</span>
<span id="cb3-41">    ax.contourf(X[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :], umat[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :], Z[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :],</span>
<span id="cb3-42">                    zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>, offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kw)</span>
<span id="cb3-43">    ax.contourf(umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :], Y[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :], Z[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :],</span>
<span id="cb3-44">                    zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>, offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>L, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kw)</span>
<span id="cb3-45">    i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-46"></span>
<span id="cb3-47">ghLogo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">u"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\uf09b</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-48">liLogo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">u"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\uf08c</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-49">txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ghLogo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> datawolf04 </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>liLogo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> steven-wolf-253b6625a"</span></span>
<span id="cb3-50">fig.subplots_adjust(bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb3-51">plt.figtext(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, txt,family<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DejaVu Sans'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'FontAwesome'</span>],fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb3-52">cbar_ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_axes([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>])</span>
<span id="cb3-53">fig.colorbar(cbar, cax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cbar_ax,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature [deg C]'</span>)</span>
<span id="cb3-54">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn2/hotBoxViz_files/figure-html/cell-4-output-1.png" width="728" height="618" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>These show a few features of importance:</p>
<ul>
<li><em>Symmetry</em> in several ways. For example, if consider a point on the left side surface <img src="https://latex.codecogs.com/png.latex?(x,0,z)">, you should get the same temperature at the point <img src="https://latex.codecogs.com/png.latex?(L-x,0,z)">. Similar statements can be made for the front surface and the top surface. That is why I did not show the right, rear and bottom surfaces in this visualization.</li>
<li><em>The top gets hot</em> – plenty hot. Like <a href="https://www.usatoday.com/story/life/food-dining/2022/07/29/can-you-fry-egg-sidewalk-car/10048288002/">fry an egg on it, hot</a>. Note that 180 deg C is about 350 deg F. That’s plenty hot to cook eggs. Based on the plot from the previous post, you can see that the top of the box gets to about 100 deg C at the hour mark–appropriate for boiling water.</li>
<li><em>The sides stay cool</em> – as discussed previously, there is still going to be conduction going on, so the box doesn’t reach a uniform temperature.</li>
</ul>
<section id="amimation-generation-code" class="level3">
<h3 class="anchored" data-anchor-id="amimation-generation-code">Amimation generation code</h3>
<p>Figuring out how to do the animation was an interesting task, especially since most of the examples in the documentation animate things like a position vs.&nbsp;time graph, showing where the object appears later in the motion, and dealing with 3d plots is different in matplotlib. The key to using this method for animating a figure is to name all of the features of the graph that are changing, and creating a function to update each of these features.</p>
<div id="438231f4" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.animation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> animation</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> makeAni(fname,res,L,W,H,dx):</span>
<span id="cb4-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Building the animation"</span>)</span>
<span id="cb4-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create figure with 3D axes</span></span>
<span id="cb4-6">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb4-7">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>, projection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3d'</span>)</span>
<span id="cb4-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill in the plot</span></span>
<span id="cb4-9">    theTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.t[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb4-10">    tmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(res.t)</span>
<span id="cb4-11">    theTitle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Hot Box at t = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>theTime<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> s'</span></span>
<span id="cb4-12">    figTitle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.suptitle(theTitle)</span>
<span id="cb4-13"></span>
<span id="cb4-14">    xm, ym, zm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dx), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dx), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(H<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dx)</span>
<span id="cb4-15">    uflat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.y[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb4-16">    umat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uflat.reshape((xm,ym,zm))</span>
<span id="cb4-17">    Y,X,Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,W,ym),np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,L,xm),np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,H,zm))</span>
<span id="cb4-18"></span>
<span id="cb4-19">    kw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb4-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vmin'</span>: res.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(),</span>
<span id="cb4-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vmax'</span>: res.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(),</span>
<span id="cb4-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'levels'</span>: np.linspace(res.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(),res.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb4-23">    }</span>
<span id="cb4-24">    cnorm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mc.Normalize(vmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>res.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(),vmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>res.y.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>())</span>
<span id="cb4-25">    cbar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cm.ScalarMappable(norm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cnorm)</span>
<span id="cb4-26">    </span>
<span id="cb4-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot contour surfaces</span></span>
<span id="cb4-28">    topSurf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.contourf(X[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], Y[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], umat[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span>, offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>H, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kw)</span>
<span id="cb4-29">    frontSurf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.contourf(X[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :], umat[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :], Z[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :], zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>, offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kw)</span>
<span id="cb4-30">    leftSurf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.contourf(umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :], Y[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :], Z[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :], zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>, offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>L, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kw)</span>
<span id="cb4-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --</span></span>
<span id="cb4-32"></span>
<span id="cb4-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set limits of the plot from coord limits</span></span>
<span id="cb4-34">    xmin, xmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, L</span>
<span id="cb4-35">    ymin, ymax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, W</span>
<span id="cb4-36">    zmin, zmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, H</span>
<span id="cb4-37">    ax.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(xlim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[xmin, xmax], ylim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[ymin, ymax], zlim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[zmin, zmax])</span>
<span id="cb4-38"></span>
<span id="cb4-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set labels </span></span>
<span id="cb4-40">    ax.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(</span>
<span id="cb4-41">        xlabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X [m]'</span>,</span>
<span id="cb4-42">        ylabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y [m]'</span>,</span>
<span id="cb4-43">        zlabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Z [m]'</span>,</span>
<span id="cb4-44">        xticks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb4-45">        yticks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb4-46">        zticks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,H<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb4-47">    )</span>
<span id="cb4-48"></span>
<span id="cb4-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set zoom and angle view</span></span>
<span id="cb4-50">    ax.view_init(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-51">    ax.set_box_aspect((xm,ym,zm), zoom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-52"></span>
<span id="cb4-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Colorbar</span></span>
<span id="cb4-54">    fig.subplots_adjust(left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75</span>,bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb4-55">    fig.colorbar(cbar, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax, fraction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>, pad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.075</span>, </span>
<span id="cb4-56">      label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature [deg C]'</span>)</span>
<span id="cb4-57">    ghLogo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">u"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\uf09b</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-58">    liLogo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">u"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\uf08c</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-59">    txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ghLogo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> datawolf04 </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>liLogo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> steven-wolf-253b6625a"</span></span>
<span id="cb4-60">    plt.figtext(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, txt,family<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DejaVu Sans'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'FontAwesome'</span>],fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb4-61"></span>
<span id="cb4-62">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(l):</span>
<span id="cb4-63">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-64">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Working on frame </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> out of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tmax<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb4-65">        uflat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.y[:,l]</span>
<span id="cb4-66">        umat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uflat.reshape((xm,ym,zm))</span>
<span id="cb4-67">        theTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.t[l]</span>
<span id="cb4-68">        theTitle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Hot Box at t = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>theTime<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> s'</span></span>
<span id="cb4-69">        figTitle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.suptitle(theTitle)</span>
<span id="cb4-70">        topSurf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.contourf(X[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], Y[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], umat[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span>, </span>
<span id="cb4-71">          offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>H, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kw)</span>
<span id="cb4-72">        frontSurf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.contourf(X[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :], umat[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :], Z[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :], zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>, </span>
<span id="cb4-73">          offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kw)</span>
<span id="cb4-74">        leftSurf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.contourf(umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :], Y[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :], Z[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :], </span>
<span id="cb4-75">          zdir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>, offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>L, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kw)</span>
<span id="cb4-76"></span>
<span id="cb4-77">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> topSurf, frontSurf, leftSurf, figTitle</span>
<span id="cb4-78"></span>
<span id="cb4-79">    ani <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> animation.FuncAnimation(fig<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fig, func<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>update, frames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tmax, </span>
<span id="cb4-80">      interval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, repeat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-81">    ani.save(fname,writer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pillow'</span>)    </span>
<span id="cb4-82"></span>
<span id="cb4-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Builds the animation</span></span>
<span id="cb4-84">makeAni(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hotboxLong.gif'</span>,longCalc,L,W,H,Deltax)</span></code></pre></div>
</div>


</section>
</section>

 ]]></description>
  <category>Heat Equation</category>
  <category>Python</category>
  <category>Modeling</category>
  <category>3D system</category>
  <category>Finite Difference Method</category>
  <category>Animating Plots</category>
  <guid>https://datawolf04.github.io/posts/heatEqn2/hotBoxViz.html</guid>
  <pubDate>Tue, 10 Dec 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Modeling Heat Flow - Part 2</title>
  <dc:creator>Steven Wolf</dc:creator>
  <link>https://datawolf04.github.io/posts/heatEqn2/heatEqn2.html</link>
  <description><![CDATA[ 





<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<p><a href="../../posts/heatEqn1/modelHeatFlow.html">Previously, I modeled a “hot box”</a>, but ignored the effects of the sun. As anyone who has had to get into a car that has sat outside for a while on a hot summer day, the inside of the car is warmer than the outside air temperature, and my previous model didn’t allow that. So the sun is important. Consider the following information from <a href="https://www.humanesociety.org/resources/what-do-if-you-see-pet-parked-car">The Humane Society</a>.</p>
<blockquote class="blockquote">
<p>It doesn’t have to be that warm outside for a car to become dangerously hot inside.</p>
<ul>
<li>When it’s 72 degrees Fahrenheit outside, the temperature inside your car can heat up to 116 degrees Fahrenheit within an hour.</li>
<li>When it’s 80 degrees Fahrenheit outside, the temperature inside your car can heat up to 99 degrees Fahrenheit within 10 minutes.</li>
<li>Rolling down the windows has been shown to have little effect on the temperature inside a car.</li>
</ul>
</blockquote>
<p>Let’s translate these temperatures to Celsius and Kelvin</p>
<ul>
<li>When it’s 22 degrees Celsius outside, the temperature inside your car can heat up to 47 degrees Celsius within an hour.</li>
<li>When it’s 27 degrees Celsius outside, the temperature inside your car can heat up to 37 degrees Celsius within 10 minutes.</li>
</ul>
<p>My plan for this post is to assume that my heat box will heat up similarly to the above generic car, and see what sort of parameters I need to make that work.</p>
</section>
<section id="previous-work" class="level2">
<h2 class="anchored" data-anchor-id="previous-work">Previous work</h2>
<p>As before, I’ll model the system as a simple box, however, this time it will be car-sized, and I’ll use thermal properties that are common for metals like aluminum, rather than parameters used for building materials.</p>
<div id="c4d3a6e4" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Heat parameters</span></span>
<span id="cb1-4">thermalDiffusivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">22.39e-6</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># meters^2/s for air</span></span>
<span id="cb1-5">heatTransferCoef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For a typical metal to air W/m^2K</span></span>
<span id="cb1-6">thermalConductivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For a typical metal W/mK</span></span>
<span id="cb1-7">specificHeat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for aluminum J/kg K</span></span>
<span id="cb1-8">wallDensity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># kg/m^3 for aluminum</span></span>
<span id="cb1-9">solarIntensity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># W/m^2</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Length parameters (meters)</span></span>
<span id="cb1-12">L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-13">W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-14">H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span></span>
<span id="cb1-15"></span>
<span id="cb1-16">Deltax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb1-17">xmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltax)</span>
<span id="cb1-18">ymax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltax)</span>
<span id="cb1-19">zmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(H<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltax)</span>
<span id="cb1-20"></span>
<span id="cb1-21">xmid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-22">ymid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ymax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-23">zmid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-24"></span>
<span id="cb1-25">xgrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,L,xmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-26">ygrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,W,ymax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-27">zgrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,H,zmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-28"></span>
<span id="cb1-29">u0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.empty((xmax,ymax,zmax))</span></code></pre></div>
</details>
</div>
</section>
<section id="heat-equation" class="level2">
<h2 class="anchored" data-anchor-id="heat-equation">Heat Equation</h2>
<p>The heat equation is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Cpartial%20u%7D%7B%5Cpartial%20t%7D%20=%20%5Calpha%20%5Cnabla%5E2u%20+%20%5Ctext%7BInternal%20Power%20Generation%20Term%7D%20+%20%5Ctext%7BConvection%20on%20the%20boundary%7D%0A"></p>
<p>Where <img src="https://latex.codecogs.com/png.latex?%5Calpha=%5Cfrac%7Bk%7D%7Bc%5Crho%7D"> is the thermal diffusivity of the material, and <img src="https://latex.codecogs.com/png.latex?k"> is the thermal conductivity, <img src="https://latex.codecogs.com/png.latex?c"> is the specific heat, and <img src="https://latex.codecogs.com/png.latex?%5Crho"> is the density. The internal power generation term is going to be related to heat generation due to the absorption of sunlight, and will only be important on surfaces exposed to sunlight. The Boundary convection term will be, again only important on the exterior of the object being modeled. I’ll describe these terms in more detail later in this post.</p>
<p>When working numerically, it is common to employ a finite mesh of points and determine the system temperature at each of these points in space as follows: <img src="https://latex.codecogs.com/png.latex?%0Au(x,y,z,t)%20%5Crightarrow%20u(x_i,y_j,z_k,t)%20=%20u_%7Bi,j,k%7D(t)%0A"></p>
<p>I will create this 3D array of functions in time, rather than a 4D array, with one of the dimensions being the evolution in time because when solving differential equations, it is often important to adjust the time step to suit the numerical needs of the system. This way, I will be able to use numerical differential equation solvers as I tackle this problem.</p>
<section id="internal-power-generation" class="level3">
<h3 class="anchored" data-anchor-id="internal-power-generation">Internal Power Generation</h3>
<p>This should be proportional to the solar intensity. At the surface of the earth, <a href="https://www.whoi.edu/science/AOPE/mvco/description/SolRad.html">the intensity of sunlight on a clear day is about 1000 <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BW%7D/%5Ctext%7Bm%7D%5E2"></a>. For now, I will model it as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AA%20I_%7B%5Ctext%7Bsun%7D%7D%20f(x,y,z)%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?A"> is a constant that I will determine empirically. For this model, I will assume:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Af(x,y,z)%20=%0A%5Cbegin%7Bcases%7D%0A1%20&amp;z=H%20%5C%5C%0A0%20&amp;%5Ctext%7Belse%7D%0A%5Cend%7Bcases%7D%0A"></p>
<p>This has the meaning that for this model, the sun is directly overhead, and sunlight is only incident on the top of the box. The constant <img src="https://latex.codecogs.com/png.latex?A"> should depend on material properties like specific heat and density as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AA%20=%20%5Cfrac%7B1%7D%7Bc%5Crho%5Cdelta_%7B%5Ctext%7Beff%7D%7D%7D%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cdelta_%7B%5Ctext%7Beff%7D%7D"> is an effective depth that the sunlight penetrates.</p>
<div id="3ad9f868" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> powerGen(umat, t, intensity, A):</span>
<span id="cb2-2">    powerGen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros_like(umat)</span>
<span id="cb2-3"></span>
<span id="cb2-4">    powerDensity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>intensity</span>
<span id="cb2-5">    powerGen[:,:,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].fill(powerDensity)</span>
<span id="cb2-6"></span>
<span id="cb2-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> powerGen</span></code></pre></div>
</details>
</div>
</section>
<section id="boundary-convection" class="level3">
<h3 class="anchored" data-anchor-id="boundary-convection">Boundary convection</h3>
<p>The power exchange per unit volume due to convection is proportional to the difference in temperature of air and the temperature at the boundary:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AB%20%5Cleft(T_%7B%5Ctext%7Bair%7D%7D-u(x_S,y_S,z_S,t)%5Cright)%0A"></p>
<p>for points <img src="https://latex.codecogs.com/png.latex?(x_S,y_S,z_S)"> on the boundary of the object (assuming a uniform air temperature). Again, <img src="https://latex.codecogs.com/png.latex?B"> is a constant that I will determine empirically. However, the constant <img src="https://latex.codecogs.com/png.latex?B"> should depend on material properties like specific heat, density, and the heat transfer coefficient as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AB%20=%20%5Cfrac%7Bh%7D%7Bc%5Crho%5CDelta_%7B%5Ctext%7Beff%7D%7D%7D%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5CDelta_%7B%5Ctext%7Beff%7D%7D"> is an effective thickness of the convection surface.</p>
<div id="3fb74174" class="cell" data-execution_count="3">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> bdryConv(umat, t, Tair, B):</span>
<span id="cb3-2"></span>
<span id="cb3-3">    bdryTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros_like(umat)</span>
<span id="cb3-4">    uSurf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros_like(umat)</span>
<span id="cb3-5"></span>
<span id="cb3-6">    bdryTemp[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:,:].fill(Tair)</span>
<span id="cb3-7">    bdryTemp[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:].fill(Tair)</span>
<span id="cb3-8">    bdryTemp[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].fill(Tair)</span>
<span id="cb3-9">    bdryTemp[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:,:].fill(Tair)</span>
<span id="cb3-10">    bdryTemp[:,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:].fill(Tair)</span>
<span id="cb3-11">    bdryTemp[:,:,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].fill(Tair)</span>
<span id="cb3-12"></span>
<span id="cb3-13">    uSurf[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:,:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:,:]</span>
<span id="cb3-14">    uSurf[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,:]</span>
<span id="cb3-15">    uSurf[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb3-16">    uSurf[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:,:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:,:]</span>
<span id="cb3-17">    uSurf[:,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat[:,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:]</span>
<span id="cb3-18">    uSurf[:,:,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat[:,:,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb3-19"></span>
<span id="cb3-20">    duConvdt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(bdryTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> uSurf)</span>
<span id="cb3-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> duConvdt  </span></code></pre></div>
</details>
</div>
</section>
<section id="laplacian" class="level3">
<h3 class="anchored" data-anchor-id="laplacian">Laplacian</h3>
<p>Lastly I have to deal with the Laplacian in the following cases:</p>
<ol type="1">
<li>Interior points</li>
<li>Boundary surfaces</li>
<li>Boundary edges</li>
<li>Boundary corners</li>
</ol>
<p>In the finite difference method, the Laplacian is proportional to the average deviation of the current point from the nearest neighbors. I’ll show how this is calculated in later sections for surfaces, edges and corners. All in all this is quite tedious, and if you want to skip the math, navigate to the Analysis Plan section through the menu at the right.</p>
<section id="heat-equation-on-the-interior-of-the-box" class="level4">
<h4 class="anchored" data-anchor-id="heat-equation-on-the-interior-of-the-box">Heat Equation on the interior of the box</h4>
<p>The heat equation on the interior of the box has none of the contributions from the boundary terms: <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Cpartial%20u(x,y,z,t)%7D%7B%5Cpartial%20t%7D%20=%20%5Calpha%5Cnabla%5E2%20u(x,y,z,t)%0A"></p>
<p>When we apply the finite element approximation, we get the following:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%5Cnabla%5E2%20u(x,y,z,t)%20%5Crightarrow%20%5Cfrac%7B1%7D%7B%5CDelta%20x%5CDelta%20y%5CDelta%20z%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cleft(%5CDelta%20y%20%5CDelta%20z%20%5Cfrac%7Bu_%7Bi-1,j,k%7D(t)%20+%20u_%7Bi+1,j,k%7D(t)%20-%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%202%20u_%7Bi,j,k%7D(t)%7D%7B%5CDelta%20x%7D%20%5Cright.%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cquad%20+%20%5CDelta%20x%20%5CDelta%20z%20%5Cfrac%7Bu_%7Bi,j-1,k%7D(t)%20+%20u_%7Bi,j+1,k%7D(t)%20-%202%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20u_%7Bi,j,k%7D(t)%7D%7B%5CDelta%20y%7D%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20%5Cleft.%20+%20%5CDelta%20x%20%5CDelta%20y%20%5Cfrac%7Bu_%7Bi,j,k-1%7D(t)%20+%20u_%7Bi,j,k+1%7D(t)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20-%202%20u_%7Bi,j,k%7D(t)%7D%7B%5CDelta%20z%7D%5Cright)%20%5C%5C%0A%5Cend%7Balign*%7D"></p>
<p>This simplifies to: <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%5Cnabla%5E2%20u(x,y,z,t)%0A%20%20%20%20%20%20%20&amp;%5Crightarrow%20%5Cfrac%7Bu_%7Bi-1,j,k%7D(t)%20+%20u_%7Bi+1,j,k%7D(t)%20-%202%20u_%7Bi,j,k%7D(t)%7D%7B%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%20%20%20&amp;%5Cquad%20+%5Cfrac%7Bu_%7Bi,j-1,k%7D(t)%20+%20u_%7Bi,j+1,k%7D(t)%20-%202%20u_%7Bi,j,k%7D(t)%7D%7B%5CDelta%20y%5E2%7D%20%5C%5C%0A%20%20%20%20%20%20%20&amp;%20%5Cqquad%20+%20%5Cfrac%7Bu_%7Bi,j,k-1%7D(t)%20+%20u_%7Bi,j,k+1%7D(t)%20-%202%20u_%7Bi,j,k%7D(t)%7D%7B%5CDelta%20z%5E2%7D%0A%5Cend%7Balign*%7D"></p>
<p>If we generate our grid with <img src="https://latex.codecogs.com/png.latex?%5CDelta%20x%20=%20%5CDelta%20y%20=%20%5CDelta%20z">, we obtain:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cnabla%5E2%20u_%7Bi,j,k%7D%20=%20%20%5Cfrac%7Bu_%7Bi-1,j,k%7D%20+%20u_%7Bi+1,j,k%7D%20+%20u_%7Bi,j-1,k%7D%20+%20u_%7Bi,j+1,k%7D%20+%20u_%7Bi,j,k-1%7D%20+%20u_%7Bi,j,k+1%7D%20-%206%20u_%7Bi,j,k%7D%7D%7B%5CDelta%20x%5E2%7D%20%5C%5C%0A"></p>
</section>
<section id="heat-equation-on-a-boundary-surface" class="level4">
<h4 class="anchored" data-anchor-id="heat-equation-on-a-boundary-surface">Heat Equation on a boundary <em>surface</em></h4>
<p>So if we are considering the <img src="https://latex.codecogs.com/png.latex?x=0,%20i=0"> surface: <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bdu_%7B0,j,k%7D(t)%7D%7B%5Cpartial%20t%7D%20=%20%5Calpha%20%5Cnabla%5E2%20u_%7B0,j,k%7D(t)%20+%20f_%7B0jk%7D(t)%20+%20%5Cfrac%7Bh%7D%7Bc%5Crho%7D(T_%7B%5Ctext%7Bair%7D%7D-u_%7B0,j,k%7D)%0A"> where</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%5Cnabla%5E2%20u_%7B0,j,k%7D(t)%20&amp;=%20%5Cfrac%7B1%7D%7B%5CDelta%20x%5CDelta%20y%5CDelta%20z%7D%20%5Cleft(%5CDelta%20y%20%5CDelta%20z%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Cfrac%7Bu_%7B1,j,k%7D(t)%20-%20u_%7B0,j,k%7D(t)%7D%7B%5CDelta%20x%7D%20%5Cright.%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20+%20%5Cfrac%7B%5CDelta%20x%7D%7B2%7D%20%5CDelta%20z%20%5Cfrac%7Bu_%7B0,j-1,k%7D(t)%20+%20u_%7B0,j+1,k%7D(t)%20-%202%20u_%7B0,j,k%7D(t)%7D%7B%5CDelta%20y%7D%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20%5Cleft.%20+%20%5Cfrac%7B%5CDelta%20x%7D%7B2%7D%20%5CDelta%20y%20%5Cfrac%7Bu_%7B0,j,k-1%7D(t)%20+%20u_%7B0,j,k+1%7D(t)%20-%202%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20u_%7B0,j,k%7D(t)%7D%7B%5CDelta%20z%7D%5Cright)%0A%5Cend%7Balign*%7D"></p>
<p>This simplifies to:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%5Cnabla%5E2%20u_%7B0,j,k%7D(t)%20=%20%5Cfrac%7B1%7D%7B2%7D%20&amp;%5Cleft(%5Cfrac%7B2%20u_%7B1,j,k%7D(t)%20-%202%20u_%7B0,j,k%7D(t)%7D%7B%5CDelta%20x%5E2%7D%5Cright.%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20+%20%5Cfrac%7Bu_%7B0,j-1,k%7D(t)%20+%20u_%7B0,j+1,k%7D(t)%20-%202%20u_%7B0,j,k%7D(t)%7D%7B%5CDelta%20y%5E2%7D%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20+%20%5Cleft.%20%5Cfrac%7Bu_%7B0,j,k-1%7D(t)%20+%20u_%7B0,j,k+1%7D(t)%20-%202%20u_%7B0,j,k%7D(t)%7D%7B%5CDelta%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20z%5E2%7D%20%5Cright)%20%5C%5C%0A%5Cend%7Balign*%7D"></p>
<p>Again, with a uniform grid, this becomes: <img src="https://latex.codecogs.com/png.latex?%0A%5Cnabla%5E2%20u_%7B0,j,k%7D(t)%20=%20%5Cfrac%7B2%20u_%7B1,j,k%7D(t)%20+%20u_%7B0,j-1,k%7D(t)%20+%20u_%7B0,j+1,k%7D(t)%20+%20u_%7B0,j,k-1%7D(t)%20+%20u_%7B0,j,k+1%7D(t)%20-%206%20u_%7B0,j,k%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%0A"></p>
<p>Following a similar method we can find for all 6 surfaces:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%5Cnabla%5E2%20u_%7B0,j,k%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7B1,j,k%7D(t)%20+%20u_%7B0,j-1,k%7D(t)%20+%20u_%7B0,j+1,k%7D(t)%20+%20u_%7B0,j,k-1%7D(t)%20+%20u_%7B0,j,k+1%7D(t)%20-%206%20u_%7B0,j,k%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%5Cnabla%5E2%20u_%7BI,j,k%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7BI-1,j,k%7D(t)%20+%20u_%7BI,j-1,k%7D(t)%20+%20u_%7BI,j+1,k%7D(t)%20+%20u_%7BI,j,k-1%7D(t)%20+%20u_%7BI,j,k+1%7D(t)%20-%206%20u_%7BI,j,k%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%5Cnabla%5E2%20u_%7Bi,0,k%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7Bi,1,k%7D(t)%20+%20u_%7Bi-1,0,k%7D(t)%20+%20u_%7Bi+1,0,k%7D(t)%20+%20u_%7Bi,0,k-1%7D(t)%20+%20u_%7Bi,0,k+1%7D(t)%20-%206%20u_%7Bi,0,k%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%5Cnabla%5E2%20u_%7Bi,J,k%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7Bi,J-1,k%7D(t)%20+%20u_%7Bi-1,J,k%7D(t)%20+%20u_%7Bi+1,J,k%7D(t)%20+%20u_%7Bi,J,k-1%7D(t)%20+%20u_%7Bi,J,k+1%7D(t)%20-%206%20u_%7Bi,J,k%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%5Cnabla%5E2%20u_%7Bi,j,0%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7Bi,j,1%7D(t)%20+%20u_%7Bi-1,j,0%7D(t)%20+%20u_%7Bi+1,j,0%7D(t)%20+%20u_%7Bi,j-1,0%7D(t)%20+%20u_%7Bi,j+1,0%7D(t)%20-%206%20u_%7Bi,j,0%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%5Cnabla%5E2%20u_%7Bi,j,K%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7Bi,j,K-1%7D(t)%20+%20u_%7Bi,j-1,K%7D(t)%20+%20u_%7Bi,j+1,K%7D(t)%20+%20u_%7Bi,j,K%7D(t)%20+%20u_%7Bi,j,k+1%7D(t)%20-%206%20u_%7Bi,j,K%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%5Cend%7Balign*%7D"></p>
</section>
<section id="heat-equation-on-a-boundary-edge" class="level4">
<h4 class="anchored" data-anchor-id="heat-equation-on-a-boundary-edge">Heat equation on a boundary <em>edge</em></h4>
<p>So if we are considering the <img src="https://latex.codecogs.com/png.latex?x=0,%20i=0">, <img src="https://latex.codecogs.com/png.latex?y=0,%20j=0"> edge: <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bdu_%7B0,0,k%7D(t)%7D%7B%5Cpartial%20t%7D%20=%20%5Calpha%20%5Cnabla%5E2%20u_%7B0,0,k%7D(t)%20+%20f_%7B0,0,k%7D(t)%20+%20%5Cfrac%7Bh%7D%7Bc%5Crho%7D(T_%7B%5Ctext%7Bair%7D%7D-u_%7B0,0,k%7D)%0A"> where</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%5Cnabla%5E2%20u_%7B0,0,k%7D(t)%20&amp;=%20%5Cfrac%7B1%7D%7B%5CDelta%20x%5CDelta%20y%5CDelta%20z%7D%20%5Cleft(%5Cfrac%7B%5CDelta%20y%7D%7B2%7D%20%5CDelta%20z%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Cfrac%7Bu_%7B1,0,k%7D(t)%20-%20u_%7B0,0,k%7D(t)%7D%7B%5CDelta%20x%7D%20%5Cright.%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20+%20%5Cfrac%7B%5CDelta%20x%7D%7B2%7D%20%5CDelta%20z%20%5Cfrac%7Bu_%7B0,1,k%7D(t)%20-%20u_%7B0,0,k%7D(t)%7D%7B%5CDelta%20y%7D%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20%5Cleft.%20+%20%5Cfrac%7B%5CDelta%20x%7D%7B2%7D%20%5Cfrac%7B%5CDelta%20y%7D%7B2%7D%20%5Cfrac%7Bu_%7B0,0,k-1%7D(t)%20+%20u_%7B0,0,k+1%7D(t)%20-%202%20u_%7B0,0,k%7D(t)%7D%7B%5CDelta%20z%7D%5Cright)%20%5C%5C%0A%5Cend%7Balign*%7D"></p>
<p>This simplifies to:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%5Cnabla%5E2%20u_%7B0,0,k%7D(t)%20&amp;=%20%5Cfrac%7B1%7D%7B4%7D%20%5Cleft(%5Cfrac%7B2u_%7B1,0,k%7D(t)%20-%202u_%7B0,0,k%7D(t)%7D%7B%5CDelta%20x%5E2%7D%20%5Cright.%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20+%20%5Cfrac%7B2u_%7B0,1,k%7D(t)%20-%202u_%7B0,0,k%7D(t)%7D%7B%5CDelta%20y%5E2%7D%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20%5Cleft.%20+%20%5Cfrac%7Bu_%7B0,0,k-1%7D(t)%20+%20u_%7B0,0,k+1%7D(t)%20-%202%20u_%7B0,0,k%7D(t)%7D%7B%5CDelta%20z%5E2%7D%5Cright)%20%5C%5C%0A%5Cend%7Balign*%7D"></p>
<p>Again, with a uniform grid, this becomes: <img src="https://latex.codecogs.com/png.latex?%0A%5Cnabla%5E2%20u_%7B0,0,k%7D(t)%20=%20%5Cfrac%7B2%20u_%7B1,0,k%7D(t)%20+%20%202%20u_%7B0,1,k%7D(t)%20+%20u_%7B0,0,k-1%7D(t)%20+%20u_%7B0,0,k+1%7D(t)%20-%206%20u_%7B0,0,k%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%0A"></p>
<p>Following a similar method we can find for all 12 edges:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%20%20%5Cnabla%5E2%20u_%7B0,0,k%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7B1,0,k%7D(t)%20+%20%202%20u_%7B0,1,k%7D(t)%20+%20u_%7B0,0,k-1%7D(t)%20+%20u_%7B0,0,k+1%7D(t)%20-%206%20u_%7B0,0,k%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7B0,J,k%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7B1,J,k%7D(t)%20+%20%202%20u_%7B0,J-1,k%7D(t)%20+%20u_%7B0,J,k-1%7D(t)%20+%20u_%7B0,J,k+1%7D(t)%20-%206%20u_%7B0,J,k%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7B0,j,0%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7B1,j,0%7D(t)%20+%20%202%20u_%7B0,j,1%7D(t)%20+%20u_%7B0,j-1,0%7D(t)%20+%20u_%7B0,j+1,0%7D(t)%20-%206%20u_%7B0,j,0%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7B0,j,K%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7B1,j,K%7D(t)%20+%20%202%20u_%7B0,j,K-1%7D(t)%20+%20u_%7B0,j-1,K%7D(t)%20+%20u_%7B0,j+1,0%7D(t)%20-%206%20u_%7B0,j,K%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7BI,0,k%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7BI-1,0,k%7D(t)%20+%20%202%20u_%7BI,1,k%7D(t)%20+%20u_%7BI,0,k-1%7D(t)%20+%20u_%7BI,0,k+1%7D(t)%20-%206%20u_%7BI,0,k%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7BI,J,k%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7BI-1,J,k%7D(t)%20+%20%202%20u_%7BI,J-1,k%7D(t)%20+%20u_%7BI,J,k-1%7D(t)%20+%20u_%7BI,J,k+1%7D(t)%20-%206%20u_%7BI,J,k%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7BI,j,0%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7BI-1,j,0%7D(t)%20+%20%202%20u_%7BI,j,1%7D(t)%20+%20u_%7BI,j-1,0%7D(t)%20+%20u_%7BI,j+1,0%7D(t)%20-%206%20u_%7BI,j,0%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7BI,j,K%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7BI-1,j,K%7D(t)%20+%20%202%20u_%7BI,j,K-1%7D(t)%20+%20u_%7BI,j-1,K%7D(t)%20+%20u_%7BI,j+1,K%7D(t)%20-%206%20u_%7BI,j,K%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7Bi,0,0%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7Bi,0,1%7D(t)%20+%20%202%20u_%7Bi,1,0%7D(t)%20+%20u_%7Bi-1,0,0%7D(t)%20+%20u_%7Bi+1,0,0%7D(t)%20-%206%20u_%7Bi,0,0%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7Bi,0,K%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7Bi,0,K-1%7D(t)%20+%20%202%20u_%7Bi,1,K%7D(t)%20+%20u_%7Bi-1,0,K%7D(t)%20+%20u_%7Bi+1,0,K%7D(t)%20-%206%20u_%7Bi,0,K%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7Bi,J,0%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7Bi,J,1%7D(t)%20+%20%202%20u_%7Bi,J-1,0%7D(t)%20+%20u_%7Bi-1,J,0%7D(t)%20+%20u_%7Bi+1,J,0%7D(t)%20-%206%20u_%7Bi,J,0%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7Bi,J,K%7D(t)%20&amp;=%20%5Cfrac%7B2%20u_%7Bi,J,K-1%7D(t)%20+%20%202%20u_%7Bi,J-1,K%7D(t)%20+%20u_%7Bi-1,J,K%7D(t)%20+%20u_%7Bi+1,J,K%7D(t)%20-%206%20u_%7Bi,J,K%7D(t)%7D%7B4%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%5Cend%7Balign*%7D"></p>
</section>
<section id="heat-equation-on-a-boundary-corner" class="level4">
<h4 class="anchored" data-anchor-id="heat-equation-on-a-boundary-corner">Heat equation on a boundary <em>corner</em></h4>
<p>So if we are considering the <img src="https://latex.codecogs.com/png.latex?x=0,%20i=0">, <img src="https://latex.codecogs.com/png.latex?y=0,%20j=0">, <img src="https://latex.codecogs.com/png.latex?z=0,%20k=0"> corner: <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bdu_%7B0,0,0%7D(t)%7D%7B%5Cpartial%20t%7D%20=%20%5Calpha%20%5Cnabla%5E2%20u_%7B0,0,0%7D(t)%20+%20f_%7B0,0,0%7D(t)%20+%20%5Cfrac%7Bh%7D%7Bc%5Crho%7D(T_%7B%5Ctext%7Bair%7D%7D-u_%7B0,0,0%7D)%0A"> where</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%5Cnabla%5E2%20u_%7B0,0,0%7D(t)%20&amp;=%20%5Cfrac%7B1%7D%7B%5CDelta%20x%5CDelta%20y%5CDelta%20z%7D%20%5Cleft(%5Cfrac%7B%5CDelta%20y%7D%7B2%7D%20%5Cfrac%7B%5CDelta%20z%7D%7B2%7D%20%5Cfrac%7Bu_%7B1,0,0%7D(t)%20-%20u_%7B0,0,0%7D(t)%7D%7B%5CDelta%20x%7D%20%5Cright.%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20+%20%5Cfrac%7B%5CDelta%20x%7D%7B2%7D%20%5Cfrac%7B%5CDelta%20z%7D%7B2%7D%20%5Cfrac%7Bu_%7B0,1,0%7D(t)%20-%20u_%7B0,0,0%7D(t)%7D%7B%5CDelta%20y%7D%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cqquad%20%5Cleft.%20+%20%5Cfrac%7B%5CDelta%20x%7D%7B2%7D%20%5Cfrac%7B%5CDelta%20y%7D%7B2%7D%20%5Cfrac%7Bu_%7B0,0,1%7D(t)%20-%202%20u_%7B0,0,0%7D(t)%7D%7B%5CDelta%20z%7D%5Cright)%20%5C%5C%0A%5Cend%7Balign*%7D"></p>
<p>This simplifies to:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%20%20%5Cnabla%5E2%20u_%7B0,0,0%7D(t)%20=%20%5Cfrac%7B1%7D%7B4%7D%20%5Cleft(%5Cfrac%7Bu_%7B1,0,0%7D(t)%20-%20u_%7B0,0,0%7D(t)%7D%7B%5CDelta%20x%5E2%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20+%20%5Cfrac%7Bu_%7B0,1,0%7D(t)%20-%20u_%7B0,0,0%7D(t)%7D%7B%5CDelta%20y%5E2%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20+%20%5Cfrac%7Bu_%7B0,0,1%7D(t)%20-%20u_%7B0,0,0%7D(t)%7D%7B%5CDelta%20z%5E2%7D%5Cright)%0A"></p>
<p>Again, with a uniform grid, this becomes: <img src="https://latex.codecogs.com/png.latex?%0A%5Cnabla%5E2%20u_%7B0,0,0%7D(t)%20=%20%5Cfrac%7Bu_%7B1,0,0%7D(t)%20+%20%20u_%7B0,1,0%7D(t)%20+%20u_%7B0,0,1%7D(t)%20-%203%20u_%7B0,0,0%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%0A"></p>
<p>Following a similar method we can find for all 8 corners:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%20%20%20%20%5Cnabla%5E2%20u_%7B0,0,0%7D(t)%20&amp;=%20%5Cfrac%7Bu_%7B1,0,0%7D(t)%20+%20%20u_%7B0,1,0%7D(t)%20+%20u_%7B0,0,1%7D(t)%20-%203%20u_%7B0,0,0%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7BI,0,0%7D(t)%20&amp;=%20%5Cfrac%7Bu_%7BI-1,0,0%7D(t)%20+%20%20u_%7BI,1,0%7D(t)%20+%20u_%7BI,0,1%7D(t)%20-%203%20u_%7BI,0,0%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7B0,J,0%7D(t)%20&amp;=%20%5Cfrac%7Bu_%7B1,J,0%7D(t)%20+%20%20u_%7B0,J-1,0%7D(t)%20+%20u_%7B0,J,1%7D(t)%20-%203%20u_%7B0,J,0%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7B0,0,K%7D(t)%20&amp;=%20%5Cfrac%7Bu_%7B1,0,K%7D(t)%20+%20%20u_%7B0,1,K%7D(t)%20+%20u_%7B0,0,K-1%7D(t)%20-%203%20u_%7B0,0,K%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7BI,J,0%7D(t)%20&amp;=%20%5Cfrac%7Bu_%7BI-1,J,0%7D(t)%20+%20%20u_%7BI,J-1,0%7D(t)%20+%20u_%7BI,J,1%7D(t)%20-%203%20u_%7BI,J,0%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7BI,0,K%7D(t)%20&amp;=%20%5Cfrac%7Bu_%7BI-1,0,K%7D(t)%20+%20%20u_%7BI,1,K%7D(t)%20+%20u_%7BI,0,K-1%7D(t)%20-%203%20u_%7BI,0,K%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7B0,J,K%7D(t)%20&amp;=%20%5Cfrac%7Bu_%7B1,J,K%7D(t)%20+%20%20u_%7B0,J-1,K%7D(t)%20+%20u_%7B0,J,K-1%7D(t)%20-%203%20u_%7B0,J,K%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%20%20%20%20%5Cnabla%5E2%20u_%7BI,J,K%7D(t)%20&amp;=%20%5Cfrac%7Bu_%7BI-1,J,K%7D(t)%20+%20%20u_%7BI,J-1,K%7D(t)%20+%20u_%7BI,J,K-1%7D(t)%20-%203%20u_%7BI,J,K%7D(t)%7D%7B2%20%5CDelta%20x%5E2%7D%20%5C%5C%0A%5Cend%7Balign*%7D"></p>
<p>These are all coded into the function below.</p>
<div id="440d9469" class="cell" data-execution_count="4">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> lap3DFE(umat,dx):</span>
<span id="cb4-2">    lap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.empty_like(umat)</span>
<span id="cb4-3"></span>
<span id="cb4-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Interior elements:</span></span>
<span id="cb4-5">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-6">                           umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-7"></span>
<span id="cb4-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Surface elements:</span></span>
<span id="cb4-9">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> </span>
<span id="cb4-10">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-11">    lap[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb4-12">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-13">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> </span>
<span id="cb4-14">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-15">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> </span>
<span id="cb4-16">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-17">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> </span>
<span id="cb4-18">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-19">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> </span>
<span id="cb4-20">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-21"></span>
<span id="cb4-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Edge Elements:</span></span>
<span id="cb4-23">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-24">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-25">    lap[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-26">    lap[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-27">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-28">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-29">    lap[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-30">    lap[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-31">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-32">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-33">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-34">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)    </span>
<span id="cb4-35">    </span>
<span id="cb4-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Corner Elements:</span></span>
<span id="cb4-37">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-38">    lap[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-39">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-40">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-41">    lap[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-42">    lap[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-43">    lap[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-44">    lap[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>umat[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-45"></span>
<span id="cb4-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> lap</span></code></pre></div>
</details>
</div>
</section>
</section>
<section id="final-heat-equation-function" class="level3">
<h3 class="anchored" data-anchor-id="final-heat-equation-function">Final Heat equation function</h3>
<div id="43fa1619" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dudt(t,u, alpha, intensity, dx, Tair, A, B):</span>
<span id="cb5-2">    dudt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>lap3DFE(u,dx) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> powerGen(u, t, intensity, A) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> bdryConv(u, t, Tair, B)</span>
<span id="cb5-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> dudt</span></code></pre></div>
</div>
<p>I will have to flatten things as <code>solve_ivp</code> only solves a vector system of differential equations rather than the higher dimenionality matrix system that I’ve created.</p>
<div id="8fbb38c7" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dudtFlat(t,uflat, alpha, intensity, dx, Tair, A, B):</span>
<span id="cb6-2">    u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uflat.reshape(xmax,ymax,zmax)</span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> dudt(t,u, alpha, intensity, dx, Tair, A, B).flatten()</span></code></pre></div>
</div>
</section>
</section>
<section id="analysis-plan" class="level2">
<h2 class="anchored" data-anchor-id="analysis-plan">Analysis plan</h2>
<p>I will begin by choosing parameters <img src="https://latex.codecogs.com/png.latex?A"> and <img src="https://latex.codecogs.com/png.latex?B"> based on an initial guess, and then I will adjust those parameters to minimize the absolute difference between the result that I obtain and the target temperatures noted in these statements</p>
<ul>
<li>When it’s 22 degrees Celsius outside, the temperature inside your car can heat up to 47 degrees Celsius within an hour.</li>
<li>When it’s 27 degrees Celsius outside, the temperature inside your car can heat up to 37 degrees Celsius within 10 minutes.</li>
</ul>
<section id="calculation-1" class="level3">
<h3 class="anchored" data-anchor-id="calculation-1">Calculation 1:</h3>
<p>For parameters <img src="https://latex.codecogs.com/png.latex?A"> and <img src="https://latex.codecogs.com/png.latex?B"> (described above) find the difference between the average box temperature after an hour and 47 deg C, assuming an air temperature of 22 deg C.</p>
<div id="4529b9e5" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.integrate <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> solve_ivp</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calc1(A,B):</span>
<span id="cb7-5">    oneHour <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span></span>
<span id="cb7-6">    airTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span></span>
<span id="cb7-7">    hotCarTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span></span>
<span id="cb7-8">    u0.fill(airTemp)</span>
<span id="cb7-9">    time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,oneHour,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb7-10">    </span>
<span id="cb7-11">    oneHourCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve_ivp(dudtFlat, t_span<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,oneHour], y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>u0.flatten(), t_eval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time, </span>
<span id="cb7-12">                            args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[thermalDiffusivity,solarIntensity,Deltax,airTemp,A,B])</span>
<span id="cb7-13">    </span>
<span id="cb7-14">    avgBoxTempCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(oneHourCalc.y,axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-15"></span>
<span id="cb7-16">    finalAvgTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> avgBoxTempCalc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb7-17">    tempDiff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> finalAvgTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> hotCarTemp</span>
<span id="cb7-18"></span>
<span id="cb7-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tempDiff</span></code></pre></div>
</div>
</section>
<section id="calculation-2" class="level3">
<h3 class="anchored" data-anchor-id="calculation-2">Calculation 2:</h3>
<p>For parameters <img src="https://latex.codecogs.com/png.latex?A"> and <img src="https://latex.codecogs.com/png.latex?B"> (described above) find the difference between the average box temperature after 10 minutes and 37 deg C, assuming an air temperature of 27 deg C.</p>
<div id="e16cd78d" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calc2(A,B):</span>
<span id="cb8-2">    tenMin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb8-3">    airTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span></span>
<span id="cb8-4">    hotCarTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span></span>
<span id="cb8-5">    u0.fill(airTemp)</span>
<span id="cb8-6">    time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,tenMin,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb8-7">    </span>
<span id="cb8-8">    tenMinCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve_ivp(dudtFlat, t_span<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,tenMin], y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>u0.flatten(), t_eval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time, </span>
<span id="cb8-9">                            args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[thermalDiffusivity,solarIntensity,Deltax,airTemp,A,B])</span>
<span id="cb8-10">    </span>
<span id="cb8-11">    avgBoxTempCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(tenMinCalc.y,axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb8-12"></span>
<span id="cb8-13">    finalAvgTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> avgBoxTempCalc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb8-14">    tempDiff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> finalAvgTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> hotCarTemp</span>
<span id="cb8-15"></span>
<span id="cb8-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tempDiff</span></code></pre></div>
</div>
</section>
<section id="optimization" class="level3">
<h3 class="anchored" data-anchor-id="optimization">Optimization</h3>
<p>Now I will find the parameters <img src="https://latex.codecogs.com/png.latex?A"> and <img src="https://latex.codecogs.com/png.latex?B"> that correctly model the statements given in the opening section of this post.</p>
<div id="3473f7df" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.optimize <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> minimize</span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.optimize <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Bounds</span>
<span id="cb9-3"></span>
<span id="cb9-4">bounds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>))</span>
<span id="cb9-5"></span>
<span id="cb9-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> totalTempDiff(x):</span>
<span id="cb9-7">    A, B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x</span>
<span id="cb9-8">    diff1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(calc1(A,B))</span>
<span id="cb9-9">    diff2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(calc2(A,B))</span>
<span id="cb9-10">    diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diff1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>diff2</span>
<span id="cb9-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> diff</span>
<span id="cb9-12"></span>
<span id="cb9-13">estA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(specificHeat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>wallDensity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(Deltax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb9-14">estB <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> heatTransferCoef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(specificHeat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>wallDensity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(Deltax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>))</span>
<span id="cb9-15">x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([estA,estB])</span>
<span id="cb9-16"></span>
<span id="cb9-17">res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> minimize(totalTempDiff,x0,bounds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bounds)</span>
<span id="cb9-18"></span>
<span id="cb9-19">A,B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.x</span>
<span id="cb9-20">diff1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(calc1(A,B))</span>
<span id="cb9-21">diff2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(calc2(A,B))</span>
<span id="cb9-22"></span>
<span id="cb9-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'The temperature differences are </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>diff1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> deg C for calculation 1 and </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>diff2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> deg C for calculation 2'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The temperature differences are 0.000 deg C for calculation 1 and 0.030 deg C for calculation 2</code></pre>
</div>
</div>
<p>Since we can interpret the parameters <img src="https://latex.codecogs.com/png.latex?A"> and <img src="https://latex.codecogs.com/png.latex?B"> through the properties of materials, as described above, we find:</p>
<div id="ffce321b" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'A = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>res<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:2e}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m^2K/Ws and B= </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>res<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:2e}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> 1/s'</span>)</span>
<span id="cb11-2"></span>
<span id="cb11-3">D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(specificHeat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>wallDensity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>res.x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb11-4">Delta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> heatTransferCoef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(specificHeat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>wallDensity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>res.x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb11-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'δ = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>D<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.5f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m and Δ = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Delta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.5f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m.'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>A = 1.117617e-03 m^2K/Ws and B= 6.666691e-03 1/s
δ = 0.00030 m and Δ = 0.00005 m.</code></pre>
</div>
</div>
</section>
<section id="plot-the-time-evolution-of-the-temperature" class="level3">
<h3 class="anchored" data-anchor-id="plot-the-time-evolution-of-the-temperature">Plot the time evolution of the temperature</h3>
<p>Finally, I’ll plot the time evolution of the average temperature for these systems.</p>
<div id="76bb8454" class="cell" data-execution_count="11">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot1(A,B):</span>
<span id="cb13-2">    oneHour <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span></span>
<span id="cb13-3">    airTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span></span>
<span id="cb13-4">    hotCarTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span></span>
<span id="cb13-5">    u0.fill(airTemp)</span>
<span id="cb13-6">    time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,oneHour,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb13-7">    </span>
<span id="cb13-8">    oneHourCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve_ivp(dudtFlat, t_span<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,oneHour], y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>u0.flatten(), t_eval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time, </span>
<span id="cb13-9">                            args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[thermalDiffusivity,solarIntensity,Deltax,airTemp,A,B])</span>
<span id="cb13-10">    </span>
<span id="cb13-11">    avgBoxTempCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(oneHourCalc.y,axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb13-12"></span>
<span id="cb13-13">    plt.plot(time,avgBoxTempCalc,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Avg Car Temp'</span>)</span>
<span id="cb13-14">    plt.axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>airTemp,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Air Temp'</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>,color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>)</span>
<span id="cb13-15">    plt.axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hotCarTemp,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Danger Temp'</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>,color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb13-16">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Average car temperature when air temp is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>airTemp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> C.'</span>) </span>
<span id="cb13-17">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time (s)'</span>)</span>
<span id="cb13-18">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (C)'</span>)</span>
<span id="cb13-19">    plt.legend()</span>
<span id="cb13-20">    plt.show()</span>
<span id="cb13-21"></span>
<span id="cb13-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot2(A,B):</span>
<span id="cb13-23">    tenMin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb13-24">    airTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span></span>
<span id="cb13-25">    hotCarTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span></span>
<span id="cb13-26">    u0.fill(airTemp)</span>
<span id="cb13-27">    time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,tenMin,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb13-28">    </span>
<span id="cb13-29">    tenMinCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve_ivp(dudtFlat, t_span<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,tenMin], y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>u0.flatten(), t_eval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time, </span>
<span id="cb13-30">                            args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[thermalDiffusivity,solarIntensity,Deltax,airTemp,A,B])</span>
<span id="cb13-31">    </span>
<span id="cb13-32">    avgBoxTempCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(tenMinCalc.y,axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb13-33"></span>
<span id="cb13-34">    plt.plot(time,avgBoxTempCalc,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Avg Car Temp'</span>)</span>
<span id="cb13-35">    plt.axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>airTemp,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Air Temp'</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>,color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>)</span>
<span id="cb13-36">    plt.axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hotCarTemp,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Danger Temp'</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>,color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb13-37">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Average car temperature when air temp is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>airTemp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> C.'</span>) </span>
<span id="cb13-38">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time (s)'</span>)</span>
<span id="cb13-39">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (C)'</span>)</span>
<span id="cb13-40">    plt.legend()</span>
<span id="cb13-41">    plt.show()</span>
<span id="cb13-42"></span>
<span id="cb13-43">A,B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.x</span>
<span id="cb13-44">plot1(A,B)</span>
<span id="cb13-45">plot2(A,B)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn2/heatEqn2_files/figure-html/cell-12-output-1.png" width="585" height="449" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn2/heatEqn2_files/figure-html/cell-12-output-2.png" width="585" height="449" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>This makes sense. In both systems the rate of heating decreases with time, suggesting that there is an upper limit to the temperature that the box will approach. Note that we need to put the ratio of the area of the top surface to the total surface area of the box in front of the solar generation term as the box is only gaining area through the top surface in this model, while convection is occurring everywhere on the surface of the box.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bdu%7D%7Bdt%7D%20=%20%5Calpha%5Cnabla%5E2u%20+%20AI_s%20+%20B(T_%7B%5Ctext%7Bair%7D%7D-u)%20%5Clongrightarrow%200%20=%200%20+%20%5Cfrac%7BA_%7B%5Ctext%7Btop%7D%7D%7D%7BA_%7B%5Ctext%7Bbox%7D%7D%7D%20AI_s%20+%20B(T_%7B%5Ctext%7Bair%7D%7D-u_0)%0A"> Solving for the equilibrium temperature, we find: <img src="https://latex.codecogs.com/png.latex?%0A%5Cimplies%20u_0%20=%20T_%7B%5Ctext%7Bair%7D%7D%20+%20%5Cleft(%5Cfrac%7BA_%7B%5Ctext%7Btop%7D%7D%7D%7BA_%7B%5Ctext%7Bbox%7D%7D%7D%5Cright)%20%5Cfrac%7BAI_s%7D%7BB%7D%0A"></p>
<p>Given the system that I’m modeling, and values for <img src="https://latex.codecogs.com/png.latex?A"> and <img src="https://latex.codecogs.com/png.latex?B"> that I have found, we can calculate the difference between air temperature and the steady-state box temperature.</p>
<div id="db6d0da1" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">topArea <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W</span>
<span id="cb14-2">boxArea <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H)</span>
<span id="cb14-3">solarBoost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> solarIntensity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> topArea<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>boxArea</span>
<span id="cb14-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'The temperature after a long time should approach a value that is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>solarBoost<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> deg C warmer than the air temperature.'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The temperature after a long time should approach a value that is 37.25 deg C warmer than the air temperature.</code></pre>
</div>
</div>
<p>Let’s verify this calculation by simulating this system for 10 hours.</p>
<div id="024a3b56" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> simSystem(A,B):</span>
<span id="cb16-2">    oneHour <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span></span>
<span id="cb16-3">    airTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span></span>
<span id="cb16-4">    eqTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> airTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>solarIntensity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H))</span>
<span id="cb16-5">    u0.fill(airTemp)</span>
<span id="cb16-6">    time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>oneHour,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb16-7">    </span>
<span id="cb16-8">    oneHourCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve_ivp(dudtFlat, t_span<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>oneHour], y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>u0.flatten(), t_eval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time, </span>
<span id="cb16-9">                            args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[thermalDiffusivity,solarIntensity,Deltax,airTemp,A,B])</span>
<span id="cb16-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> oneHourCalc</span>
<span id="cb16-11"></span>
<span id="cb16-12">longCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> simSystem(A,B)    </span></code></pre></div>
</div>
<p>And then I will plot the average temperature as a function of time, as well as the average temperature at a range of heights.</p>
<div id="0ed9b785" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plotTemperature(uflat):</span>
<span id="cb17-2">    oneHour <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span></span>
<span id="cb17-3">    airTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span></span>
<span id="cb17-4">    eqTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> airTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>solarIntensity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H))</span>
<span id="cb17-5">    time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>oneHour,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb17-6">    avgBoxTempCalc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(uflat,axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb17-7">    avgBoxTempZ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.empty((<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(time),zmax))</span>
<span id="cb17-8">    </span>
<span id="cb17-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(time)):</span>
<span id="cb17-10">      umat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uflat[:, l].reshape((xmax,ymax,zmax))</span>
<span id="cb17-11">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(zmax):</span>
<span id="cb17-12">        avgBoxTempZ[l,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(umat[:,:,k])</span>
<span id="cb17-13">      </span>
<span id="cb17-14"></span>
<span id="cb17-15">    plt.plot(time,avgBoxTempCalc,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Avg Car Temp'</span>)</span>
<span id="cb17-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reversed</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, zmax, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)):</span>
<span id="cb17-17">      zdim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Deltax</span>
<span id="cb17-18">      labText <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'z = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>zdim<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m'</span></span>
<span id="cb17-19">      plt.plot(time, avgBoxTempZ[:,k],label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labText,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dotted'</span>)</span>
<span id="cb17-20">    plt.axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>airTemp,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Air Temp'</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>,color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>)</span>
<span id="cb17-21">    plt.axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>eqTemp,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Equilibrium Temp'</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>,color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb17-22">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Average car temperature when air temp is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>airTemp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> C.'</span>) </span>
<span id="cb17-23">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time (s)'</span>)</span>
<span id="cb17-24">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (C)'</span>)</span>
<span id="cb17-25">    plt.legend(bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>))</span>
<span id="cb17-26">    plt.show()</span>
<span id="cb17-27">    </span>
<span id="cb17-28">plotTemperature(longCalc.y)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn2/heatEqn2_files/figure-html/cell-15-output-1.png" width="789" height="449" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>As we see that the temperature is not uniform at every point in the hot box, it becomes clear that assumption of uniform temperature is not appropriate. Since we see there is still a temperature gradient along the z-direction, conduction is still important in this system, and contributes to the equilibrium. Still this rough approximation gave a good intuition about the dynamics of the system even if it wasn’t numerically accurate.</p>
<p>Note, this assumes that the sun stays at “high noon” for at least 10 hours, so it isn’t representative of a real car on the surface of the earth. As such, it’s not worth exploring this further, except for the purposes of developing better visualizations.</p>
</section>
</section>
<section id="coming-soon" class="level2">
<h2 class="anchored" data-anchor-id="coming-soon">Coming soon</h2>
<p>So far, this has been lots of equations, and not enough pictures. But this is a complex system, and I need to add one feature at a time to ensure that it is working correctly. My first order of business will be to make a surface heat map of what is going on so that it is easier to talk about and <em>show</em> everyone what is going on.</p>
<p>I also need to develop code which allows for the sun to change it’s position. And I’ll deal with other issues such as seasonal changes/the varying length of day/night. As well as deal with latitude. I’ve been fiddling with the math on the back of napkins, and that should work nicely with some pretty pictures. Then we can compare hot boxes in higher latitudes to those with lower latitudes.</p>


</section>

 ]]></description>
  <category>Heat Equation</category>
  <category>Python</category>
  <category>Modeling</category>
  <category>3D system</category>
  <category>Finite Difference Method</category>
  <guid>https://datawolf04.github.io/posts/heatEqn2/heatEqn2.html</guid>
  <pubDate>Mon, 09 Dec 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Modeling Heat Flow</title>
  <dc:creator>Steven Wolf</dc:creator>
  <link>https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow.html</link>
  <description><![CDATA[ 





<section id="personal-motivation-for-this-post" class="level2">
<h2 class="anchored" data-anchor-id="personal-motivation-for-this-post">Personal Motivation for this post</h2>
<p>I have a house, and I need to improve the heating/cooling in it. Essentially, the problem is that my house is a long and narrow, and the air return is not able to sufficiently draw the cold/hot air from rooms on the far side of the house. Essentially, the air return/exchange system is not sufficient. As a result, half of my house is really hot in the summer/extra chilly in the winter.</p>
<p>There is some ducting in place intended to aid circulation, but it is ineffective as it doesn’t draw any air from the hot/cold room, relying on diffusion only to drive circulation. Furthermore, it is located in a bedroom rather than the living room which is significantly larger, more distant from the return, and–as a result–has the largest temperature problem. I am planning on installing a duct fan, which will help solve this problem. But that leaves these questions:</p>
<ol type="1">
<li>How strong should my duct fan be?</li>
<li>Will the existing return be enough to alleviate the problem by simply adding in a duct fan?</li>
<li>If the answer to the previous question is no, where should I put another vent to make the biggest impact?</li>
</ol>
<p>I figure I can use my physics brain, and a little code to analyze this problem. So I’m going to spend some time figuring out how to implement the heat equation with appropriate boundary conditions applying them to scenarios that are progressively more complex, until I feel that I can apply them to my own house.</p>
</section>
<section id="heat-equation" class="level2">
<h2 class="anchored" data-anchor-id="heat-equation">Heat Equation</h2>
<p>All of this starts by understanding heat flow. The heat equation is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Cpartial%20u%7D%7B%5Cpartial%20t%7D%20=%20%5Calpha%20%5Cnabla%5E2u%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?u%20=%20u(x,y,z,t)"> is a function describing the temperature at every point in space and time in the region of interest and <img src="https://latex.codecogs.com/png.latex?%5Calpha"> is the Thermal Diffusivity of the material (which can depend on position as well). There are many boundary conditions that can be applied, but I will apply <em>Robin Conditions</em> which generally apply to convection/conduction.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ak%20%5Cleft.%20%5Cfrac%7B%5Cpartial%20u%7D%7B%5Cpartial%20n%7D%5Cright%7C_%7BS%7D%20=%20h%20%5Cleft(u(S,t)%20-%20v(S,%20t)%5Cright)%0A"></p>
<p>Here <img src="https://latex.codecogs.com/png.latex?n"> is the direction of the outward normal of the boundary surface, <img src="https://latex.codecogs.com/png.latex?S"> indicates a spatial point on the boundary surface, <img src="https://latex.codecogs.com/png.latex?k"> is the thermal conductivity, <img src="https://latex.codecogs.com/png.latex?h"> is the heat transfer coefficient, and <img src="https://latex.codecogs.com/png.latex?v"> is the temperature on the other side of the boundary. This is the “Newton’s law of cooling” that you may have heard about in an introductory calculus class, although, it is usually presented as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BdT%7D%7Bdt%7D%20=%20-a(T-T_0)%0A"> where <img src="https://latex.codecogs.com/png.latex?a"> is some sort of constant, and <img src="https://latex.codecogs.com/png.latex?T_0"> is the temperature of the surroundings. What this means is that the steady-state behavior of this system is that it tends towards the temperature of the surroundings. This has limitations which I will discuss later.</p>
</section>
<section id="simple-system" class="level2">
<h2 class="anchored" data-anchor-id="simple-system">Simple system</h2>
<p>As a “simple” 3D system, I’ll model a <a href="https://en.wikipedia.org/wiki/Box_(torture)">“hot box” or “sweatbox” used by some for torture</a>. This is not, nor should it be construed as an endorsement of torture. It’s just a simple box, and it gives me some intuitive knobs to use as I work this problem. Also, given the boundary condition that I previously mentioned, this means that the box can never be warmer than the surroundings. This isn’t fully realistic yet, as anyone who has seen a PSA about leaving kids/pets in a hot car even on a “cool” day. But there’s enough here to get me to start writing code.</p>
<section id="box-dimensions" class="level3">
<h3 class="anchored" data-anchor-id="box-dimensions">Box dimensions</h3>
<p>I will model this as a box with length <img src="https://latex.codecogs.com/png.latex?L">, width <img src="https://latex.codecogs.com/png.latex?W">, and height <img src="https://latex.codecogs.com/png.latex?H">. I’ll orient my coordinate system so that the origin is in a lower corner and points <img src="https://latex.codecogs.com/png.latex?(x,y,z)"> in the region of interest are bounded by the following: <img src="https://latex.codecogs.com/png.latex?0%5Cleq%20x%5Cleq%20L">, <img src="https://latex.codecogs.com/png.latex?0%5Cleq%20y%20%5Cleq%20W">, and <img src="https://latex.codecogs.com/png.latex?0%5Cleq%20z%20%5Cleq%20H">.</p>
<div id="d58290dd" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Length and time parameters (meters)</span></span>
<span id="cb1-5">L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-6">W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-7">H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-8">oneDay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seconds</span></span>
<span id="cb1-9">T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>oneDay <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Let this run for several days</span></span></code></pre></div>
</div>
</section>
<section id="thermal-properties-of-the-box" class="level3">
<h3 class="anchored" data-anchor-id="thermal-properties-of-the-box">Thermal properties of the box</h3>
<p>I will assume that the box is uniform. That means no windows or ventilation. So <img src="https://latex.codecogs.com/png.latex?h"> and <img src="https://latex.codecogs.com/png.latex?k"> are constant and uniform on the boundary. According to Wikipedia, the thermal diffusivity of air is <img src="https://latex.codecogs.com/png.latex?1.9%5Ctimes%2010%5E%7B-7%7D"> m<img src="https://latex.codecogs.com/png.latex?%5E2">/s. According to <a href="https://doi.org/10.1016/0360-1323(96)00014-5">this article by Jayamaha <em>et.al.</em></a>, the heat transfer coefficient for walls varies from 6 to 10 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Ctext%7BW%7D%7D%7B%5Ctext%7Bm%7D%5E2%20%5Ctext%7BK%7D%7D">. Looking at the <a href="https://www.greenspec.co.uk/building-design/insulation-materials-thermal-properties/">greenspec.co.uk website</a> it would seem that the thermal conductivity of most building materials is on the order of 0.02-0.04 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Ctext%7BW%7D%7D%7B%5Ctext%7Bm%20K%7D%7D">.</p>
<div id="01b94115" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Heat parameters</span></span>
<span id="cb2-2">alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.9e-7</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># meters^2/s for air</span></span>
<span id="cb2-3">h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># From Jayamaha</span></span>
<span id="cb2-4">k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># From Greenspec</span></span></code></pre></div>
</div>
</section>
<section id="modeling-exterior-temperature" class="level3">
<h3 class="anchored" data-anchor-id="modeling-exterior-temperature">Modeling exterior temperature</h3>
<p>I’m going to assume the air temperature is time-dependent, and takes the form:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Av%5E%7B%5Ctext%7Bair%7D%7D(t)%20=%20T_0%20-%20%5CDelta%20T%20%5Ccos%5Cleft(%5COmega%20t%5Cright)%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?T_0"> is the average temperature of the day, and <img src="https://latex.codecogs.com/png.latex?%5CDelta%20T"> represents the range of temperature. On the ground, I’ll assume the temperature is constant at <img src="https://latex.codecogs.com/png.latex?T_G">. So <img src="https://latex.codecogs.com/png.latex?t=0"> is sunrise. Making these parameters functions is overkill for now, but will be helpful as I get more complicated.</p>
<div id="604bede8" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Temperature parameters</span></span>
<span id="cb3-2">T0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span></span>
<span id="cb3-3">DT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb3-4">TG <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> vair(T0,DT,t):</span>
<span id="cb3-7">  Omega <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>oneDay</span>
<span id="cb3-8">  vair <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> T0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> DT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.cos(Omega <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> t)</span>
<span id="cb3-9">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> vair</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> vground(TG, t):</span>
<span id="cb3-12">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> TG</span></code></pre></div>
</div>
</section>
</section>
<section id="going-from-differential-equations-to-matrix-equations" class="level2">
<h2 class="anchored" data-anchor-id="going-from-differential-equations-to-matrix-equations">Going from differential equations to matrix equations</h2>
<p>This is going to get a bit technical, and if you want to skip the details of the math behind the algorithm you can skip to the results in Section&nbsp;5.</p>
<p>Essentially, the basis for all numerical methods involving systems that evolve in space and time is to replace continuous space and time values with a discrete mesh of space and time values. For this system, we are looking for the temperature at every location in space and time. So we will do this on a reduced space/time grid. Instead of having a function of <img src="https://latex.codecogs.com/png.latex?(x,y,z,t)"> we will have a 4-dimensional matrix that I will denote as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Au(x,y,z,t)%20%5Crightarrow%20u(x_i,y_j,z_k,t_l)%20=%20u%5El_%7Bijk%7D%0A"></p>
<p>For this I will define:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign*%7D%0Ax_i%20&amp;=%20i%20%5CDelta%20x%20%5C%5C%0Ay_j%20&amp;=%20j%20%5CDelta%20y%20%5C%5C%0Az_k%20&amp;=%20k%20%5CDelta%20z%20%5C%5C%0At_l%20&amp;=%20l%20%5CDelta%20t%20%5C%5C%0A%5Cend%7Balign*%7D%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5CDelta%20x,%20%5CDelta%20y,%20%5CDelta%20z,"> and <img src="https://latex.codecogs.com/png.latex?%5CDelta%20t"> are computational choices. Indeed, this freedom will allow me to choose <img src="https://latex.codecogs.com/png.latex?%5CDelta%20x%20=%20%5CDelta%20y%20=%20%5CDelta%20z">. I will choose <img src="https://latex.codecogs.com/png.latex?%5CDelta%20x%20=%205"> cm and <img src="https://latex.codecogs.com/png.latex?%5CDelta%20t%20=%2015"> minutes. I’ll also define the max indices for this system, and also set up values for the grid. I will also set up the <img src="https://latex.codecogs.com/png.latex?u%5El_%7Bijk%7D"> grid, and fill it with a constant value. Actually, I will do this for two different initial temperatures. If my code is working correctly, the initial temperature of the box should not matter if we let the simulation run for long enough. Think about it this way: Imagine that you have two identical coolers, one filled with ice and the other empty. Now, let the coolers sit for a year in your yard. After that year, the coolers will no longer have a different temperature.</p>
<div id="2df29995" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Computational parameters (time step and mesh size)</span></span>
<span id="cb4-2">Deltat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 15 minutes in seconds</span></span>
<span id="cb4-3">Deltax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5 cm in meters</span></span>
<span id="cb4-4"></span>
<span id="cb4-5">xmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltax)</span>
<span id="cb4-6">ymax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(W<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltax)</span>
<span id="cb4-7">zmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(H<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltax)</span>
<span id="cb4-8">tmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltat)</span>
<span id="cb4-9"></span>
<span id="cb4-10">xmid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-11">ymid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ymax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-12">zmid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-13"></span>
<span id="cb4-14">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,T,tmax)</span>
<span id="cb4-15">xgrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,L,xmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-16">ygrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,W,ymax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-17">zgrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,H,zmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the array(s) with a few different initial temperatures.</span></span>
<span id="cb4-20">u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.empty((tmax,xmax,ymax,zmax))</span>
<span id="cb4-21">uAlt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.empty((tmax,xmax,ymax,zmax))</span>
<span id="cb4-22">u_init <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> T0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>DT</span>
<span id="cb4-23">u.fill(u_init)</span>
<span id="cb4-24">uAlt_init <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (T0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>TG)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-25">uAlt.fill(uAlt_init)</span></code></pre></div>
</div>
<section id="applying-the-finite-difference-method-to-the-boundary-condition" class="level3">
<h3 class="anchored" data-anchor-id="applying-the-finite-difference-method-to-the-boundary-condition">Applying the Finite difference method to the boundary condition</h3>
<p>The boundary condition for conduction/convection states that the gradient of the temperature function at the boundary is proportional to the temperature difference across that boundary. For example on the surface where <img src="https://latex.codecogs.com/png.latex?x=0"> (or <img src="https://latex.codecogs.com/png.latex?i=0">), the outward normal direction is in the <img src="https://latex.codecogs.com/png.latex?-x"> direction: <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft.%20k%5Cfrac%7B%5Cpartial%20u%7D%7B%5Cpartial%20x%7D%5Cright%7C_%7Bx=0%7D%20=%20h(u(x=0,y,z,t)%20-%20v(x=0,y,z,t))%0A"> I will apply the <a href="https://en.wikipedia.org/wiki/Finite_difference_method">finite difference method</a> to find the spatial derivatives. <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign*%7D%0A%5Cfrac%7B%5Cpartial%20u%7D%7B%5Cpartial%20x%7D%20&amp;=%20%5Cfrac%7Bu%5El_%7Bi+1%20jk%7D-u%5El_%7Bijk%7D%7D%7B%5CDelta%20x%7D%20%20%20%5C%5C%0A%5Cfrac%7B%5Cpartial%20u%7D%7B%5Cpartial%20y%7D%20&amp;=%20%5Cfrac%7Bu%5El_%7Bij+1%20k%7D-u%5El_%7Bijk%7D%7D%7B%5CDelta%20y%7D%20%20%20%5C%5C%0A%5Cfrac%7B%5Cpartial%20u%7D%7B%5Cpartial%20z%7D%20&amp;=%20%5Cfrac%7Bu%5El_%7Bijk+1%7D-u%5El_%7Bijk%7D%7D%7B%5CDelta%20z%7D%20%20%20%5C%5C%0A%5Cend%7Balign*%7D%0A"></p>
<p>Therefore, for <img src="https://latex.codecogs.com/png.latex?i=0"> (the <img src="https://latex.codecogs.com/png.latex?x=0"> boundary) we get: <img src="https://latex.codecogs.com/png.latex?%0Au%5El_%7B1jk%7D%20-%20u%5El_%7B0jk%7D%20=%20%5Cfrac%7Bh%5CDelta%20x%7D%7Bk%7D%20%5Cleft(u%5El_%7B0jk%7D%20-%20v%5El_%7Bjk%7D%5Cright)%0A"> Solve for <img src="https://latex.codecogs.com/png.latex?u%5El_%7B0jk%7D">: <img src="https://latex.codecogs.com/png.latex?%0Au%5El_%7B0jk%7D%20=%20%5Cfrac%7Bu%5El_%7B1jk%7D%20+%20%5Cbeta%20v%5El_%7Bjk%7D%7D%7B1+%5Cbeta%7D%0A"></p>
<p>where I have defined: <img src="https://latex.codecogs.com/png.latex?%0A%5Cbeta%20=%20%5Cfrac%7Bh%20%5CDelta%20x%7D%7Bk%7D%0A"> Note that if <img src="https://latex.codecogs.com/png.latex?%5Cbeta%20=%200"> boundary has an infinite thermal conductivity and <img src="https://latex.codecogs.com/png.latex?u%5El_%7B0jk%7D%20=%20u%5El_%7B1jk%7D"> or <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Cpartial%20u%7D%7B%5Cpartial%20n%7D%20=%200">. This is the <em>Neumann Boundary Condition</em>. If <img src="https://latex.codecogs.com/png.latex?%5Cbeta%5Crightarrow%5Cinfty">, we find <img src="https://latex.codecogs.com/png.latex?u%5El_%7B0jk%7D%20=%20v%5El_%7Bjk%7D"> and the temperature at the boundary is equal to the exterior temperature. This is the <em>Dirichelet Boundary Condition</em>.</p>
<p>Plugging in some numbers, I’ll assume that the proportionality constant <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> for heat exchange with the ground is 10 times larger than the same constant for heat exchange with the air.</p>
<p>Let’s put this into code and apply the boundary condition to the initial array:</p>
<div id="0f127a0f" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Deltax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>k</span>
<span id="cb5-2">betaG <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>beta</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> applyBC(umat, tl):</span>
<span id="cb5-5">  t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Deltat</span>
<span id="cb5-6">  umat[tl, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[tl, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> vair(T0,DT,t))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>beta)</span>
<span id="cb5-7">  umat[tl, xmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[tl, xmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, :, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> vair(T0,DT,t))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>beta)</span>
<span id="cb5-8">  umat[tl, :, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[tl, :, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> vair(T0,DT,t))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>beta)</span>
<span id="cb5-9">  umat[tl, :, ymax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[tl, :, ymax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> vair(T0,DT,t))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>beta)</span>
<span id="cb5-10">  umat[tl, :, :, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[tl, :, :, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> betaG <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> vground(TG,t))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>betaG)</span>
<span id="cb5-11">  umat[tl, :, :, zmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (umat[tl, :, :, zmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> vair(T0,DT,t))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>beta)</span>
<span id="cb5-12">  </span>
<span id="cb5-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> umat</span>
<span id="cb5-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Apply BCs at t=0 to finish initializing array</span></span>
<span id="cb5-15">u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> applyBC(u, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-16">uAlt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> applyBC(uAlt,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</div>
</section>
<section id="applying-the-finite-difference-method-to-the-heat-equation-dotu-alphanabla2u" class="level3">
<h3 class="anchored" data-anchor-id="applying-the-finite-difference-method-to-the-heat-equation-dotu-alphanabla2u">Applying the finite difference method to the heat equation: <img src="https://latex.codecogs.com/png.latex?%5Cdot%7Bu%7D%20=%20%5Calpha%5Cnabla%5E2u"></h3>
<p>I will again apply the <a href="https://en.wikipedia.org/wiki/Finite_difference_method">finite difference method</a> to find the derivatives. The first derivative in time is: <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Cpartial%20u%7D%7B%5Cpartial%20t%7D%20=%20%5Cfrac%7Bu%5E%7Bl+1%7D_%7Bijk%7D%20-%20u%5E%7Bl%7D_%7Bijk%7D%7D%7B%5CDelta%20t%7D%0A"></p>
<p>Another aspect of this method is that the Laplacian at any point can be calculated through the average of the difference between the nearest neighbors of that point and the point itself: <img src="https://latex.codecogs.com/png.latex?%0A%5Cnabla%5E2%20u(x,y,z,t)%20=%20%5Cfrac%7Bu%5El_%7Bi+1%20jk%7D%20+%20u%5El_%7Bi-1%20jk%7D%20+%0A%20%20%20%20u%5El_%7Bij+1k%7D%20+%20u%5El_%7Bij-1k%7D%20+%20u%5El_%7Bijk+1%7D%20+%20u%5El_%7Bijk-1%7D%20-%206%20u%5El_%7Bijk%7D%7D%7B(%5CDelta%20x)%5E2%7D%0A"></p>
<p>The heat equation becomes: <img src="https://latex.codecogs.com/png.latex?%0Au%5E%7Bl+1%7D_%7Bijk%7D%20=%20u%5El_%7Bijk%7D%20+%20%5Cfrac%7B%5Calpha%20%5CDelta%20t%7D%7B%5CDelta%20x%5E2%7D%0A%20%20%20%20%5Cleft(u%5El_%7Bi+1%20jk%7D%20+%20u%5El_%7Bi-1%20jk%7D%20+%20u%5El_%7Bij+1k%7D%20+%20u%5El_%7Bij-1k%7D%20+%20u%5El_%7Bijk+1%7D%20+%20u%5El_%7Bijk-1%7D%20-%206%20u%5El_%7Bijk%7D%20%5Cright)%0A"> Basically, this equation gives us a method for finding the temperature after a time step given the temperature at the previous time step. I will define the dimensionless constant <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cgamma%20=%20%5Cfrac%7B%5Calpha%20%5CDelta%20t%7D%7B%5CDelta%20x%5E2%7D%0A"></p>
<p>so we finally obtain: <img src="https://latex.codecogs.com/png.latex?%0Au%5E%7Bl+1%7D_%7Bijk%7D%20=%20u%5El_%7Bijk%7D%20+%20%5Cgamma%20%5Cleft(u%5El_%7Bi+1%20jk%7D%20+%20u%5El_%7Bi-1%20jk%7D%20+%20u%5El_%7Bij+1k%7D%20+%0A%20%20%20%20%20%20u%5El_%7Bij-1k%7D%20+%20u%5El_%7Bijk+1%7D%20+%20u%5El_%7Bijk-1%7D%20-%206%20u%5El_%7Bijk%7D%20%5Cright)%0A"></p>
<p>Now I will convert this to code:</p>
<div id="5a8d57a8" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">gamma <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Deltat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calcHeatEqn(umat):</span>
<span id="cb6-3">    tm, xm, ym, zm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat.shape</span>
<span id="cb6-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply BCs</span></span>
<span id="cb6-5">    umat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> applyBC(umat, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,tm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb6-7">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, xm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb6-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, ym<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb6-9">          <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, zm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb6-10">            umat[l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,i,j,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat[l,i,j,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> gamma <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (umat[l,i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,j,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-11">                  umat[l,i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,j,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[l,i,j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[l,i,j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-12">                  umat[l,i,j,k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> umat[l,i,j,k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> umat[l,i,j,k])</span>
<span id="cb6-13">      umat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> applyBC(umat, l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> umat</span></code></pre></div>
</div>
</section>
<section id="visualizing-the-temperature" class="level3">
<h3 class="anchored" data-anchor-id="visualizing-the-temperature">Visualizing the temperature:</h3>
<p>The grid will probably be too fine to visualize well on a 3d heatmap. So I’ll settle for some cross sections. The function <code>plotheatmaps</code> will plot heat maps inside the box for a given time in 3 perpendicular planes.</p>
<div id="02075b91" class="cell" data-execution_count="7">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plotheatmaps(umat,l,i,j,k):</span>
<span id="cb7-2">  Tmin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>([u.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(),T0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>DT])</span>
<span id="cb7-3">  Tmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>([u.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(),T0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>DT])</span>
<span id="cb7-4">  </span>
<span id="cb7-5">  xSlice <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat[l,i,:,:].transpose()</span>
<span id="cb7-6">  ySlice <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat[l,:,j,:].transpose()</span>
<span id="cb7-7">  zSlice <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umat[l,:,:,k].transpose()</span>
<span id="cb7-8">  </span>
<span id="cb7-9">  time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Deltat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>l</span>
<span id="cb7-10">  tMins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb7-11">  theMinutes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tMins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb7-12">  </span>
<span id="cb7-13">  tHours <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tMins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb7-14">  theDays <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tHours <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb7-15">  theHours <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tHours <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb7-16">  </span>
<span id="cb7-17">  theTime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(theDays) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" days "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(theHours) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" hrs "</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(theMinutes) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" min"</span></span>
<span id="cb7-18"></span>
<span id="cb7-19">  xC, yC, zC <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [Deltax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i, Deltax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>j, Deltax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>k]</span>
<span id="cb7-20">  </span>
<span id="cb7-21">  fig, (ax0,ax1,ax2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(ncols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,width_ratios<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[ymax,xmax,xmax],</span>
<span id="cb7-22">              figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb7-23">    </span>
<span id="cb7-24">  fig.suptitle(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Heatbox Temp at </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>theTime<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Outdoor Temp = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>vair(T0,DT,time)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> C </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Ground Temp = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>vground(TG,time)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> C"</span>)</span>
<span id="cb7-25">    </span>
<span id="cb7-26">  im0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax0.pcolormesh(ygrid, zgrid, xSlice, shading<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flat"</span>, vmin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Tmin, vmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Tmax)</span>
<span id="cb7-27">  ax0.set_aspect(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-28">  ax0.set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>xC<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m"</span>)</span>
<span id="cb7-29">  ax0.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>)</span>
<span id="cb7-30">  ax0.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>)</span>
<span id="cb7-31"></span>
<span id="cb7-32">  im1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax1.pcolormesh(xgrid, zgrid, ySlice, shading<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flat"</span>, vmin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Tmin, vmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Tmax)</span>
<span id="cb7-33">  ax1.set_aspect(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-34">  ax1.set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"y = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>yC<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m"</span>)</span>
<span id="cb7-35">  ax1.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>)</span>
<span id="cb7-36">  ax1.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>)</span>
<span id="cb7-37">  </span>
<span id="cb7-38">  im2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax2.pcolormesh(xgrid, ygrid, zSlice, shading<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flat"</span>, vmin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Tmin, vmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Tmax)</span>
<span id="cb7-39">  ax2.set_aspect(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-40">  ax2.set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"z = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>zC<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m"</span>)</span>
<span id="cb7-41">  ax2.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>)</span>
<span id="cb7-42">  ax2.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>)</span>
<span id="cb7-43">  </span>
<span id="cb7-44">  fig.tight_layout()</span>
<span id="cb7-45">  </span>
<span id="cb7-46">  cax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_axes([ax0.get_position().x0,ax0.get_position().y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb7-47">                ax2.get_position().x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ax0.get_position().x0, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>])</span>
<span id="cb7-48">  fig.colorbar(im2, cax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cax, orientation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'horizontal'</span>)</span></code></pre></div>
</details>
</div>
<p>So the initial condition has the following heatmap:</p>
<div id="f7630514" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">plotheatmaps(u,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,xmid,ymid,zmid)</span>
<span id="cb8-2">plotheatmaps(uAlt,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,xmid,ymid,zmid)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-9-output-1.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-9-output-2.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="sec-results" class="level2">
<h2 class="anchored" data-anchor-id="sec-results">Results</h2>
<p>Finally, we will compute the time evolution of the temperature for the two scenarios.</p>
<div id="3fafa784" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calcHeatEqn(u)</span>
<span id="cb9-2">uAlt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calcHeatEqn(uAlt)</span></code></pre></div>
</div>
<section id="different-initial-condition-comparison" class="level3">
<h3 class="anchored" data-anchor-id="different-initial-condition-comparison">Different initial condition comparison</h3>
<p>I’m going to start by comparing the behavior of the system given different initial conditions for the starting temperature within the box. The hidden code below crunches the average temperatures for the plots in this and the following sections.</p>
<div id="6f430d76" class="cell" data-execution_count="10">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Calculate averages at every time step</span></span>
<span id="cb10-2">airTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(tmax)</span>
<span id="cb10-3">groundTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(tmax)</span>
<span id="cb10-4">boxTemp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(tmax)</span>
<span id="cb10-5">btErr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(tmax)</span>
<span id="cb10-6">boxTempAlt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(tmax)</span>
<span id="cb10-7">btaErr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(tmax)</span>
<span id="cb10-8">boxTempZ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((tmax,zmax))</span>
<span id="cb10-9">btzErr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((tmax,zmax))</span>
<span id="cb10-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> l <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(tmax):</span>
<span id="cb10-11">  airTemp[l] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vair(T0,DT,t[l])</span>
<span id="cb10-12">  groundTemp[l] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vground(TG,t[l])</span>
<span id="cb10-13">  ul <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u[l, :, :, :]</span>
<span id="cb10-14">  ulAlt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uAlt[l, :, :, :]</span>
<span id="cb10-15">  boxTemp[l] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(ul)</span>
<span id="cb10-16">  boxTempAlt[l] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(ulAlt)</span>
<span id="cb10-17">  btErr[l] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.std(ul)</span>
<span id="cb10-18">  btaErr[l] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.std(ulAlt)</span>
<span id="cb10-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(zmax):</span>
<span id="cb10-20">    ulk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ul[:,:,k]</span>
<span id="cb10-21">    boxTempZ[l,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(ulk)</span>
<span id="cb10-22">    btzErr[l,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.std(ulk)</span>
<span id="cb10-23"></span>
<span id="cb10-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Calcs for temp in the day</span></span>
<span id="cb10-25">stepsInDay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(oneDay<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Deltat)</span>
<span id="cb10-26">days <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>oneDay)</span>
<span id="cb10-27">day <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,days)</span>
<span id="cb10-28"></span>
<span id="cb10-29">boxTempDay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(days)</span>
<span id="cb10-30">btdErr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(days)</span>
<span id="cb10-31">boxTempDayAlt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(days)</span>
<span id="cb10-32">btdaErr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(days)</span>
<span id="cb10-33">boxTempDayZ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((days,zmax))</span>
<span id="cb10-34">btdzErr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((days,zmax))</span>
<span id="cb10-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(days):</span>
<span id="cb10-36">    lmin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>stepsInDay)</span>
<span id="cb10-37">    lmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>((d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>stepsInDay)</span>
<span id="cb10-38">    ul <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u[lmin:lmax, :, :, :]</span>
<span id="cb10-39">    boxTempDay[d] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(u[lmin:lmax, :, :, :])</span>
<span id="cb10-40">    boxTempDayAlt[d] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(uAlt[lmin:lmax, :, :, :])</span>
<span id="cb10-41">    btdErr[d] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.std(u[lmin:lmax, :, :, :])</span>
<span id="cb10-42">    btdaErr[d] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.std(uAlt[lmin:lmax, :, :, :])</span>
<span id="cb10-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(zmax):</span>
<span id="cb10-44">        boxTempDayZ[d,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(ul[:,:,:,k])</span>
<span id="cb10-45">        btdzErr[d,k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.std(ul[:,:,:,k])</span></code></pre></div>
</details>
</div>
<p>As noted previously, after a long enough time, I expect two identical boxes to exhibit the same behavior regardless of their initial conditions–much in the way that the long-term behavior of a Damped-Driven Oscillator is independent of the initial conditions. Let’s check that out here:</p>
<div id="8e44cdba" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">fig, (ax0, ax1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),sharey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-2">ax0.plot(t,boxTemp, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">rf"$T_i=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>u_init<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-3">ax0.plot(t,boxTempAlt, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">rf"$T_i=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>uAlt_init<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-4">ax0.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time (s)'</span>)</span>
<span id="cb11-5">ax0.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (deg C)'</span>)</span>
<span id="cb11-6">ax0.legend()</span>
<span id="cb11-7"></span>
<span id="cb11-8">ax1.plot(day,boxTempDay, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">rf"$T_i=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>u_init<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-9">ax1.plot(day,boxTempDayAlt, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">rf"$T_i=$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>uAlt_init<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-10">ax1.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time (days)'</span>)</span>
<span id="cb11-11">ax1.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (deg C)'</span>)</span>
<span id="cb11-12">ax1.legend()</span>
<span id="cb11-13">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-12-output-1.png" width="659" height="356" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>It would seem that the 10 days that I have simulated is long enough for these systems to reach this “steady state” solution.</p>
</section>
<section id="compare-interior-temperature-to-exterior-temp" class="level3">
<h3 class="anchored" data-anchor-id="compare-interior-temperature-to-exterior-temp">Compare interior temperature to exterior temp</h3>
<p>I’m going to plot the external (air) temperature and compare it to the average temperature in the box, as well as consider the average temperature in horizontal slices as the change in time.</p>
<div id="a655e492" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb12-2">plt.plot(t,airTemp,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Air Temp"</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dashed'</span>,linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb12-3">plt.errorbar(t,boxTemp,yerr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>btErr, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Avg. Box Temp"</span>,linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, capsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, errorevery<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span>
<span id="cb12-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time (s)'</span>)</span>
<span id="cb12-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (deg C)'</span>)</span>
<span id="cb12-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reversed</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,zmax,zmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)):</span>
<span id="cb12-7">    zval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Deltax</span>
<span id="cb12-8">    labString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Avg Temp at z=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>zval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m"</span></span>
<span id="cb12-9">    plt.plot(t,boxTempZ[:,k],label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labString, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-10">    </span>
<span id="cb12-11">plt.plot(t,groundTemp,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ground Temp"</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>,linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb12-12">plt.legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center left"</span>, bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.04</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))</span>
<span id="cb12-13">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-13-output-1.png" width="773" height="356" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Just to see that this is stabilizing, and to get an idea of how fast this stabilizes, I’m going to find a daily average temperature as above.</p>
<div id="4afd67ba" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb13-2">plt.errorbar(day,boxTempDay,yerr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>btdErr, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Avg. Box Temp"</span>,capsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb13-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time (days)'</span>)</span>
<span id="cb13-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (deg C)'</span>)</span>
<span id="cb13-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reversed</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,zmax,zmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)):</span>
<span id="cb13-6">    zval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Deltax</span>
<span id="cb13-7">    labString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Avg Temp at z=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>zval<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> m"</span></span>
<span id="cb13-8">    plt.plot(day,boxTempDayZ[:,k], marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labString) </span>
<span id="cb13-9">    </span>
<span id="cb13-10">plt.legend()</span>
<span id="cb13-11">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-14-output-1.png" width="659" height="356" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="heatmaps" class="level3">
<h3 class="anchored" data-anchor-id="heatmaps">Heatmaps</h3>
<p>Let’s view the middle cross sections every few hours on the last day:</p>
<div id="abf64b23" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(lmin,lmax,<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(stepsInDay<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)):</span>
<span id="cb14-2">  plotheatmaps(u,s,xmid,ymid,zmid)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-1.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-2.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-3.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-4.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-5.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-6.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-7.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-8.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-9.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-10.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-11.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow_files/figure-html/cell-15-output-12.png" width="757" height="322" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>This is working as a proof of concept. Job 1: Done. But there’s more to be done.</p>
<section id="next-step" class="level3">
<h3 class="anchored" data-anchor-id="next-step">Next step</h3>
<p>As a torture device, this leaves much to be desired. Right now, it’s no more effective than a chain-link fence from a temperature perspective. I’ll be working on adding in solar radiation in the next post.</p>
</section>
<section id="my-future-plans" class="level3">
<h3 class="anchored" data-anchor-id="my-future-plans">My future plans:</h3>
<p>As I seek to make this model more complex. I plan to do things that will slowly make my boring box look more like a house. Things like:</p>
<ul>
<li>Making the box house sized and adding an appropriate number of windows.</li>
<li>Add in interior walls.</li>
<li>Add in heating and cooling.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>Heat Equation</category>
  <category>Python</category>
  <category>Modeling</category>
  <category>3D system</category>
  <category>Finite Difference Method</category>
  <guid>https://datawolf04.github.io/posts/heatEqn1/modelHeatFlow.html</guid>
  <pubDate>Sun, 03 Nov 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Stack Overflow Annual Developer Survey</title>
  <dc:creator>Steven Wolf</dc:creator>
  <link>https://datawolf04.github.io/posts/tt20240903/stackOverflow.html</link>
  <description><![CDATA[ 





<p>This week’s dataset is derived from the 2024 Stack Overflow Annual Developer Survey. Conducted in May 2024, the survey gathered responses from over 65,000 developers.</p>
<p>Given that one of the big trends being discussed in the world right now is working from home vs.&nbsp;going back to the office, I was wondering if there were any trends in this data as to who is working at home. Note, that this dataset did not include gender or race data. In particular, I’m considering 3 questions:</p>
<ol type="1">
<li>Does education level matter?</li>
<li>Does age matter?</li>
<li>Does experience/expertise matter?</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"soSurvey.RData"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'helperFunctions.R'</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paletteer)</span>
<span id="cb1-5"></span>
<span id="cb1-6">personalDataCats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_branch'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'remote_work'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ed_level'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'years_code'</span>,</span>
<span id="cb1-7">                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'years_code_pro'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dev_type'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'org_size'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'country'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'currency'</span>,</span>
<span id="cb1-8">                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'comp_total'</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10">personData <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stackoverflow_survey_single_response <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_of</span>(personalDataCats)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(remote_work))</span>
<span id="cb1-13"></span>
<span id="cb1-14">cwRemote <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> qname_levels_single_response_crosswalk <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(qname<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'remote_work'</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17">cwRemote<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hybrid"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"In-person"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Remote"</span>)</span>
<span id="cb1-18">remoteLevels <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"In-person"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hybrid"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Remote"</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20">personData <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(personData,cwRemote,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(remote_work <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> level)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remote_work =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(label,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span>remoteLevels)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>qname <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>label)</span></code></pre></div>
</div>
<section id="work-type-and-education-level" class="level2">
<h2 class="anchored" data-anchor-id="work-type-and-education-level">Work type and education level</h2>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240903/stackOverflow_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This graph shows the number of responses as well as the level of education that each user has. We can see that most users of Stack Overflow have at least 4-year college degree. This would seem to be in line with the general profile of someone working in a STEM field. It is somewhat difficult to glean what, if any, role there is between work location and education level.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240903/stackOverflow_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Next, we consider the same data, but we are highlighting the counts based on work location. This plot shows that a large fraction of Stack Overflow users are working in hybrid or remote locations.</p>
<p>In the following two plots, I’ll show the same information as above, except as percentages rather than raw counts.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240903/stackOverflow_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240903/stackOverflow_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Neither of these suggests that education level would predict work location for stack overflow users.</p>
</section>
<section id="work-type-and-age" class="level2">
<h2 class="anchored" data-anchor-id="work-type-and-age">Work type and age</h2>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240903/stackOverflow_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The above plot looks at the number of responses by age. We can see clearly that most users are between ages 25 and 44.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240903/stackOverflow_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Here we see that the age group from 18-24 is working in-person much more than they work hybrid/remote. As this group is college-aged, and most colleges and universities are back to in-person instruction, this could suggest that students who are learning to code at university are using Stack Overflow for help (as this college professor hopes they would). As users age, they tend to find more hybrid/remote roles.</p>
</section>
<section id="work-type-and-experience-coding" class="level2">
<h2 class="anchored" data-anchor-id="work-type-and-experience-coding">Work type and Experience coding</h2>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240903/stackOverflow_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Here we see a possible echo of the college idea that I raised above. However, I see a few other things as well.</p>
<ol type="1">
<li>There seems to be a significant shift that as people gain experience coding, they move from in-person roles to hybrid/remote roles.</li>
<li>As you do something for a longer time, you tend to estimate more. All of the responses seem to favor numbers ending in 0 or 5, especially once you get past 10 years. So if someone has 22 years of experience, they will probably round down to 20, or up to 25, rather than stating 20 exactly.</li>
</ol>


</section>

 ]]></description>
  <category>tidyTuesday</category>
  <category>R</category>
  <guid>https://datawolf04.github.io/posts/tt20240903/stackOverflow.html</guid>
  <pubDate>Thu, 05 Sep 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>English Monarchy</title>
  <dc:creator>Steven Wolf</dc:creator>
  <link>https://datawolf04.github.io/posts/tt20240819/englishMonarchy.html</link>
  <description><![CDATA[ 





<p>This week’s #TidyTuesday is all about exploring English Monarchs and Marriages!</p>
<blockquote class="blockquote">
<p>this dataset focuses on the names, ages, and marriages of various ‘kings’ and ‘consorts’. the data ranges all the way back to 850 where the details are a bit fuzzy, spanning all the way to current day. names contain special characters; ages &amp; years can be a bit of a regex puzzle as well. additionally, the age of kings and consorts may show quite a bit of an age gap.</p>
</blockquote>
<p>The data was scraped from <a href="https://www.ianvisits.co.uk/articles/a-list-of-monarchs-by-marriage-6857/">Ian Visits</a> by <a href="https://github.com/frankiethull">f.&nbsp;hull</a>, who also curated this week’s post!</p>
<section id="additionschanges-to-the-dataset" class="level3">
<h3 class="anchored" data-anchor-id="additionschanges-to-the-dataset">Additions/changes to the dataset</h3>
<p>I will note a few things which I can highlight by looking at the end of the dataset:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 5
  king_name    king_age consort_name                consort_age year_of_marriage
  &lt;chr&gt;        &lt;chr&gt;    &lt;chr&gt;                       &lt;chr&gt;       &lt;chr&gt;           
1 Victoria     21       Albert of Saxe-Coburg and … 21          1840            
2 Edward VII   22       Alexandra of Denmark        19          1863            
3 George V     28       Mary of Teck                26          1893            
4 Edward VIII  43       Wallis Warfield Simpson     41          1937            
5 George VI    28       Elizabeth Bowes-Lyon        23          1923            
6 Elizabeth II 21       Philip of Greece and Denma… 26          1947            </code></pre>
</div>
</div>
<ol type="1">
<li>King Charles III is not in this dataset. I will add him into the dataset. I’ll also include his consort as Camilla, rather than Diana, as Diana was not married to Charles during his reign.</li>
<li>The dataset refers to the <strong>king</strong> rather than a gender neutral term. I will replace it with <strong>sovereign</strong>.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(monarchDat) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(monarchDat),<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"king"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sovereign"</span>)</span>
<span id="cb2-2">charles <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Charles III'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'57'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Camilla Parker Bowles'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xx'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2005'</span>)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(charles) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(monarchDat)</span>
<span id="cb2-4">monarchDat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(monarchDat,charles)</span></code></pre></div>
</div>
<p>I have retained the term consort as I don’t have a better one. I’m shuddering a bit though because we have a 5 and a 3 year old in this dataset:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 × 5
  sovereign_name       sovereign_age consort_name   consort_age year_of_marriage
  &lt;chr&gt;                &lt;chr&gt;         &lt;chr&gt;          &lt;chr&gt;       &lt;chr&gt;           
1 Henry the Young King 5             Margaret of F… 3           1160            </code></pre>
</div>
</div>
<p>Finally, I also collected data of the different dynasties of English royalty taken from <a href="https://en.wikipedia.org/wiki/List_of_English_monarchs">Wikipedia</a> and <a href="https://kids.britannica.com/students/article/kings-and-queens-of-Britain-at-a-glance/626780">Britannica</a>. That data is the the file <a href="./englishDynasties.csv"><code>englishDynasties.csv</code></a>.</p>
</section>
<section id="data-cleaning" class="level2">
<h2 class="anchored" data-anchor-id="data-cleaning">Data cleaning</h2>
<p>As one might expect from a dataset that has been scraped from a webpage written by a London history/culture type, there is some inconsistency in how the data has been cataloged. And as the prompt for the week says, some of the early data is “fuzzy”. So I want to clean it up. Here is a quick look at the data:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 84
Columns: 5
$ sovereign_name   &lt;chr&gt; "Æthelwulf", "Æthelwulf", "Æthelbald", "Æthelberht", …
$ sovereign_age    &lt;chr&gt; "?", "50(?)", "24", "–", "?", "19", "19", "28", "31",…
$ consort_name     &lt;chr&gt; "Osburh", "Judith of Flanders", "Judith of Flanders",…
$ consort_age      &lt;chr&gt; "?", "12", "14", "–", "?", "16", "?", "?", "?", "–", …
$ year_of_marriage &lt;chr&gt; "851(?)", "856", "858", "–", "?", "868", "893", "902"…</code></pre>
</div>
</div>
<p>As you can see above, uncertainty in the dataset is often indicated with <code>?</code> or <code>-</code> being included in the string. Ultimately I want to work with numeric variables, for things like age and year, so I’m going to need to clean them up. I also want to track whether a date or age is uncertain, so I am going to create columns tracking that information. All of the queens in the dataset are named Mary, Elizabeth, Anne, or Victoria. Using <code>str_detect</code> and some <code>OR</code> logic, I believe that I have caught all of them.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 84
Columns: 14
$ sovereign_name       &lt;chr&gt; "Æthelwulf", "Æthelwulf", "Æthelbald", "Æthelberh…
$ sovereign_age        &lt;dbl&gt; NA, 50, 24, NA, NA, 19, 19, 28, 31, NA, NA, 22, N…
$ consort_name         &lt;chr&gt; "Osburh", "Judith of Flanders", "Judith of Flande…
$ consort_age          &lt;dbl&gt; NA, 12, 14, NA, NA, 16, NA, NA, NA, NA, NA, NA, N…
$ year_of_marriage     &lt;dbl&gt; 851, 856, 858, NA, NA, 868, 893, 902, 905, NA, NA…
$ sovereign_age_unc    &lt;lgl&gt; TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, FAL…
$ consort_age_unc      &lt;lgl&gt; TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, TRU…
$ year_of_marriage_unc &lt;lgl&gt; TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FA…
$ any_unc              &lt;lgl&gt; TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE…
$ sovereign_type       &lt;fct&gt; King, King, King, King, King, King, King, King, K…
$ age_diff_pos         &lt;lgl&gt; NA, TRUE, TRUE, NA, NA, TRUE, NA, NA, NA, NA, NA,…
$ age_diff             &lt;dbl&gt; NA, 38, 10, NA, NA, 3, NA, NA, NA, NA, NA, NA, NA…
$ min_age              &lt;dbl&gt; NA, 12, 14, NA, NA, 16, NA, NA, NA, NA, NA, NA, N…
$ max_age              &lt;dbl&gt; NA, 50, 24, NA, NA, 19, NA, NA, NA, NA, NA, NA, N…</code></pre>
</div>
</div>
</section>
<section id="plan" class="level2">
<h2 class="anchored" data-anchor-id="plan">Plan</h2>
<p>Make a plot with sovereign age and consort age vs.&nbsp;the year of marriage. On this plot I’m going to highlight:</p>
<ol type="1">
<li>The age gap. If both sovereign and consort have the age recorded in the data, there will be a vertical line drawn from the younger to the elder.</li>
<li>The gender of the sovereign. Kings are light blue and queens are pink.</li>
<li>Marriages with uncertain data (either in the year or the ages of those involved) are more transparent so that they stand out less.</li>
</ol>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240819/englishMonarchy_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="one-more-visualization" class="level2">
<h2 class="anchored" data-anchor-id="one-more-visualization">One more visualization</h2>
<p>Pairs plots are fun, and the <code>ggpairs</code> function will automatically calculate some correlation values and put them on the plot as well. I’ve always done these using old school <code>pairs</code> and I thought it would be fun to look at one using the <code>ggplot</code> version. One big advantage is how it automatically uses the <code>facet_grid</code> framework to make the plots and include special plots along the diagonal. You could do the same thing with <code>pairs</code>, but it was more work.</p>
<p>A few notes about this plot:</p>
<ul>
<li>The density plots for the sovereign queens are “spikey” (for lack of a better term). There are just so few sovereign queens. Furthermore the age range at marriage is broad enough that this distribution is just not smooth. Until recently, the succession rules heavily favored male heirs. With the new rules recently adapted, maybe in another millenium or two, there will be enough sovereign queens that we can start approaching gender parity in this area.</li>
<li>Also, even though the sovereign queens were the monarch, they also were (in general) younger than their consort, while the opposite is true for the kings.</li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240819/englishMonarchy_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="the-model-that-wasnt-quite-there" class="level2">
<h2 class="anchored" data-anchor-id="the-model-that-wasnt-quite-there">The model that wasn’t quite there</h2>
<ul>
<li>I like making different kinds of models. I’m wondering if we can build a model for sovereign age at marriage given inputs like gender and year. I didn’t do it here, in part, because I think that there is other work to be done. In particular, how long a sovereign has been in power would be useful data to gather, as well as figuring out how to deal with multiple marriages such as the case of Henry VIII.</li>
</ul>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 5
  sovereign_name sovereign_age consort_name        consort_age year_of_marriage
  &lt;chr&gt;          &lt;chr&gt;         &lt;chr&gt;               &lt;chr&gt;       &lt;chr&gt;           
1 Henry VIII     18            Catherine of Aragon 24          1509            
2 Henry VIII     42            Anne Boleyn         32          1533            
3 Henry VIII     45            Jane Seymour        28          1536            
4 Henry VIII     49            Anne of Cleves      25          1540            
5 Henry VIII     49            Catherine Howard    19          1540            
6 Henry VIII     52            Catherine Parr      31          1543            </code></pre>
</div>
</div>
</section>
<section id="ew" class="level2">
<h2 class="anchored" data-anchor-id="ew">Ew</h2>
<p>I thought about ignoring this, but 2024 me simply cannot. I know it was a different time. I am simply upset that a society allowed this sort of predatory behavior under the guise of a self-proclaimed and self-serving monarch declaring his divine right as well as the nobility that enabled and enforced this behavior in service of the accumulation of power. So I’m creating a table and calling it my “Hall of Shame.” I’m not sure that age difference in a relationship is the single best way for building this group, but that’s the data that I have in front of me to use.</p>
<div class="cell">
<div class="cell-output-display">
<div id="easuuzfdlp" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#easuuzfdlp table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#easuuzfdlp thead, #easuuzfdlp tbody, #easuuzfdlp tfoot, #easuuzfdlp tr, #easuuzfdlp td, #easuuzfdlp th {
  border-style: none;
}

#easuuzfdlp p {
  margin: 0;
  padding: 0;
}

#easuuzfdlp .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#easuuzfdlp .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#easuuzfdlp .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#easuuzfdlp .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#easuuzfdlp .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#easuuzfdlp .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#easuuzfdlp .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#easuuzfdlp .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#easuuzfdlp .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#easuuzfdlp .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#easuuzfdlp .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#easuuzfdlp .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#easuuzfdlp .gt_spanner_row {
  border-bottom-style: hidden;
}

#easuuzfdlp .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#easuuzfdlp .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#easuuzfdlp .gt_from_md > :first-child {
  margin-top: 0;
}

#easuuzfdlp .gt_from_md > :last-child {
  margin-bottom: 0;
}

#easuuzfdlp .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#easuuzfdlp .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#easuuzfdlp .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#easuuzfdlp .gt_row_group_first td {
  border-top-width: 2px;
}

#easuuzfdlp .gt_row_group_first th {
  border-top-width: 2px;
}

#easuuzfdlp .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#easuuzfdlp .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#easuuzfdlp .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#easuuzfdlp .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#easuuzfdlp .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#easuuzfdlp .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#easuuzfdlp .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#easuuzfdlp .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#easuuzfdlp .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#easuuzfdlp .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#easuuzfdlp .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#easuuzfdlp .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#easuuzfdlp .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#easuuzfdlp .gt_left {
  text-align: left;
}

#easuuzfdlp .gt_center {
  text-align: center;
}

#easuuzfdlp .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#easuuzfdlp .gt_font_normal {
  font-weight: normal;
}

#easuuzfdlp .gt_font_bold {
  font-weight: bold;
}

#easuuzfdlp .gt_font_italic {
  font-style: italic;
}

#easuuzfdlp .gt_super {
  font-size: 65%;
}

#easuuzfdlp .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#easuuzfdlp .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#easuuzfdlp .gt_indent_1 {
  text-indent: 5px;
}

#easuuzfdlp .gt_indent_2 {
  text-indent: 10px;
}

#easuuzfdlp .gt_indent_3 {
  text-indent: 15px;
}

#easuuzfdlp .gt_indent_4 {
  text-indent: 20px;
}

#easuuzfdlp .gt_indent_5 {
  text-indent: 25px;
}

#easuuzfdlp .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#easuuzfdlp div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<colgroup>
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
</colgroup>
<thead>
<tr class="gt_heading header">
<th colspan="6" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="background-color: #3B7C70; color: #FFFFFF"><p>Hall of Shame</p></th>
</tr>
<tr class="gt_col_headings gt_spanner_row even">
<th colspan="2" id="Perpetraitor" class="gt_center gt_columns_top_border gt_column_spanner_outer" data-quarto-table-cell-role="th" style="background-color: #3B3A3E; color: #FFFFFF" scope="colgroup"><span class="gt_column_spanner">Perpetraitor</span></th>
<th colspan="2" id="Victim" class="gt_center gt_columns_top_border gt_column_spanner_outer" data-quarto-table-cell-role="th" style="background-color: #3B3A3E; color: #FFFFFF" scope="colgroup"><span class="gt_column_spanner">Victim</span></th>
<th rowspan="2" id="Δ" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="background-color: #3B3A3E; color: #FFFFFF" scope="col">Δ</th>
<th rowspan="2" id="Year" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="background-color: #3B3A3E; color: #FFFFFF" scope="col">Year</th>
</tr>
<tr class="gt_col_headings header">
<th id="Name" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="background-color: #3B3A3E; color: #FFFFFF" scope="col">Name</th>
<th id="Age" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="background-color: #3B3A3E; color: #FFFFFF" scope="col">Age</th>
<th id="Name" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="background-color: #3B3A3E; color: #FFFFFF" scope="col">Name</th>
<th id="Age" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="background-color: #3B3A3E; color: #FFFFFF" scope="col">Age</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="sovereign_name">Edward I</td>
<td class="gt_row gt_right" headers="sovereign_age">60</td>
<td class="gt_row gt_left" headers="consort_name">Margaret of France</td>
<td class="gt_row gt_right" headers="consort_age">20</td>
<td class="gt_row gt_right" headers="age_diff">40</td>
<td class="gt_row gt_right" headers="year_of_marriage">1299</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="sovereign_name">Æthelwulf</td>
<td class="gt_row gt_right" headers="sovereign_age">50</td>
<td class="gt_row gt_left" headers="consort_name">Judith of Flanders</td>
<td class="gt_row gt_right" headers="consort_age">12</td>
<td class="gt_row gt_right" headers="age_diff">38</td>
<td class="gt_row gt_right" headers="year_of_marriage">856</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="sovereign_name">Henry I</td>
<td class="gt_row gt_right" headers="sovereign_age">53</td>
<td class="gt_row gt_left" headers="consort_name">Adeliza of Louvain</td>
<td class="gt_row gt_right" headers="consort_age">18</td>
<td class="gt_row gt_right" headers="age_diff">35</td>
<td class="gt_row gt_right" headers="year_of_marriage">1121</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="sovereign_name">Henry VIII</td>
<td class="gt_row gt_right" headers="sovereign_age">49</td>
<td class="gt_row gt_left" headers="consort_name">Catherine Howard</td>
<td class="gt_row gt_right" headers="consort_age">19</td>
<td class="gt_row gt_right" headers="age_diff">30</td>
<td class="gt_row gt_right" headers="year_of_marriage">1540</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="sovereign_name">William IV</td>
<td class="gt_row gt_right" headers="sovereign_age">53</td>
<td class="gt_row gt_left" headers="consort_name">Adelaide of Saxe-Meiningen</td>
<td class="gt_row gt_right" headers="consort_age">26</td>
<td class="gt_row gt_right" headers="age_diff">27</td>
<td class="gt_row gt_right" headers="year_of_marriage">1818</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="sovereign_name">James II</td>
<td class="gt_row gt_right" headers="sovereign_age">40</td>
<td class="gt_row gt_left" headers="consort_name">Mary of Modena</td>
<td class="gt_row gt_right" headers="consort_age">15</td>
<td class="gt_row gt_right" headers="age_diff">25</td>
<td class="gt_row gt_right" headers="year_of_marriage">1673</td>
</tr>
</tbody><tfoot class="gt_sourcenotes">
<tr class="odd">
<td colspan="6" class="gt_sourcenote" style="background-color: #3B7C70; color: #FFFFFF"><p><strong>#TidyTuesday</strong> • Sources: Ian Visits and f.&nbsp;hull dataset</p></td>
</tr>
</tfoot>

</table>

</div>
</div>
</div>


</section>

 ]]></description>
  <category>tidyTuesday</category>
  <category>R</category>
  <guid>https://datawolf04.github.io/posts/tt20240819/englishMonarchy.html</guid>
  <pubDate>Tue, 20 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>World’s Fairs</title>
  <dc:creator>Steven Wolf</dc:creator>
  <link>https://datawolf04.github.io/posts/tt20240813/worldFairs.html</link>
  <description><![CDATA[ 





<p>This week’s #TidyTuesday is all about World’s Fairs, and I have always wanted to figure out how to make a visualization with a map. So this is the week that I try that out. In addition to the data from Wikipedia in the given dataset, I have also downloaded <a href="https://www.kaggle.com/datasets/hserdaraltan/countries-by-continent">S. Altan’s Kaggle Dataset: Countries by Continent</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rworldmap)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paletteer)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RColorBrewer)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'worldsFairs.Rdata'</span>)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'helperFunctions.R'</span>)</span></code></pre></div>
</div>
<section id="plan-and-data-cleaning" class="level2">
<h2 class="anchored" data-anchor-id="plan-and-data-cleaning">Plan and data cleaning</h2>
<p>My plan is to create visualizations that look at different world’s fair properties by continent and country. I will clean the data a bit, and then generate some tables.</p>
<section id="continental-breakdown-of-worlds-fair" class="level3">
<h3 class="anchored" data-anchor-id="continental-breakdown-of-worlds-fair">Continental breakdown of World’s fair</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">fairData <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(worlds_fairs,countryContinent, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'country'</span>)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Replace missing continents by hand</span></span>
<span id="cb2-4">missing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Europe"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Oceania"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Europe"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Europe"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Asia"</span>)</span>
<span id="cb2-5">fairData<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>continent[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(fairData<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>continent)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> missing</span>
<span id="cb2-6"></span>
<span id="cb2-7">fairDataByContinent <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> fairData <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">duration =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcFLMV</span>(start_month, start_year, end_month, end_year) </span>
<span id="cb2-10">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(continent) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb2-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb2-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">where</span>(is.numeric), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(.x,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb2-14">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start_month'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start_year'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end_month'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end_year'</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="tkevivlkel" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#tkevivlkel table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#tkevivlkel thead, #tkevivlkel tbody, #tkevivlkel tfoot, #tkevivlkel tr, #tkevivlkel td, #tkevivlkel th {
  border-style: none;
}

#tkevivlkel p {
  margin: 0;
  padding: 0;
}

#tkevivlkel .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#tkevivlkel .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#tkevivlkel .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#tkevivlkel .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#tkevivlkel .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#tkevivlkel .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#tkevivlkel .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#tkevivlkel .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#tkevivlkel .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#tkevivlkel .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#tkevivlkel .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#tkevivlkel .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#tkevivlkel .gt_spanner_row {
  border-bottom-style: hidden;
}

#tkevivlkel .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#tkevivlkel .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#tkevivlkel .gt_from_md > :first-child {
  margin-top: 0;
}

#tkevivlkel .gt_from_md > :last-child {
  margin-bottom: 0;
}

#tkevivlkel .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#tkevivlkel .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#tkevivlkel .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#tkevivlkel .gt_row_group_first td {
  border-top-width: 2px;
}

#tkevivlkel .gt_row_group_first th {
  border-top-width: 2px;
}

#tkevivlkel .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#tkevivlkel .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#tkevivlkel .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#tkevivlkel .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#tkevivlkel .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#tkevivlkel .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#tkevivlkel .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#tkevivlkel .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#tkevivlkel .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#tkevivlkel .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#tkevivlkel .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#tkevivlkel .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#tkevivlkel .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#tkevivlkel .gt_left {
  text-align: left;
}

#tkevivlkel .gt_center {
  text-align: center;
}

#tkevivlkel .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#tkevivlkel .gt_font_normal {
  font-weight: normal;
}

#tkevivlkel .gt_font_bold {
  font-weight: bold;
}

#tkevivlkel .gt_font_italic {
  font-style: italic;
}

#tkevivlkel .gt_super {
  font-size: 65%;
}

#tkevivlkel .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#tkevivlkel .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#tkevivlkel .gt_indent_1 {
  text-indent: 5px;
}

#tkevivlkel .gt_indent_2 {
  text-indent: 10px;
}

#tkevivlkel .gt_indent_3 {
  text-indent: 15px;
}

#tkevivlkel .gt_indent_4 {
  text-indent: 20px;
}

#tkevivlkel .gt_indent_5 {
  text-indent: 25px;
}

#tkevivlkel .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#tkevivlkel div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    <tr class="gt_heading">
      <td colspan="7" class="gt_heading gt_title gt_font_normal" style="background-color: #3B7C70; color: #FFFFFF;">World's Fair by the numbers</td>
    </tr>
    <tr class="gt_heading">
      <td colspan="7" class="gt_heading gt_subtitle gt_font_normal gt_bottom_border" style="background-color: #3B7C70; color: #FFFFFF;">Average properties by host continent</td>
    </tr>
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Continent">Continent</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Number Hosted">Number Hosted</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Visitors (M)">Visitors (M)</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Avg. cost (M$)">Avg. cost (M$)</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Land area (hectares)">Land area (hectares)</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Number of attending countries">Number of attending countries</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Fair duration (mo)">Fair duration (mo)</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="continent" class="gt_row gt_left">Asia</td>
<td headers="N" class="gt_row gt_right">11</td>
<td headers="visitors" class="gt_row gt_right">26.0</td>
<td headers="cost" class="gt_row gt_right">1,999.7</td>
<td headers="area" class="gt_row gt_right">169.4</td>
<td headers="attending_countries" class="gt_row gt_right">103.5</td>
<td headers="duration" class="gt_row gt_right">5.1</td></tr>
    <tr><td headers="continent" class="gt_row gt_left">Europe</td>
<td headers="N" class="gt_row gt_right">43</td>
<td headers="visitors" class="gt_row gt_right">12.7</td>
<td headers="cost" class="gt_row gt_right">547.8</td>
<td headers="area" class="gt_row gt_right">77.1</td>
<td headers="attending_countries" class="gt_row gt_right">42.7</td>
<td headers="duration" class="gt_row gt_right">5.2</td></tr>
    <tr><td headers="continent" class="gt_row gt_left">North America</td>
<td headers="N" class="gt_row gt_right">14</td>
<td headers="visitors" class="gt_row gt_right">20.9</td>
<td headers="cost" class="gt_row gt_right">281.4</td>
<td headers="area" class="gt_row gt_right">144.2</td>
<td headers="attending_countries" class="gt_row gt_right">29.8</td>
<td headers="duration" class="gt_row gt_right">8.9</td></tr>
    <tr><td headers="continent" class="gt_row gt_left">Oceania</td>
<td headers="N" class="gt_row gt_right">2</td>
<td headers="visitors" class="gt_row gt_right">9.9</td>
<td headers="cost" class="gt_row gt_right">320.5</td>
<td headers="area" class="gt_row gt_right">32.5</td>
<td headers="attending_countries" class="gt_row gt_right">34.5</td>
<td headers="duration" class="gt_row gt_right">7.0</td></tr>
  </tbody>
  <tfoot class="gt_sourcenotes">
    <tr>
      <td class="gt_sourcenote" style="background-color: #3B7C70; color: #FFFFFF;" colspan="7"><div data-qmd-base64="KiojVGlkeVR1ZXNkYXkqKiAmYnVsbDsgU291cmNlczogV2lraXBlZGlhIGFuZCBTLiBBbHRhbiBLYWdnbGUgZGF0YXNldA=="><div class="gt_from_md"><p><strong>#TidyTuesday</strong> • Sources: Wikipedia and S. Altan Kaggle dataset</p>
</div></div></td>
    </tr>
  </tfoot>
  <tfoot class="gt_footnotes">
    <tr>
      <td class="gt_footnote" style="background-color: #3B7C70; color: #FFFFFF;" colspan="7"> Missing data was ignored from averages taken.</td>
    </tr>
  </tfoot>
</table>
</div>
</div>
</div>
</section>
<section id="country-breakdown-of-worlds-fair" class="level3">
<h3 class="anchored" data-anchor-id="country-breakdown-of-worlds-fair">Country breakdown of world’s fair</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">fairDataByCountry <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> fairData <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb3-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">duration =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calcFLMV</span>(start_month, start_year, end_month, end_year) </span>
<span id="cb3-4">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(country) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb3-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb3-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">where</span>(is.numeric), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(.x,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb3-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start_month'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start_year'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end_month'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'end_year'</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="qizopjyhmy" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#qizopjyhmy table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#qizopjyhmy thead, #qizopjyhmy tbody, #qizopjyhmy tfoot, #qizopjyhmy tr, #qizopjyhmy td, #qizopjyhmy th {
  border-style: none;
}

#qizopjyhmy p {
  margin: 0;
  padding: 0;
}

#qizopjyhmy .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#qizopjyhmy .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#qizopjyhmy .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#qizopjyhmy .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#qizopjyhmy .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qizopjyhmy .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qizopjyhmy .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qizopjyhmy .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#qizopjyhmy .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#qizopjyhmy .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#qizopjyhmy .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#qizopjyhmy .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#qizopjyhmy .gt_spanner_row {
  border-bottom-style: hidden;
}

#qizopjyhmy .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#qizopjyhmy .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#qizopjyhmy .gt_from_md > :first-child {
  margin-top: 0;
}

#qizopjyhmy .gt_from_md > :last-child {
  margin-bottom: 0;
}

#qizopjyhmy .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#qizopjyhmy .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#qizopjyhmy .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#qizopjyhmy .gt_row_group_first td {
  border-top-width: 2px;
}

#qizopjyhmy .gt_row_group_first th {
  border-top-width: 2px;
}

#qizopjyhmy .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qizopjyhmy .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#qizopjyhmy .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#qizopjyhmy .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qizopjyhmy .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qizopjyhmy .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#qizopjyhmy .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#qizopjyhmy .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#qizopjyhmy .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qizopjyhmy .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qizopjyhmy .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qizopjyhmy .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qizopjyhmy .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qizopjyhmy .gt_left {
  text-align: left;
}

#qizopjyhmy .gt_center {
  text-align: center;
}

#qizopjyhmy .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#qizopjyhmy .gt_font_normal {
  font-weight: normal;
}

#qizopjyhmy .gt_font_bold {
  font-weight: bold;
}

#qizopjyhmy .gt_font_italic {
  font-style: italic;
}

#qizopjyhmy .gt_super {
  font-size: 65%;
}

#qizopjyhmy .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#qizopjyhmy .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#qizopjyhmy .gt_indent_1 {
  text-indent: 5px;
}

#qizopjyhmy .gt_indent_2 {
  text-indent: 10px;
}

#qizopjyhmy .gt_indent_3 {
  text-indent: 15px;
}

#qizopjyhmy .gt_indent_4 {
  text-indent: 20px;
}

#qizopjyhmy .gt_indent_5 {
  text-indent: 25px;
}

#qizopjyhmy .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#qizopjyhmy div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    <tr class="gt_heading">
      <td colspan="7" class="gt_heading gt_title gt_font_normal" style="background-color: #3B7C70; color: #FFFFFF;">World's Fair by the numbers</td>
    </tr>
    <tr class="gt_heading">
      <td colspan="7" class="gt_heading gt_subtitle gt_font_normal gt_bottom_border" style="background-color: #3B7C70; color: #FFFFFF;">Average properties by host country</td>
    </tr>
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Country">Country</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Number Hosted">Number Hosted</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Visitors (M)">Visitors (M)</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Fair cost (M$)">Fair cost (M$)</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Land area (hectares)">Land area (hectares)</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Number of attending countries">Number of attending countries</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" style="background-color: #3B3A3E; color: #FFFFFF;" scope="col" id="Fair duration (mo)">Fair duration (mo)</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="country" class="gt_row gt_left">Australia</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">18.5</td>
<td headers="cost" class="gt_row gt_right">625.0</td>
<td headers="area" class="gt_row gt_right">40.0</td>
<td headers="attending_countries" class="gt_row gt_right">36.0</td>
<td headers="duration" class="gt_row gt_right">7.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Austria-Hungary</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">7.2</td>
<td headers="cost" class="gt_row gt_right">95.0</td>
<td headers="area" class="gt_row gt_right">233.0</td>
<td headers="attending_countries" class="gt_row gt_right">35.0</td>
<td headers="duration" class="gt_row gt_right">6.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Belgium</td>
<td headers="N" class="gt_row gt_right">7</td>
<td headers="visitors" class="gt_row gt_right">16.4</td>
<td headers="cost" class="gt_row gt_right">558.8</td>
<td headers="area" class="gt_row gt_right">117.7</td>
<td headers="attending_countries" class="gt_row gt_right">26.9</td>
<td headers="duration" class="gt_row gt_right">6.7</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Bulgaria</td>
<td headers="N" class="gt_row gt_right">3</td>
<td headers="visitors" class="gt_row gt_right">1.0</td>
<td headers="cost" class="gt_row gt_right">—</td>
<td headers="area" class="gt_row gt_right">5.8</td>
<td headers="attending_countries" class="gt_row gt_right">40.5</td>
<td headers="duration" class="gt_row gt_right">1.7</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Canada</td>
<td headers="N" class="gt_row gt_right">2</td>
<td headers="visitors" class="gt_row gt_right">36.2</td>
<td headers="cost" class="gt_row gt_right">371.0</td>
<td headers="area" class="gt_row gt_right">217.5</td>
<td headers="attending_countries" class="gt_row gt_right">58.5</td>
<td headers="duration" class="gt_row gt_right">6.5</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Colony of Victoria</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">1.3</td>
<td headers="cost" class="gt_row gt_right">16.0</td>
<td headers="area" class="gt_row gt_right">25.0</td>
<td headers="attending_countries" class="gt_row gt_right">33.0</td>
<td headers="duration" class="gt_row gt_right">7.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Finland</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">—</td>
<td headers="cost" class="gt_row gt_right">—</td>
<td headers="area" class="gt_row gt_right">0.1</td>
<td headers="attending_countries" class="gt_row gt_right">25.0</td>
<td headers="duration" class="gt_row gt_right">1.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">France</td>
<td headers="N" class="gt_row gt_right">9</td>
<td headers="visitors" class="gt_row gt_right">21.6</td>
<td headers="cost" class="gt_row gt_right">556.0</td>
<td headers="area" class="gt_row gt_right">67.9</td>
<td headers="attending_countries" class="gt_row gt_right">34.5</td>
<td headers="duration" class="gt_row gt_right">5.4</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Germany</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">18.1</td>
<td headers="cost" class="gt_row gt_right">3,400.0</td>
<td headers="area" class="gt_row gt_right">160.0</td>
<td headers="attending_countries" class="gt_row gt_right">155.0</td>
<td headers="duration" class="gt_row gt_right">5.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Haiti</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">—</td>
<td headers="cost" class="gt_row gt_right">—</td>
<td headers="area" class="gt_row gt_right">24.0</td>
<td headers="attending_countries" class="gt_row gt_right">15.0</td>
<td headers="duration" class="gt_row gt_right">7.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Hungary</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">1.9</td>
<td headers="cost" class="gt_row gt_right">—</td>
<td headers="area" class="gt_row gt_right">35.0</td>
<td headers="attending_countries" class="gt_row gt_right">52.0</td>
<td headers="duration" class="gt_row gt_right">2.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Israel</td>
<td headers="N" class="gt_row gt_right">2</td>
<td headers="visitors" class="gt_row gt_right">—</td>
<td headers="cost" class="gt_row gt_right">—</td>
<td headers="area" class="gt_row gt_right">29.8</td>
<td headers="attending_countries" class="gt_row gt_right">13.0</td>
<td headers="duration" class="gt_row gt_right">2.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Italy</td>
<td headers="N" class="gt_row gt_right">8</td>
<td headers="visitors" class="gt_row gt_right">7.7</td>
<td headers="cost" class="gt_row gt_right">26.0</td>
<td headers="area" class="gt_row gt_right">68.3</td>
<td headers="attending_countries" class="gt_row gt_right">44.1</td>
<td headers="duration" class="gt_row gt_right">5.5</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Japan</td>
<td headers="N" class="gt_row gt_right">4</td>
<td headers="visitors" class="gt_row gt_right">27.5</td>
<td headers="cost" class="gt_row gt_right">30.0</td>
<td headers="area" class="gt_row gt_right">175.7</td>
<td headers="attending_countries" class="gt_row gt_right">69.8</td>
<td headers="duration" class="gt_row gt_right">7.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Kazakhstan</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">4.1</td>
<td headers="cost" class="gt_row gt_right">—</td>
<td headers="area" class="gt_row gt_right">25.0</td>
<td headers="attending_countries" class="gt_row gt_right">115.0</td>
<td headers="duration" class="gt_row gt_right">4.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">People's Republic of China</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">73.1</td>
<td headers="cost" class="gt_row gt_right">4,200.0</td>
<td headers="area" class="gt_row gt_right">523.0</td>
<td headers="attending_countries" class="gt_row gt_right">192.0</td>
<td headers="duration" class="gt_row gt_right">6.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Portugal</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">10.1</td>
<td headers="cost" class="gt_row gt_right">—</td>
<td headers="area" class="gt_row gt_right">50.0</td>
<td headers="attending_countries" class="gt_row gt_right">143.0</td>
<td headers="duration" class="gt_row gt_right">5.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">South Korea</td>
<td headers="N" class="gt_row gt_right">2</td>
<td headers="visitors" class="gt_row gt_right">11.3</td>
<td headers="cost" class="gt_row gt_right">1,769.0</td>
<td headers="area" class="gt_row gt_right">57.5</td>
<td headers="attending_countries" class="gt_row gt_right">122.0</td>
<td headers="duration" class="gt_row gt_right">4.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Spain</td>
<td headers="N" class="gt_row gt_right">4</td>
<td headers="visitors" class="gt_row gt_right">13.9</td>
<td headers="cost" class="gt_row gt_right">21.0</td>
<td headers="area" class="gt_row gt_right">101.2</td>
<td headers="attending_countries" class="gt_row gt_right">68.8</td>
<td headers="duration" class="gt_row gt_right">7.2</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Sweden</td>
<td headers="N" class="gt_row gt_right">3</td>
<td headers="visitors" class="gt_row gt_right">—</td>
<td headers="cost" class="gt_row gt_right">—</td>
<td headers="area" class="gt_row gt_right">0.5</td>
<td headers="attending_countries" class="gt_row gt_right">18.3</td>
<td headers="duration" class="gt_row gt_right">2.3</td></tr>
    <tr><td headers="country" class="gt_row gt_left">United Arab Emirates</td>
<td headers="N" class="gt_row gt_right">1</td>
<td headers="visitors" class="gt_row gt_right">24.1</td>
<td headers="cost" class="gt_row gt_right">—</td>
<td headers="area" class="gt_row gt_right">438.0</td>
<td headers="attending_countries" class="gt_row gt_right">192.0</td>
<td headers="duration" class="gt_row gt_right">6.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">United Kingdom</td>
<td headers="N" class="gt_row gt_right">2</td>
<td headers="visitors" class="gt_row gt_right">6.0</td>
<td headers="cost" class="gt_row gt_right">83.5</td>
<td headers="area" class="gt_row gt_right">12.5</td>
<td headers="attending_countries" class="gt_row gt_right">32.0</td>
<td headers="duration" class="gt_row gt_right">7.0</td></tr>
    <tr><td headers="country" class="gt_row gt_left">United States</td>
<td headers="N" class="gt_row gt_right">11</td>
<td headers="visitors" class="gt_row gt_right">18.2</td>
<td headers="cost" class="gt_row gt_right">265.1</td>
<td headers="area" class="gt_row gt_right">141.8</td>
<td headers="attending_countries" class="gt_row gt_right">25.6</td>
<td headers="duration" class="gt_row gt_right">9.5</td></tr>
    <tr><td headers="country" class="gt_row gt_left">West Germany</td>
<td headers="N" class="gt_row gt_right">2</td>
<td headers="visitors" class="gt_row gt_right">2.1</td>
<td headers="cost" class="gt_row gt_right">—</td>
<td headers="area" class="gt_row gt_right">51.6</td>
<td headers="attending_countries" class="gt_row gt_right">24.5</td>
<td headers="duration" class="gt_row gt_right">4.0</td></tr>
  </tbody>
  <tfoot class="gt_sourcenotes">
    <tr>
      <td class="gt_sourcenote" style="background-color: #3B7C70; color: #FFFFFF;" colspan="7"><div data-qmd-base64="KiojVGlkeVR1ZXNkYXkqKiAmYnVsbDsgU291cmNlczogV2lraXBlZGlhIGFuZCBTLiBBbHRhbiBLYWdnbGUgZGF0YXNldA=="><div class="gt_from_md"><p><strong>#TidyTuesday</strong> • Sources: Wikipedia and S. Altan Kaggle dataset</p>
</div></div></td>
    </tr>
  </tfoot>
  <tfoot class="gt_footnotes">
    <tr>
      <td class="gt_footnote" style="background-color: #3B7C70; color: #FFFFFF;" colspan="7"> Missing data was ignored from averages taken. Blank values imply no data exists for that country and quantity.</td>
    </tr>
  </tfoot>
</table>
</div>
</div>
</div>
</section>
</section>
<section id="putting-this-on-a-map" class="level2">
<h2 class="anchored" data-anchor-id="putting-this-on-a-map">Putting this on a map</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">worldFairMap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">joinCountryData2Map</span>(fairDataByCountry, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">joinCode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NAME'</span>,</span>
<span id="cb4-2">                                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nameJoinColumn =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"country"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>21 codes from your data successfully matched countries in the map
3 codes from your data failed to match with a country code in the map
222 codes from the map weren't represented in your data</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xaxs=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"i"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yaxs=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"i"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex.main=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-2">attendMap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mapCountryData</span>(worldFairMap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">addLegend=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb6-3">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nameColumnToPlot =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'attending_countries'</span>,</span>
<span id="cb6-4">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">catMethod =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pretty"</span>,</span>
<span id="cb6-5">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colourPalette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Purples"</span>),</span>
<span id="cb6-6">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">oceanCol=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lightblue'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">missingCountryCol =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,</span>
<span id="cb6-7">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapTitle=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country attendance"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>You asked for 7 categories, 10 were used due to pretty() classification</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in brewer.pal(10, "Purples"): n too large, allowed maximum for palette Purples is 9
Returning the palette you asked for with that many colors</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in rwmGetColours(colourPalette, numColours): 9 colours specified and 10
required, using interpolation to calculate colours</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(addMapLegend, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(attendMap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legendWidth=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legendMar=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240813/worldFairs_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">costMap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mapCountryData</span>(worldFairMap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nameColumnToPlot =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cost'</span>,</span>
<span id="cb11-2">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">catMethod =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pretty"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">addLegend=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb11-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colourPalette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greens"</span>),</span>
<span id="cb11-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">oceanCol=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lightblue'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">missingCountryCol =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,</span>
<span id="cb11-5">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapTitle=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cost in Millions"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>You asked for 7 categories, 9 were used due to pretty() classification</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in brewer.pal(10, "Greens"): n too large, allowed maximum for palette Greens is 9
Returning the palette you asked for with that many colors</code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(addMapLegend, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(costMap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legendWidth=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legendMar=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240813/worldFairs_files/figure-html/unnamed-chunk-6-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">areaMap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mapCountryData</span>(worldFairMap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nameColumnToPlot =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'area'</span>,</span>
<span id="cb15-2">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">catMethod =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pretty"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">addLegend=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb15-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colourPalette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PuBuGn"</span>),</span>
<span id="cb15-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">oceanCol=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lightblue'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">missingCountryCol =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,</span>
<span id="cb15-5">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapTitle=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Size of fairgrounds"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>You asked for 7 categories, 6 were used due to pretty() classification</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in brewer.pal(10, "PuBuGn"): n too large, allowed maximum for palette PuBuGn is 9
Returning the palette you asked for with that many colors</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in rwmGetColours(colourPalette, numColours): 9 colours specified and 6
required, using interpolation to calculate colours</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(addMapLegend, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(areaMap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legendWidth=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legendMar=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240813/worldFairs_files/figure-html/unnamed-chunk-6-3.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">visitMap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mapCountryData</span>(worldFairMap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nameColumnToPlot =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>,</span>
<span id="cb20-2">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">catMethod =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pretty"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">addLegend=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb20-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colourPalette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OrRd"</span>),</span>
<span id="cb20-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">oceanCol=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lightblue'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">missingCountryCol =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,</span>
<span id="cb20-5">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapTitle=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fair Visitors by the Million"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>You asked for 7 categories, 8 were used due to pretty() classification</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in brewer.pal(10, "OrRd"): n too large, allowed maximum for palette OrRd is 9
Returning the palette you asked for with that many colors</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in rwmGetColours(colourPalette, numColours): 9 colours specified and 8
required, using interpolation to calculate colours</code></pre>
</div>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(addMapLegend, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(visitMap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legendWidth=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legendMar=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240813/worldFairs_files/figure-html/unnamed-chunk-6-4.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">timeMap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mapCountryData</span>(worldFairMap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nameColumnToPlot =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'duration'</span>,</span>
<span id="cb25-2">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">catMethod =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pretty"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">addLegend=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb25-3">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colourPalette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OrRd"</span>),</span>
<span id="cb25-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">oceanCol=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lightblue'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">missingCountryCol =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,</span>
<span id="cb25-5">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapTitle=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Length of the World's Fair"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>You asked for 7 categories, 9 were used due to pretty() classification</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in brewer.pal(10, "OrRd"): n too large, allowed maximum for palette OrRd is 9
Returning the palette you asked for with that many colors</code></pre>
</div>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(addMapLegend, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(timeMap, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legendWidth=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legendMar=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/tt20240813/worldFairs_files/figure-html/unnamed-chunk-6-5.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>tidyTuesday</category>
  <category>R</category>
  <category>maps</category>
  <guid>https://datawolf04.github.io/posts/tt20240813/worldFairs.html</guid>
  <pubDate>Wed, 14 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Scraping Weather Data-Proof of concept</title>
  <dc:creator>Steven Wolf</dc:creator>
  <link>https://datawolf04.github.io/posts/weatherScrape240808/weatherScrape.html</link>
  <description><![CDATA[ 





<p>My friend, <a href="https://benleese.com">Ben Leese</a>, was telling me about his most recent project. He has a passion for going through old naturalist’s notebooks and pulling out data from the depths of that analog mess and bringing it into the digital world. He was talking to me about how weather could impact different bird behaviors. But he only had binary weather data (Yes, it rained/No, it didn’t rain). Furthermore, it was from Raleigh, NC rather than Zebulon, NC. While these places are close on the map, weather is even more local than politics. So I said that I’d try to find some better weather data for him.</p>
<p>I found this <a href="https://zperzan.github.io/projects/scrape-weather-underground/">helpful python script</a> for scraping the weather data from <a href="https://www.wunderground.com">Weather Underground</a>, which I will adapt to my purpose.</p>
<div id="8418626f" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> bs4 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BeautifulSoup <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> BS</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> selenium <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> webdriver</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> great_tables <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GT</span>
<span id="cb1-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scrape_wunderground <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
</div>
<p>I will scrape weather from the <a href="https://www.wunderground.com/dashboard/pws/KNCZEBUL74?cm_ven=localwx_pwsdash">BreakingWind station</a> with code <code>KNCZEBUL74</code> on 8/1/2024, as I am pretty sure this is the closest station to the desired location.</p>
<div id="7aec2dff" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">station_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KNCZEBUL74"</span></span>
<span id="cb2-2">date_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-08-01"</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">(</span>
<span id="cb2-5">  GT(scrape_wunderground(station_id,date_id).head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span>
<span id="cb2-6">    .tab_options(</span>
<span id="cb2-7">      column_labels_background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3B3A3EFF"</span>,</span>
<span id="cb2-8">  )</span>
<span id="cb2-9">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div id="ojfftgapgl" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#ojfftgapgl table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#ojfftgapgl thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#ojfftgapgl p { margin: 0; padding: 0; }
 #ojfftgapgl .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #ojfftgapgl .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #ojfftgapgl .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #ojfftgapgl .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #ojfftgapgl .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #ojfftgapgl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }
 #ojfftgapgl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #ojfftgapgl .gt_col_heading { color: #FFFFFF; background-color: #3B3A3EFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #ojfftgapgl .gt_column_spanner_outer { color: #FFFFFF; background-color: #3B3A3EFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #ojfftgapgl .gt_column_spanner_outer:first-child { padding-left: 0; }
 #ojfftgapgl .gt_column_spanner_outer:last-child { padding-right: 0; }
 #ojfftgapgl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #ojfftgapgl .gt_spanner_row { border-bottom-style: hidden; }
 #ojfftgapgl .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #ojfftgapgl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }
 #ojfftgapgl .gt_from_md> :first-child { margin-top: 0; }
 #ojfftgapgl .gt_from_md> :last-child { margin-bottom: 0; }
 #ojfftgapgl .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }
 #ojfftgapgl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }
 #ojfftgapgl .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #ojfftgapgl .gt_row_group_first td { border-top-width: 2px; }
 #ojfftgapgl .gt_row_group_first th { border-top-width: 2px; }
 #ojfftgapgl .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }
 #ojfftgapgl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #ojfftgapgl .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #ojfftgapgl .gt_left { text-align: left; }
 #ojfftgapgl .gt_center { text-align: center; }
 #ojfftgapgl .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #ojfftgapgl .gt_font_normal { font-weight: normal; }
 #ojfftgapgl .gt_font_bold { font-weight: bold; }
 #ojfftgapgl .gt_font_italic { font-style: italic; }
 #ojfftgapgl .gt_super { font-size: 65%; }
 #ojfftgapgl .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #ojfftgapgl .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<tbody>
<tr class="gt_col_headings odd">
<td id="timestamps" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">timestamps</td>
<td id="Temperature" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Temperature</td>
<td id="Dew Point" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Dew Point</td>
<td id="Humidity" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Humidity</td>
<td id="Wind Speed" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Wind Speed</td>
<td id="Wind Gust" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Wind Gust</td>
<td id="Pressure" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Pressure</td>
<td id="Precip. Rate" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Precip. Rate</td>
<td id="Precip. Accum." class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Precip. Accum.</td>
</tr>
</tbody>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">2024-08-01 12:04 AM</td>
<td class="gt_row gt_right">75.0</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-08-01 12:09 AM</td>
<td class="gt_row gt_right">75.0</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-08-01 12:14 AM</td>
<td class="gt_row gt_right">75.0</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-08-01 12:19 AM</td>
<td class="gt_row gt_right">74.8</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">91.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-08-01 12:24 AM</td>
<td class="gt_row gt_right">74.8</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">91.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.93</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-08-01 12:29 AM</td>
<td class="gt_row gt_right">74.8</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">91.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.93</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-08-01 12:34 AM</td>
<td class="gt_row gt_right">74.7</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.93</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-08-01 12:39 AM</td>
<td class="gt_row gt_right">74.7</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.93</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-08-01 12:44 AM</td>
<td class="gt_row gt_right">74.6</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.93</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-08-01 12:49 AM</td>
<td class="gt_row gt_right">74.5</td>
<td class="gt_row gt_right">72.6</td>
<td class="gt_row gt_right">93.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.93</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-08-01 12:54 AM</td>
<td class="gt_row gt_right">74.5</td>
<td class="gt_row gt_right">73.0</td>
<td class="gt_row gt_right">93.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.93</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-08-01 12:59 AM</td>
<td class="gt_row gt_right">74.7</td>
<td class="gt_row gt_right">73.0</td>
<td class="gt_row gt_right">93.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.93</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-08-01 1:04 AM</td>
<td class="gt_row gt_right">74.7</td>
<td class="gt_row gt_right">73.0</td>
<td class="gt_row gt_right">93.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-08-01 1:09 AM</td>
<td class="gt_row gt_right">74.7</td>
<td class="gt_row gt_right">72.3</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-08-01 1:14 AM</td>
<td class="gt_row gt_right">74.7</td>
<td class="gt_row gt_right">72.2</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-08-01 1:19 AM</td>
<td class="gt_row gt_right">74.6</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-08-01 1:24 AM</td>
<td class="gt_row gt_right">74.5</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-08-01 1:29 AM</td>
<td class="gt_row gt_right">74.5</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">92.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-08-01 1:34 AM</td>
<td class="gt_row gt_right">74.5</td>
<td class="gt_row gt_right">72.9</td>
<td class="gt_row gt_right">93.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-08-01 1:39 AM</td>
<td class="gt_row gt_right">74.5</td>
<td class="gt_row gt_right">73.0</td>
<td class="gt_row gt_right">93.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.92</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
</tbody>
</table>


</div>
        
</div>
</div>
<p>And it works! That being said, I’ll have to find a different weather station because this one seems somewhat new. There is only partial data for 5/29/2024.</p>
<div id="228036c4" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">date_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-05-29"</span></span>
<span id="cb3-2">(</span>
<span id="cb3-3">  GT(scrape_wunderground(station_id,date_id).head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span>
<span id="cb3-4">    .tab_options(</span>
<span id="cb3-5">      column_labels_background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3B3A3EFF"</span>,</span>
<span id="cb3-6">  )</span>
<span id="cb3-7">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div id="nwbjaithrb" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#nwbjaithrb table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#nwbjaithrb thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#nwbjaithrb p { margin: 0; padding: 0; }
 #nwbjaithrb .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #nwbjaithrb .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #nwbjaithrb .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #nwbjaithrb .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #nwbjaithrb .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #nwbjaithrb .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }
 #nwbjaithrb .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #nwbjaithrb .gt_col_heading { color: #FFFFFF; background-color: #3B3A3EFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #nwbjaithrb .gt_column_spanner_outer { color: #FFFFFF; background-color: #3B3A3EFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #nwbjaithrb .gt_column_spanner_outer:first-child { padding-left: 0; }
 #nwbjaithrb .gt_column_spanner_outer:last-child { padding-right: 0; }
 #nwbjaithrb .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #nwbjaithrb .gt_spanner_row { border-bottom-style: hidden; }
 #nwbjaithrb .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #nwbjaithrb .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }
 #nwbjaithrb .gt_from_md> :first-child { margin-top: 0; }
 #nwbjaithrb .gt_from_md> :last-child { margin-bottom: 0; }
 #nwbjaithrb .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }
 #nwbjaithrb .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }
 #nwbjaithrb .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #nwbjaithrb .gt_row_group_first td { border-top-width: 2px; }
 #nwbjaithrb .gt_row_group_first th { border-top-width: 2px; }
 #nwbjaithrb .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }
 #nwbjaithrb .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #nwbjaithrb .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #nwbjaithrb .gt_left { text-align: left; }
 #nwbjaithrb .gt_center { text-align: center; }
 #nwbjaithrb .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #nwbjaithrb .gt_font_normal { font-weight: normal; }
 #nwbjaithrb .gt_font_bold { font-weight: bold; }
 #nwbjaithrb .gt_font_italic { font-style: italic; }
 #nwbjaithrb .gt_super { font-size: 65%; }
 #nwbjaithrb .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #nwbjaithrb .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<tbody>
<tr class="gt_col_headings odd">
<td id="timestamps" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">timestamps</td>
<td id="Temperature" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Temperature</td>
<td id="Dew Point" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Dew Point</td>
<td id="Humidity" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Humidity</td>
<td id="Wind Speed" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Wind Speed</td>
<td id="Wind Gust" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Wind Gust</td>
<td id="Pressure" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Pressure</td>
<td id="Precip. Rate" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Precip. Rate</td>
<td id="Precip. Accum." class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Precip. Accum.</td>
</tr>
</tbody>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">2024-05-29 10:34 PM</td>
<td class="gt_row gt_right">71.2</td>
<td class="gt_row gt_right">51.2</td>
<td class="gt_row gt_right">50.0</td>
<td class="gt_row gt_right">0.2</td>
<td class="gt_row gt_right">0.2</td>
<td class="gt_row gt_right">29.93</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-05-29 10:39 PM</td>
<td class="gt_row gt_right">71.7</td>
<td class="gt_row gt_right">53.9</td>
<td class="gt_row gt_right">54.0</td>
<td class="gt_row gt_right">1.4</td>
<td class="gt_row gt_right">9.0</td>
<td class="gt_row gt_right">29.94</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-05-29 10:44 PM</td>
<td class="gt_row gt_right">73.1</td>
<td class="gt_row gt_right">55.1</td>
<td class="gt_row gt_right">53.0</td>
<td class="gt_row gt_right">0.8</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.94</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-05-29 10:49 PM</td>
<td class="gt_row gt_right">72.8</td>
<td class="gt_row gt_right">54.9</td>
<td class="gt_row gt_right">53.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.94</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-05-29 10:54 PM</td>
<td class="gt_row gt_right">72.4</td>
<td class="gt_row gt_right">53.5</td>
<td class="gt_row gt_right">52.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.94</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-05-29 10:59 PM</td>
<td class="gt_row gt_right">72.2</td>
<td class="gt_row gt_right">53.0</td>
<td class="gt_row gt_right">52.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.94</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-05-29 11:04 PM</td>
<td class="gt_row gt_right">72.1</td>
<td class="gt_row gt_right">53.0</td>
<td class="gt_row gt_right">52.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.95</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-05-29 11:09 PM</td>
<td class="gt_row gt_right">72.0</td>
<td class="gt_row gt_right">53.0</td>
<td class="gt_row gt_right">52.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.95</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-05-29 11:14 PM</td>
<td class="gt_row gt_right">71.9</td>
<td class="gt_row gt_right">52.1</td>
<td class="gt_row gt_right">51.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.95</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-05-29 11:19 PM</td>
<td class="gt_row gt_right">71.8</td>
<td class="gt_row gt_right">51.8</td>
<td class="gt_row gt_right">51.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.95</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-05-29 11:24 PM</td>
<td class="gt_row gt_right">71.6</td>
<td class="gt_row gt_right">51.6</td>
<td class="gt_row gt_right">51.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.95</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-05-29 11:29 PM</td>
<td class="gt_row gt_right">71.6</td>
<td class="gt_row gt_right">51.0</td>
<td class="gt_row gt_right">50.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.95</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-05-29 11:34 PM</td>
<td class="gt_row gt_right">71.4</td>
<td class="gt_row gt_right">51.0</td>
<td class="gt_row gt_right">49.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">10.0</td>
<td class="gt_row gt_right">29.95</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-05-29 11:39 PM</td>
<td class="gt_row gt_right">71.3</td>
<td class="gt_row gt_right">51.0</td>
<td class="gt_row gt_right">49.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">8.0</td>
<td class="gt_row gt_right">29.95</td>
<td class="gt_row gt_right">0.1</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-05-29 11:44 PM</td>
<td class="gt_row gt_right">71.2</td>
<td class="gt_row gt_right">50.1</td>
<td class="gt_row gt_right">48.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">2.0</td>
<td class="gt_row gt_right">29.95</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-05-29 11:49 PM</td>
<td class="gt_row gt_right">71.1</td>
<td class="gt_row gt_right">50.0</td>
<td class="gt_row gt_right">47.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">1.3</td>
<td class="gt_row gt_right">29.95</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">2024-05-29 11:54 PM</td>
<td class="gt_row gt_right">71.1</td>
<td class="gt_row gt_right">50.0</td>
<td class="gt_row gt_right">47.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.94</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.1</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">2024-05-29 11:59 PM</td>
<td class="gt_row gt_right">70.9</td>
<td class="gt_row gt_right">50.0</td>
<td class="gt_row gt_right">47.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">29.94</td>
<td class="gt_row gt_right">0.0</td>
<td class="gt_row gt_right">0.1</td>
</tr>
</tbody>
</table>


</div>
        
</div>
</div>
<p>And 5/28/2024 has no data.</p>
<div id="c2489a03" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">date_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-05-28"</span></span>
<span id="cb4-2">(</span>
<span id="cb4-3">  GT(scrape_wunderground(station_id,date_id).head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span>
<span id="cb4-4">    .tab_options(</span>
<span id="cb4-5">      column_labels_background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3B3A3EFF"</span>,</span>
<span id="cb4-6">  )</span>
<span id="cb4-7">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div id="ghtfzfvkho" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#ghtfzfvkho table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#ghtfzfvkho thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#ghtfzfvkho p { margin: 0; padding: 0; }
 #ghtfzfvkho .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #ghtfzfvkho .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #ghtfzfvkho .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #ghtfzfvkho .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #ghtfzfvkho .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #ghtfzfvkho .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }
 #ghtfzfvkho .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #ghtfzfvkho .gt_col_heading { color: #FFFFFF; background-color: #3B3A3EFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #ghtfzfvkho .gt_column_spanner_outer { color: #FFFFFF; background-color: #3B3A3EFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #ghtfzfvkho .gt_column_spanner_outer:first-child { padding-left: 0; }
 #ghtfzfvkho .gt_column_spanner_outer:last-child { padding-right: 0; }
 #ghtfzfvkho .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #ghtfzfvkho .gt_spanner_row { border-bottom-style: hidden; }
 #ghtfzfvkho .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #ghtfzfvkho .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }
 #ghtfzfvkho .gt_from_md> :first-child { margin-top: 0; }
 #ghtfzfvkho .gt_from_md> :last-child { margin-bottom: 0; }
 #ghtfzfvkho .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }
 #ghtfzfvkho .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }
 #ghtfzfvkho .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #ghtfzfvkho .gt_row_group_first td { border-top-width: 2px; }
 #ghtfzfvkho .gt_row_group_first th { border-top-width: 2px; }
 #ghtfzfvkho .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }
 #ghtfzfvkho .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #ghtfzfvkho .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #ghtfzfvkho .gt_left { text-align: left; }
 #ghtfzfvkho .gt_center { text-align: center; }
 #ghtfzfvkho .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #ghtfzfvkho .gt_font_normal { font-weight: normal; }
 #ghtfzfvkho .gt_font_bold { font-weight: bold; }
 #ghtfzfvkho .gt_font_italic { font-style: italic; }
 #ghtfzfvkho .gt_super { font-size: 65%; }
 #ghtfzfvkho .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #ghtfzfvkho .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<tbody>
<tr class="gt_col_headings odd">
<td id="timestamps" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">timestamps</td>
<td id="Temperature" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Temperature</td>
<td id="Dew Point" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Dew Point</td>
<td id="Humidity" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Humidity</td>
<td id="Wind Speed" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Wind Speed</td>
<td id="Wind Gust" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Wind Gust</td>
<td id="Pressure" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Pressure</td>
<td id="Precip. Rate" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Precip. Rate</td>
<td id="Precip. Accum." class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Precip. Accum.</td>
</tr>
</tbody>
<tbody class="gt_table_body">
</tbody>
</table>


</div>
        
</div>
</div>
<p>I will have to find a different nearby weather station for this purpose of finding Ben some weather data for the time period he is interested in (mid 1970s). And, once I succeed at that, I will have to aggregate the 5-minute data to daily data. But once that’s done, my friend should have more than enough weather data to help him with his model.</p>



 ]]></description>
  <category>weather</category>
  <category>python</category>
  <category>web-scraping</category>
  <guid>https://datawolf04.github.io/posts/weatherScrape240808/weatherScrape.html</guid>
  <pubDate>Thu, 08 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Olympic countries: Fun facts and visualizations</title>
  <dc:creator>Steven Wolf</dc:creator>
  <link>https://datawolf04.github.io/posts/olympic240805/olympicMedalData.html</link>
  <description><![CDATA[ 





<p>This week we’re exploring Olympics data!</p>
<p>The data this week comes from the <a href="https://www.kaggle.com/datasets/heesoo37/120-years-of-olympic-history-athletes-and-results/">RGriffin Kaggle dataset: 120 years of Olympic history: athletes and results</a>, basic bio data on athletes and medal results from Athens 1896 to Rio 2016.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggtext)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(showtext)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(janitor)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggdist)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paletteer)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb1-10"></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'olympicMedalResults.RData'</span>)</span></code></pre></div>
</div>
<section id="data-in-this-dataset" class="level2">
<h2 class="anchored" data-anchor-id="data-in-this-dataset">Data in this dataset:</h2>
<p>First, I am planning on analyzing the summer and winter olympics separately. Furthermore, it occurs to me that the year in this dataset should be treated as a <code>factor</code> variable, rather than a numeric variable. This will help if (for example) the olympics were skipped or postponed, and it will definitely help when the winter games were shifted by 2 years so that the intervals between games are uniform.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">countryParticipation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> olympics <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(noc) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(n)) </span></code></pre></div>
</div>
<p>My plan is to plot out participation, medal count, and gold medal count by <del>country</del> NOC region. The reason for this due to the fact that there are an obnoxious number of “teams” (1184) already in this dataset. Also, I don’t think that we want to track the results of “Osborne Swimming Club, Manchester” or “Phalainis ton Thorichtou ‘Psara’-3” on the same level as Spain, China, Brazil, USA, etc. As it stands, there are plenty of countries to keep track of! As it is, there are 230 national olympic committeees. For fun, let’s look at the least frequent participants.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fnfvrfhgjj" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#fnfvrfhgjj table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#fnfvrfhgjj thead, #fnfvrfhgjj tbody, #fnfvrfhgjj tfoot, #fnfvrfhgjj tr, #fnfvrfhgjj td, #fnfvrfhgjj th {
  border-style: none;
}

#fnfvrfhgjj p {
  margin: 0;
  padding: 0;
}

#fnfvrfhgjj .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#fnfvrfhgjj .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#fnfvrfhgjj .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#fnfvrfhgjj .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#fnfvrfhgjj .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#fnfvrfhgjj .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#fnfvrfhgjj .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#fnfvrfhgjj .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#fnfvrfhgjj .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#fnfvrfhgjj .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#fnfvrfhgjj .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#fnfvrfhgjj .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#fnfvrfhgjj .gt_spanner_row {
  border-bottom-style: hidden;
}

#fnfvrfhgjj .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#fnfvrfhgjj .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#fnfvrfhgjj .gt_from_md > :first-child {
  margin-top: 0;
}

#fnfvrfhgjj .gt_from_md > :last-child {
  margin-bottom: 0;
}

#fnfvrfhgjj .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#fnfvrfhgjj .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#fnfvrfhgjj .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#fnfvrfhgjj .gt_row_group_first td {
  border-top-width: 2px;
}

#fnfvrfhgjj .gt_row_group_first th {
  border-top-width: 2px;
}

#fnfvrfhgjj .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#fnfvrfhgjj .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#fnfvrfhgjj .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#fnfvrfhgjj .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#fnfvrfhgjj .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#fnfvrfhgjj .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#fnfvrfhgjj .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#fnfvrfhgjj .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#fnfvrfhgjj .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#fnfvrfhgjj .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#fnfvrfhgjj .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#fnfvrfhgjj .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#fnfvrfhgjj .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#fnfvrfhgjj .gt_left {
  text-align: left;
}

#fnfvrfhgjj .gt_center {
  text-align: center;
}

#fnfvrfhgjj .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#fnfvrfhgjj .gt_font_normal {
  font-weight: normal;
}

#fnfvrfhgjj .gt_font_bold {
  font-weight: bold;
}

#fnfvrfhgjj .gt_font_italic {
  font-style: italic;
}

#fnfvrfhgjj .gt_super {
  font-size: 65%;
}

#fnfvrfhgjj .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#fnfvrfhgjj .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#fnfvrfhgjj .gt_indent_1 {
  text-indent: 5px;
}

#fnfvrfhgjj .gt_indent_2 {
  text-indent: 10px;
}

#fnfvrfhgjj .gt_indent_3 {
  text-indent: 15px;
}

#fnfvrfhgjj .gt_indent_4 {
  text-indent: 20px;
}

#fnfvrfhgjj .gt_indent_5 {
  text-indent: 25px;
}

#fnfvrfhgjj .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#fnfvrfhgjj div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>

<table class="gt_table caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<colgroup>
<col style="width: 50%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="gt_heading header">
<th colspan="2" class="gt_heading gt_title gt_font_normal" style="background-color: #3B7C70; color: #FFFFFF">Olympic participant breakdown</th>
</tr>
<tr class="gt_heading even">
<th colspan="2" class="gt_heading gt_subtitle gt_font_normal gt_bottom_border" style="background-color: #3B7C70; color: #FFFFFF">10 lowest participating countries</th>
</tr>
<tr class="gt_col_headings header">
<th id="Country code" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="background-color: #3B3A3E; color: #FFFFFF" scope="col">Country code</th>
<th id="Participant #" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="background-color: #3B3A3E; color: #FFFFFF" scope="col">Participant #</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="noc">YAR</td>
<td class="gt_row gt_right" headers="n">11</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="noc">BRU</td>
<td class="gt_row gt_right" headers="n">10</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="noc">TLS</td>
<td class="gt_row gt_right" headers="n">9</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="noc">KOS</td>
<td class="gt_row gt_right" headers="n">8</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="noc">TUV</td>
<td class="gt_row gt_right" headers="n">7</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="noc">YMD</td>
<td class="gt_row gt_right" headers="n">5</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="noc">SSD</td>
<td class="gt_row gt_right" headers="n">3</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="noc">NBO</td>
<td class="gt_row gt_right" headers="n">2</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="noc">UNK</td>
<td class="gt_row gt_right" headers="n">2</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="noc">NFL</td>
<td class="gt_row gt_right" headers="n">1</td>
</tr>
</tbody><tfoot class="gt_sourcenotes">
<tr class="odd">
<td colspan="2" class="gt_sourcenote" style="background-color: #3B7C70; color: #FFFFFF"><p><strong>#TidyTuesday</strong> • Source: RGriffin Kaggle dataset</p></td>
</tr>
</tfoot>

</table>

</div>
</div>
</div>
<section id="aside-ummm" class="level3">
<h3 class="anchored" data-anchor-id="aside-ummm">Aside: Ummm…</h3>
<p>What is NFL and who is the lone participant from there?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">olympics <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(noc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NFL"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 1
Columns: 15
$ id     &lt;dbl&gt; 36547
$ name   &lt;chr&gt; "Robert Arthur \"Bob\" Fowler"
$ sex    &lt;chr&gt; "M"
$ age    &lt;dbl&gt; 21
$ height &lt;dbl&gt; 170
$ weight &lt;dbl&gt; 57
$ team   &lt;chr&gt; "Newfoundland"
$ noc    &lt;chr&gt; "NFL"
$ games  &lt;chr&gt; "1904 Summer"
$ year   &lt;dbl&gt; 1904
$ season &lt;chr&gt; "Summer"
$ city   &lt;chr&gt; "St. Louis"
$ sport  &lt;chr&gt; "Athletics"
$ event  &lt;chr&gt; "Athletics Men's Marathon"
$ medal  &lt;chr&gt; NA</code></pre>
</div>
</div>
<p>Ok, wait a minute. So the Canadians don’t want to accept this guy? Was Newfoundland it’s own country back then?</p>
<p><em>(Feverish googling occurs)</em></p>
<p>Well, I’ll be darned, it was! According to <a href="https://en.wikipedia.org/wiki/Newfoundland_and_Labrador">Wikipedia</a>:</p>
<blockquote class="blockquote">
<p>Until 1949, the Dominion of Newfoundland was a separate dominion in the British Empire. In 1933, the House of Assembly of the self-governing dominion voted to dissolve itself and to hand over administration of Newfoundland and Labrador to the British-appointed Commission of Government. This followed the suffering caused by the Great Depression and Newfoundland’s participation in the First World War. On March 31, 1949, it became the 10th and most recent province to join the Canadian Confederation as “Newfoundland”. On December 6, 2001, the Constitution of Canada was amended to change the province’s name from “Newfoundland” to “Newfoundland and Labrador”.</p>
</blockquote>
<p>Huh…I learn something new every day! And here I thought it was because most Canadians think <em>(insert Newfie joke here)</em>.</p>
</section>
</section>
<section id="back-to-the-show" class="level2">
<h2 class="anchored" data-anchor-id="back-to-the-show">Back to the show</h2>
<p>I think that I should create a function that sorts the participation data (and later, the medalist data) by country and year. Also, since 230 lines would make the graph look like messy spaghetti, I think it would be best to limit the results to the top 10 countries by the metric being plotted (participation, number medalists, number gold medalists).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">countByCountryYearSzn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(dat,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>){</span>
<span id="cb5-2">  cbcys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_of</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"season"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"noc"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>)))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-3">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb5-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcount =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()</span>
<span id="cb5-5">      ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb5-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cumCount =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(pcount)</span>
<span id="cb5-8">    )</span>
<span id="cb5-9">  </span>
<span id="cb5-10">  countryTotal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(noc) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(n))</span>
<span id="cb5-12">  </span>
<span id="cb5-13">  nC <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(countryTotal)</span>
<span id="cb5-14">  </span>
<span id="cb5-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(top){</span>
<span id="cb5-16">    cKeep <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> countryTotal[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, ]</span>
<span id="cb5-17">  }<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>{</span>
<span id="cb5-18">    cKeep <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> countryTotal[(nC<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-10</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nC, ]</span>
<span id="cb5-19">  }</span>
<span id="cb5-20">  </span>
<span id="cb5-21">  out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cbcys <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(cKeep,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_by</span>(noc))</span>
<span id="cb5-22">  </span>
<span id="cb5-23">  out<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>noc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(out<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>noc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> cKeep<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>noc)</span>
<span id="cb5-24"></span>
<span id="cb5-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(out)</span>
<span id="cb5-26">}</span></code></pre></div>
</div>
<p>Now, let’s make a graph of olympic participation:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">part <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">countByCountryYearSzn</span>(olympics,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`summarise()` has grouped output by 'season', 'noc'. You can override using the
`.groups` argument.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(part, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>year, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>cumCount, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>noc)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_step</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> season, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_simple</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb8-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>grn,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>grn),</span>
<span id="cb8-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>ltGrn,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>ltGrn),</span>
<span id="cb8-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>ltGrn,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>ltGrn),</span>
<span id="cb8-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>ltGrn,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>ltGrn)</span>
<span id="cb8-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb8-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Olympic participation by country (top 10)"</span>,</span>
<span id="cb8-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year of Olympic Games"</span>,</span>
<span id="cb8-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cumulative participant count"</span>,</span>
<span id="cb8-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> caption_text,</span>
<span id="cb8-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nation"</span></span>
<span id="cb8-15">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_paletteer_d</span>(col_pal_dis_long)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/olympic240805/olympicMedalData_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The medal breakdown</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">olyMedal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> olympics <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(medal))</span>
<span id="cb9-2"></span>
<span id="cb9-3">medalists <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">countByCountryYearSzn</span>(olyMedal,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`summarise()` has grouped output by 'season', 'noc'. You can override using the
`.groups` argument.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(medalists, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>year,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>cumCount,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>noc)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_step</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> season, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_simple</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb11-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>silver,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>silver),</span>
<span id="cb11-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>ltSilver,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>ltSilver),</span>
<span id="cb11-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>ltSilver,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>ltSilver),</span>
<span id="cb11-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>ltSilver,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>ltSilver)</span>
<span id="cb11-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb11-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Olympic medalists by country (top 10)"</span>,</span>
<span id="cb11-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year of Olympic Games"</span>,</span>
<span id="cb11-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cumulative medal count"</span>,</span>
<span id="cb11-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> caption_text,</span>
<span id="cb11-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nation"</span></span>
<span id="cb11-15">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_paletteer_d</span>(col_pal_dis_long)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/olympic240805/olympicMedalData_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I will note that <code>URS</code> is the Soviet Union, and <code>RUS</code> is Russia. Clearly that country’s 20th century history means that it is not treated as continuous by the Olympic Federation. It reminds me of when I was a kid watching <em>Where in the World is Carmen Sandiego</em> and all of a sudden there were new countries on the European maps. &lt;/nostalgia trip&gt;</p>
<p>But you can totally see the rivalry fueled by the Cold War when you look at the “slope” of the summer olympic medal accumulation graph and compare the Soviets (and later, the Russians) to the Americans.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">olyGold <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> olympics <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(medal<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gold"</span>)</span>
<span id="cb12-2"></span>
<span id="cb12-3">goldMetals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">countByCountryYearSzn</span>(olyGold,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`summarise()` has grouped output by 'season', 'noc'. You can override using the
`.groups` argument.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(goldMetals, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>year,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>cumCount,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>noc)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_step</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> season, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_simple</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb14-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>gold,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>gold),</span>
<span id="cb14-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>ltGold,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>ltGold),</span>
<span id="cb14-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>ltGold,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>ltGold),</span>
<span id="cb14-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>ltGold,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>ltGold)</span>
<span id="cb14-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb14-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Olympic Golds by country (top 10)"</span>,</span>
<span id="cb14-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year of Olympic Games"</span>,</span>
<span id="cb14-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cumulative gold metal count"</span>,</span>
<span id="cb14-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> caption_text,</span>
<span id="cb14-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nation"</span></span>
<span id="cb14-15">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_paletteer_d</span>(col_pal_dis_long)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/olympic240805/olympicMedalData_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>tidyTuesday</category>
  <category>R</category>
  <guid>https://datawolf04.github.io/posts/olympic240805/olympicMedalData.html</guid>
  <pubDate>Wed, 07 Aug 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Summer Movies</title>
  <dc:creator>Steven Wolf</dc:creator>
  <link>https://datawolf04.github.io/posts/summerMovies/summerMovies.html</link>
  <description><![CDATA[ 





<p>This week we’re exploring “summer” movies: movies with <em>summer</em> in their title!</p>
<p>The data this week comes from the <a href="https://developer.imdb.com/non-commercial-datasets/">Internet Movie Database</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggtext)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(showtext)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(janitor)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggdist)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(paletteer)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'summerMovie.RData'</span>)</span></code></pre></div>
</div>
<section id="popularity-of-movie-by-year" class="level2">
<h2 class="anchored" data-anchor-id="popularity-of-movie-by-year">Popularity of movie by year</h2>
<p>In some sense how well-known or popular a movie is should depend on the year. I’m guessing that very old movies may not have as many votes in the IMDB system. This could also bias the ratings</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(summer_movies, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>year,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>num_votes)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>oneCol) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year movie released"</span>,</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of ratings"</span>,</span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> caption_text</span>
<span id="cb2-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_simple</span>()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Removed 1 row containing missing values or values outside the scale range
(`geom_point()`).</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/summerMovies/summerMovies_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I can definitely see that there is a volume bias towards newer movies. Let’s explore if this shows up in the ratings.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(summer_movies, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>num_votes, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>average_rating, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>year)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_log10</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trans_breaks</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log10"</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>x),</span>
<span id="cb4-4">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trans_format</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log10"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">math_format</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>.x))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_paletteer_c</span>(col_pal_cont) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb4-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of ratings"</span>,</span>
<span id="cb4-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average rating"</span>,</span>
<span id="cb4-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>,</span>
<span id="cb4-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> caption_text</span>
<span id="cb4-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_simple</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/summerMovies/summerMovies_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>I’d say that there are no truly universally bad summer movies (for example with everyone scoring it a 0 or 1 out of 10). Despite the recency bias in the rating volume, it would seem that movies can be rated poorly or highly regardless of the year the movie was released. It also seems like there is a “reversion to the mean” effect for movies that have more votes, although this could simply be the result of sparse data. By “reversion to the mean” I am referring to the vaguely triangular shape of the blob of points, suggesting that as a movie is rated more and more, the diversity of opinion forces the mean rating to tend away from extreme values.</p>
</section>
<section id="re-imagining-other-work" class="level2">
<h2 class="anchored" data-anchor-id="re-imagining-other-work">Re-imagining other work</h2>
<p>As I’m doing this a bit late in the game, I can take advantage of the work some others have done. I saw <a href="https://github.com/poncest/tidytuesday/tree/main/2024/Week_31">this plot</a>, and thought it would be good to replicate here, with a subtle twist.</p>
<p><img src="https://raw.githubusercontent.com/poncest/tidytuesday/main/2024/Week_31/2024_31.png" class="img-fluid"></p>
<p>Rather than plotting mean values for each genre, I thought I’d make a box plot instead of plotting the average rating. So I will tidy up the data. Furthermore, since I’m creating a box plot, I’m going to remove genres with fewer than <img src="https://latex.codecogs.com/png.latex?N=5"> ratings.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">globalMedian <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(summer_movies<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>average_rating, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb5-2">gDat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> summer_movies <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">separate_longer_delim</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> genres, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">delim =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(genres) </span>
<span id="cb5-4"></span>
<span id="cb5-5">newGenre <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  gDat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb5-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb5-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rating =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(average_rating, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb5-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span></span>
<span id="cb5-10">  )</span>
<span id="cb5-11"></span>
<span id="cb5-12">data4plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_join</span>(newGenre,gDat,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genres"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb5-14">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">genre_count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{genres} ({count})"</span>),</span>
<span id="cb5-15">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">genre_count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(genre_count, rating, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.desc =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>),</span>
<span id="cb5-16">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(rating <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> globalMedian, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yes"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no"</span>)</span>
<span id="cb5-17">      ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(count<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<p>And finally, the plot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(data4plot, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>average_rating, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>genre_count, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>highlight)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(</span>
<span id="cb6-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> globalMedian,</span>
<span id="cb6-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb6-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gray'</span></span>
<span id="cb6-6">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb6-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rating"</span>,</span>
<span id="cb6-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Movie Genre (count)"</span>,</span>
<span id="cb6-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> caption_text</span>
<span id="cb6-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_discrete</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_paletteer_d</span>(col_pal_dis) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clip=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_catY</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://datawolf04.github.io/posts/summerMovies/summerMovies_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="final-notes" class="level2">
<h2 class="anchored" data-anchor-id="final-notes">Final notes</h2>
<p>I just found out about #TidyTuesday, just this week, and I want to participate. So the purpose of this post is mostly to get a blog going, and I hope to update approximately monthly. Now that this post is written, we’ll see if I can get this onto Github Pages. 😄</p>
<p>[Edit: Phew! That worked!]</p>


</section>

 ]]></description>
  <category>tidyTuesday</category>
  <category>R</category>
  <guid>https://datawolf04.github.io/posts/summerMovies/summerMovies.html</guid>
  <pubDate>Fri, 02 Aug 2024 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
