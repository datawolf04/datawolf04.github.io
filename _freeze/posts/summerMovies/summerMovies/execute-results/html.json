{
  "hash": "703684437af2795f78b69bcb13c636e2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Summer Movies\"\ndescription: \"Analyzing the IMDB for movies with 'summer' in the title\"\nauthor: \"Steven Wolf\"\ndate: \"8/2/2024\"\ncategories:\n  - tidyTuesday\n  - R\nresources: \n  - \"summerMovie.RData\"\n---\n\n\n\nThis week we're exploring \"summer\" movies: movies with *summer* in their title!\n\nThe data this week comes from the [Internet Movie Database](https://developer.imdb.com/non-commercial-datasets/).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(janitor)\nlibrary(ggdist)\nlibrary(ggrepel)\nlibrary(scales)\nlibrary(paletteer)\n\nload('summerMovie.RData')\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Popularity of movie by year\n\nIn some sense how well-known or popular a movie is should depend on the year. I'm guessing that very old movies may not have as many votes in the IMDB system. This could also bias the ratings\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(summer_movies, aes(x=year,y=num_votes)) +\n  geom_point(color=oneCol) + \n  labs(\n    x = \"Year movie released\",\n    y = \"Number of ratings\",\n    caption = caption_text\n  ) + theme_simple()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](summerMovies_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nI can definitely see that there is a volume bias towards newer movies. Let's explore if this shows up in the ratings.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(summer_movies, aes(x=num_votes, y=average_rating, color=year)) +\n  geom_point() + \n  scale_x_log10(breaks = trans_breaks(\"log10\", function(x) 10^x),\n                labels = trans_format(\"log10\", math_format(10^.x))) +\n  scale_y_continuous(limits = c(0,10)) + \n  scale_color_paletteer_c(col_pal_cont) +\n  labs(\n    x = \"Number of ratings\",\n    y = \"Average rating\",\n    color = \"Year\",\n    caption = caption_text\n  ) + theme_simple()\n```\n\n::: {.cell-output-display}\n![](summerMovies_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nI'd say that there are no truly universally bad summer movies (for example with everyone scoring it a 0 or 1 out of 10). Despite the recency bias in the rating volume, it would seem that movies can be rated poorly or highly regardless of the year the movie was released. It also seems like there is a \"reversion to the mean\" effect for movies that have more votes, although this could simply be the result of sparse data. By \"reversion to the mean\" I am referring to the vaguely triangular shape of the blob of points, suggesting that as a movie is rated more and more, the diversity of opinion forces the mean rating to tend away from extreme values.\n\n## Re-imagining other work\n\nAs I'm doing this a bit late in the game, I can take advantage of the work some others have done. I saw \n[this plot](https://github.com/poncest/tidytuesday/tree/main/2024/Week_31), and thought it would be good to replicate here, with a subtle twist.\n\n![](https://raw.githubusercontent.com/poncest/tidytuesday/main/2024/Week_31/2024_31.png)\n\nRather than plotting mean values for each genre, I thought I'd make a box plot instead of plotting the average rating. So I will tidy up the data. Furthermore, since I'm creating a box plot, I'm going to remove genres with fewer than $N=5$ ratings.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobalMedian = median(summer_movies$average_rating, na.rm = TRUE)\ngDat <- summer_movies |> separate_longer_delim(cols = genres, delim = \",\") |>\n  group_by(genres) \n\nnewGenre <-  gDat |>\n  summarise(\n    count = n(),\n    rating = median(average_rating, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\ndata4plot = full_join(newGenre,gDat,by=\"genres\") |>\n  mutate(\n      genre_count = str_glue(\"{genres} ({count})\"),\n      genre_count = fct_reorder(genre_count, rating, .desc = FALSE),\n      highlight = ifelse(rating >= globalMedian, \"yes\",\"no\")\n      ) |>\n  filter(count>=5)\n```\n:::\n\n\n\nAnd finally, the plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data4plot, aes(x=average_rating, y=genre_count, fill=highlight)) +\n  geom_vline(\n    xintercept = globalMedian,\n    linewidth = .5,\n    color = 'gray'\n    ) +\n  geom_boxplot() +\n  labs(\n    x = \"Rating\",\n    y = \"Movie Genre (count)\",\n    caption = caption_text\n  ) +\n  scale_x_continuous(breaks = seq(2,10,by=1), limits=c(2,10)) +\n  scale_y_discrete() +\n  scale_fill_paletteer_d(col_pal_dis) +\n  coord_cartesian(clip='off') + theme_catY()\n```\n\n::: {.cell-output-display}\n![](summerMovies_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Final notes\nI just found out about #TidyTuesday, just this week, and I want to participate. So the purpose of this post is mostly to get a blog going, and I hope to update approximately monthly. Now that this post is written, we'll see if I can get this onto Github Pages. ðŸ˜„\n\n[Edit: Phew! That worked!]\n",
    "supporting": [
      "summerMovies_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}