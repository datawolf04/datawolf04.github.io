---
title: "A new project: Cross Country Data Viz"
description: "Visualizing Cross Country results."
author: "Steven Wolf"
date: "9/3/2025"
categories:
  - Cross Country Data 
  - R
  - Python
execute: 
  messages: false
  warning: false
  echo: false
---

```{r}
library(tidyverse)
library(gt)
library(gtExtras)
library(readxl)
library(grid)
library(gtable)

source('ccMeetTools.R')
meetResults = read_csv('fightertownInvite.csv')
meetID = 'fightertown-xc-invitational'

```

It's been a while since I've posted on this portion of my blog. I've been getting geared up for my sons' upcoming Cross Country seasons. As a former NCAA athlete in this sport (not good enough for a scholarship), I get very fired up this time of year. So I've been scraping some results from Milesplit and visualizing the team results.

## Cross Country Scoring Primer
Cross country races are scored as follows. Each team can have up to 7 athletes for scoring purposes. The team score is found by adding up the places of the top 5 athletes from each team. Low score wins. Teams that have 5 or 6 athletes will also receive scores. 

- The best possible Cross Country score is $1+2+3+4+5=15$ points. A shut-out is when all 7 athletes from one team finish before the first athlete from the second team. In a dual meet (where there are only two teams) this results in a 15-50 score.

- If two teams are tied, the tie is broken by the 6th and 7th athletes. (Fun fact, my senior year of high school, the team that won did so on this tie breaker. The 3rd place team was one point behind them. It was an incredibly tight race!)

This is the team score from the [Fightertown Invitational](https://nc.milesplit.com/meets/655522-fightertown-xc-invitational-2025/results) where my son set a new PR!

```{r}
scoreMeet(meetResults, meetID, "Boys", "Varsity") 
```

This is all well and good, and there are some string formatting things I could probably do. But this isn't very visual. And I like making visualizations.

## Some visualizations that I've been testing out.
It's neat to see how the teams stack up. So the first visualization represents each athlete with a dot and each team with a color/row. This visualization includes all athletes in the race, even those that didn't contribute to the team scoring. I like it because you can see where the athletes are grouped together. Indeed, many cross country coaches encourage their teams to run as a pack for scoring purposes as well as teamwork purposes.

```{r}
#| fig-height: 5
makePlacePlot(meetResults, meetID, "Boys", "Varsity")
```

One limitation with the above visualization is that the values on the x-axis are simply the place in the race. In the parlance of statistics, this is called *ordinal* data. So this means that the values are ordered (2nd place is before 3rd place), but it doesn't tell us anything about the gap between the runners. It could have been 20 seconds, 2 seconds, or even 0.2 seconds. So in the figure below, I'm using the time instead of the place on the x-axis, changing how the dots are bunched together.

```{r}
#| fig-height: 7
makeTimePlot(meetResults, meetID, "Boys", "Varsity")
```

One other benefit of this is that we can see the distribution of times in the race. The bottom figure is a density plot as if the dots in the top portion of the plot were binned and turned into a histogram, and then smoothed out. (For the nerdy: this is called [Kernel Density Estimation](https://en.wikipedia.org/wiki/Kernel_density_estimation).)

Neither of these visualizations are standard in the Cross Country result reporting space. But they help me "see" what went on, even though I was there. And I could see talking about improvement and other things with an athlete using these plots as a starting point.